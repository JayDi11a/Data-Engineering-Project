[2024-06-28T21:40:34.349+0000] {taskinstance.py:1159} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: kafka_spark_dag.pyspark_consumer manual__2024-06-28T21:40:30.242517+00:00 [queued]>
[2024-06-28T21:40:34.353+0000] {taskinstance.py:1159} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: kafka_spark_dag.pyspark_consumer manual__2024-06-28T21:40:30.242517+00:00 [queued]>
[2024-06-28T21:40:34.353+0000] {taskinstance.py:1361} INFO - Starting attempt 1 of 2
[2024-06-28T21:40:34.358+0000] {taskinstance.py:1382} INFO - Executing <Task(DockerOperator): pyspark_consumer> on 2024-06-28 21:40:30.242517+00:00
[2024-06-28T21:40:34.361+0000] {standard_task_runner.py:57} INFO - Started process 12905 to run task
[2024-06-28T21:40:34.363+0000] {standard_task_runner.py:84} INFO - Running: ['***', 'tasks', 'run', 'kafka_spark_dag', 'pyspark_consumer', 'manual__2024-06-28T21:40:30.242517+00:00', '--job-id', '209', '--raw', '--subdir', 'DAGS_FOLDER/dag_kafka_spark.py', '--cfg-path', '/tmp/tmpkiovt6ac']
[2024-06-28T21:40:34.365+0000] {standard_task_runner.py:85} INFO - Job 209: Subtask pyspark_consumer
[2024-06-28T21:40:34.386+0000] {task_command.py:416} INFO - Running <TaskInstance: kafka_spark_dag.pyspark_consumer manual__2024-06-28T21:40:30.242517+00:00 [running]> on host cd176cdca805
[2024-06-28T21:40:34.419+0000] {taskinstance.py:1662} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='***' AIRFLOW_CTX_DAG_ID='kafka_spark_dag' AIRFLOW_CTX_TASK_ID='pyspark_consumer' AIRFLOW_CTX_EXECUTION_DATE='2024-06-28T21:40:30.242517+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='manual__2024-06-28T21:40:30.242517+00:00'
[2024-06-28T21:40:34.440+0000] {docker.py:343} INFO - Starting docker container from image current-headlines/spark:latest
[2024-06-28T21:40:34.717+0000] {docker.py:413} INFO - [38;5;6mspark [38;5;5m21:40:34.71 [0m[38;5;2mINFO [0m ==>
[2024-06-28T21:40:34.718+0000] {docker.py:413} INFO - [38;5;6mspark [38;5;5m21:40:34.71 [0m[38;5;2mINFO [0m ==> [1mWelcome to the Bitnami spark container[0m
[2024-06-28T21:40:34.719+0000] {docker.py:413} INFO - [38;5;6mspark [38;5;5m21:40:34.71 [0m[38;5;2mINFO [0m ==> Subscribe to project updates by watching [1mhttps://github.com/bitnami/containers[0m
[2024-06-28T21:40:34.719+0000] {docker.py:413} INFO - [38;5;6mspark [38;5;5m21:40:34.71 [0m[38;5;2mINFO [0m ==> Submit issues and feature requests at [1mhttps://github.com/bitnami/containers/issues[0m
[2024-06-28T21:40:34.720+0000] {docker.py:413} INFO - [38;5;6mspark [38;5;5m21:40:34.72 [0m[38;5;2mINFO [0m ==>
[2024-06-28T21:40:34.725+0000] {docker.py:413} INFO - 
[2024-06-28T21:40:35.789+0000] {docker.py:413} INFO - :: loading settings :: url = jar:file:/opt/bitnami/spark/jars/ivy-2.5.1.jar!/org/apache/ivy/core/settings/ivysettings.xml
[2024-06-28T21:40:35.826+0000] {docker.py:413} INFO - Ivy Default Cache set to: /opt/bitnami/spark/.ivy2/cache
The jars for the packages stored in: /opt/bitnami/spark/.ivy2/jars
[2024-06-28T21:40:35.829+0000] {docker.py:413} INFO - org.postgresql#postgresql added as a dependency
org.apache.spark#spark-sql-kafka-0-10_2.12 added as a dependency
[2024-06-28T21:40:35.830+0000] {docker.py:413} INFO - :: resolving dependencies :: org.apache.spark#spark-submit-parent-56a228e3-19eb-44d7-9821-d8d5ec9c61cd;1.0
	confs: [default]
[2024-06-28T21:40:36.381+0000] {docker.py:413} INFO - found org.postgresql#postgresql;42.5.4 in central
[2024-06-28T21:40:36.515+0000] {docker.py:413} INFO - found org.checkerframework#checker-qual;3.5.0 in central
[2024-06-28T21:40:38.401+0000] {docker.py:413} INFO - found org.apache.spark#spark-sql-kafka-0-10_2.12;3.5.0 in central
[2024-06-28T21:40:38.927+0000] {docker.py:413} INFO - found org.apache.spark#spark-token-provider-kafka-0-10_2.12;3.5.0 in central
[2024-06-28T21:40:39.031+0000] {docker.py:413} INFO - found org.apache.kafka#kafka-clients;3.4.1 in central
[2024-06-28T21:40:39.408+0000] {docker.py:413} INFO - found org.lz4#lz4-java;1.8.0 in central
[2024-06-28T21:40:39.928+0000] {docker.py:413} INFO - found org.xerial.snappy#snappy-java;1.1.10.3 in central
[2024-06-28T21:40:41.642+0000] {docker.py:413} INFO - found org.slf4j#slf4j-api;2.0.7 in central
[2024-06-28T21:40:47.164+0000] {docker.py:413} INFO - found org.apache.hadoop#hadoop-client-runtime;3.3.4 in central
[2024-06-28T21:40:47.398+0000] {docker.py:413} INFO - found org.apache.hadoop#hadoop-client-api;3.3.4 in central
[2024-06-28T21:40:50.556+0000] {docker.py:413} INFO - found commons-logging#commons-logging;1.1.3 in central
[2024-06-28T21:40:50.692+0000] {docker.py:413} INFO - found com.google.code.findbugs#jsr305;3.0.0 in central
[2024-06-28T21:40:53.026+0000] {docker.py:413} INFO - found org.apache.commons#commons-pool2;2.11.1 in central
[2024-06-28T21:40:53.074+0000] {docker.py:413} INFO - downloading https://repo1.maven.org/maven2/org/postgresql/postgresql/42.5.4/postgresql-42.5.4.jar ...
[2024-06-28T21:41:14.534+0000] {docker.py:413} INFO - [SUCCESSFUL ] org.postgresql#postgresql;42.5.4!postgresql.jar (21501ms)
[2024-06-28T21:41:14.577+0000] {docker.py:413} INFO - downloading https://repo1.maven.org/maven2/org/apache/spark/spark-sql-kafka-0-10_2.12/3.5.0/spark-sql-kafka-0-10_2.12-3.5.0.jar ...
[2024-06-28T21:41:19.268+0000] {docker.py:413} INFO - [SUCCESSFUL ] org.apache.spark#spark-sql-kafka-0-10_2.12;3.5.0!spark-sql-kafka-0-10_2.12.jar (4732ms)
[2024-06-28T21:41:19.313+0000] {docker.py:413} INFO - downloading https://repo1.maven.org/maven2/org/checkerframework/checker-qual/3.5.0/checker-qual-3.5.0.jar ...
[2024-06-28T21:41:22.641+0000] {docker.py:413} INFO - [SUCCESSFUL ] org.checkerframework#checker-qual;3.5.0!checker-qual.jar (3371ms)
[2024-06-28T21:41:23.045+0000] {docker.py:413} INFO - downloading https://repo1.maven.org/maven2/org/apache/spark/spark-token-provider-kafka-0-10_2.12/3.5.0/spark-token-provider-kafka-0-10_2.12-3.5.0.jar ...
[2024-06-28T21:41:25.636+0000] {docker.py:413} INFO - [SUCCESSFUL ] org.apache.spark#spark-token-provider-kafka-0-10_2.12;3.5.0!spark-token-provider-kafka-0-10_2.12.jar (2994ms)
[2024-06-28T21:41:25.699+0000] {docker.py:413} INFO - downloading https://repo1.maven.org/maven2/org/apache/kafka/kafka-clients/3.4.1/kafka-clients-3.4.1.jar ...
[2024-06-28T21:43:01.014+0000] {docker.py:413} INFO - [SUCCESSFUL ] org.apache.kafka#kafka-clients;3.4.1!kafka-clients.jar (95354ms)
[2024-06-28T21:43:01.076+0000] {docker.py:413} INFO - downloading https://repo1.maven.org/maven2/com/google/code/findbugs/jsr305/3.0.0/jsr305-3.0.0.jar ...
[2024-06-28T21:43:01.423+0000] {docker.py:413} INFO - [SUCCESSFUL ] com.google.code.findbugs#jsr305;3.0.0!jsr305.jar (399ms)
[2024-06-28T21:43:01.485+0000] {docker.py:413} INFO - downloading https://repo1.maven.org/maven2/org/apache/commons/commons-pool2/2.11.1/commons-pool2-2.11.1.jar ...
[2024-06-28T21:43:03.492+0000] {docker.py:413} INFO - [SUCCESSFUL ] org.apache.commons#commons-pool2;2.11.1!commons-pool2.jar (2068ms)
[2024-06-28T21:43:03.534+0000] {docker.py:413} INFO - downloading https://repo1.maven.org/maven2/org/apache/hadoop/hadoop-client-runtime/3.3.4/hadoop-client-runtime-3.3.4.jar ...
[2024-06-28T21:50:57.913+0000] {docker.py:413} INFO - [SUCCESSFUL ] org.apache.hadoop#hadoop-client-runtime;3.3.4!hadoop-client-runtime.jar (474417ms)
[2024-06-28T21:50:57.954+0000] {docker.py:413} INFO - downloading https://repo1.maven.org/maven2/org/lz4/lz4-java/1.8.0/lz4-java-1.8.0.jar ...
[2024-06-28T21:51:07.059+0000] {docker.py:413} INFO - [SUCCESSFUL ] org.lz4#lz4-java;1.8.0!lz4-java.jar (9144ms)
[2024-06-28T21:51:07.106+0000] {docker.py:413} INFO - downloading https://repo1.maven.org/maven2/org/xerial/snappy/snappy-java/1.1.10.3/snappy-java-1.1.10.3.jar ...
[2024-06-28T21:51:49.997+0000] {docker.py:413} INFO - [SUCCESSFUL ] org.xerial.snappy#snappy-java;1.1.10.3!snappy-java.jar(bundle) (42934ms)
[2024-06-28T21:51:50.045+0000] {docker.py:413} INFO - downloading https://repo1.maven.org/maven2/org/slf4j/slf4j-api/2.0.7/slf4j-api-2.0.7.jar ...
[2024-06-28T21:51:50.516+0000] {docker.py:413} INFO - [SUCCESSFUL ] org.slf4j#slf4j-api;2.0.7!slf4j-api.jar (516ms)
[2024-06-28T21:51:50.556+0000] {docker.py:413} INFO - downloading https://repo1.maven.org/maven2/org/apache/hadoop/hadoop-client-api/3.3.4/hadoop-client-api-3.3.4.jar ...
[2024-06-28T21:56:00.201+0000] {docker.py:413} INFO - [SUCCESSFUL ] org.apache.hadoop#hadoop-client-api;3.3.4!hadoop-client-api.jar (249674ms)
[2024-06-28T21:56:00.255+0000] {docker.py:413} INFO - downloading https://repo1.maven.org/maven2/commons-logging/commons-logging/1.1.3/commons-logging-1.1.3.jar ...
[2024-06-28T21:56:01.129+0000] {docker.py:413} INFO - [SUCCESSFUL ] commons-logging#commons-logging;1.1.3!commons-logging.jar (914ms)
[2024-06-28T21:56:01.130+0000] {docker.py:413} INFO - :: resolution report :: resolve 17201ms :: artifacts dl 908098ms
[2024-06-28T21:56:01.131+0000] {docker.py:413} INFO - :: modules in use:
[2024-06-28T21:56:01.131+0000] {docker.py:413} INFO - com.google.code.findbugs#jsr305;3.0.0 from central in [default]
[2024-06-28T21:56:01.132+0000] {docker.py:413} INFO - commons-logging#commons-logging;1.1.3 from central in [default]
[2024-06-28T21:56:01.132+0000] {docker.py:413} INFO - org.apache.commons#commons-pool2;2.11.1 from central in [default]
[2024-06-28T21:56:01.132+0000] {docker.py:413} INFO - org.apache.hadoop#hadoop-client-api;3.3.4 from central in [default]
[2024-06-28T21:56:01.133+0000] {docker.py:413} INFO - org.apache.hadoop#hadoop-client-runtime;3.3.4 from central in [default]
[2024-06-28T21:56:01.133+0000] {docker.py:413} INFO - org.apache.kafka#kafka-clients;3.4.1 from central in [default]
[2024-06-28T21:56:01.133+0000] {docker.py:413} INFO - org.apache.spark#spark-sql-kafka-0-10_2.12;3.5.0 from central in [default]
	org.apache.spark#spark-token-provider-kafka-0-10_2.12;3.5.0 from central in [default]
[2024-06-28T21:56:01.134+0000] {docker.py:413} INFO - org.checkerframework#checker-qual;3.5.0 from central in [default]
[2024-06-28T21:56:01.134+0000] {docker.py:413} INFO - org.lz4#lz4-java;1.8.0 from central in [default]
	org.postgresql#postgresql;42.5.4 from central in [default]
	org.slf4j#slf4j-api;2.0.7 from central in [default]
[2024-06-28T21:56:01.134+0000] {docker.py:413} INFO - org.xerial.snappy#snappy-java;1.1.10.3 from central in [default]
[2024-06-28T21:56:01.135+0000] {docker.py:413} INFO - ---------------------------------------------------------------------
[2024-06-28T21:56:01.135+0000] {docker.py:413} INFO - |                  |            modules            ||   artifacts   |
[2024-06-28T21:56:01.135+0000] {docker.py:413} INFO - |       conf       | number| search|dwnlded|evicted|| number|dwnlded|
	---------------------------------------------------------------------
[2024-06-28T21:56:01.136+0000] {docker.py:413} INFO - |      default     |   13  |   13  |   13  |   0   ||   13  |   13  |
	---------------------------------------------------------------------
[2024-06-28T21:56:01.172+0000] {docker.py:413} INFO - :: retrieving :: org.apache.spark#spark-submit-parent-56a228e3-19eb-44d7-9821-d8d5ec9c61cd
	confs: [default]
[2024-06-28T21:56:01.299+0000] {docker.py:413} INFO - 13 artifacts copied, 0 already retrieved (58001kB/127ms)
[2024-06-28T21:56:01.457+0000] {docker.py:413} INFO - 24/06/28 21:56:01 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
[2024-06-28T21:56:02.136+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO SparkContext: Running Spark version 3.5.0
[2024-06-28T21:56:02.137+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO SparkContext: OS info Linux, 6.6.12-linuxkit, aarch64
[2024-06-28T21:56:02.137+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO SparkContext: Java version 17.0.10
[2024-06-28T21:56:02.150+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO ResourceUtils: ==============================================================
[2024-06-28T21:56:02.150+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO ResourceUtils: No custom resources configured for spark.driver.
[2024-06-28T21:56:02.152+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO ResourceUtils: ==============================================================
[2024-06-28T21:56:02.152+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO SparkContext: Submitted application: PostgreSQL Connection with PySpark
[2024-06-28T21:56:02.163+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO ResourceProfile: Default ResourceProfile created, executor resources: Map(cores -> name: cores, amount: 1, script: , vendor: , memory -> name: memory, amount: 1024, script: , vendor: , offHeap -> name: offHeap, amount: 0, script: , vendor: ), task resources: Map(cpus -> name: cpus, amount: 1.0)
[2024-06-28T21:56:02.167+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO ResourceProfile: Limiting resource is cpu
[2024-06-28T21:56:02.167+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO ResourceProfileManager: Added ResourceProfile id: 0
[2024-06-28T21:56:02.201+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO SecurityManager: Changing view acls to: spark
[2024-06-28T21:56:02.201+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO SecurityManager: Changing modify acls to: spark
[2024-06-28T21:56:02.201+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO SecurityManager: Changing view acls groups to:
[2024-06-28T21:56:02.202+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO SecurityManager: Changing modify acls groups to:
[2024-06-28T21:56:02.203+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users with view permissions: spark; groups with view permissions: EMPTY; users with modify permissions: spark; groups with modify permissions: EMPTY
[2024-06-28T21:56:02.315+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO Utils: Successfully started service 'sparkDriver' on port 39575.
[2024-06-28T21:56:02.328+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO SparkEnv: Registering MapOutputTracker
[2024-06-28T21:56:02.346+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO SparkEnv: Registering BlockManagerMaster
[2024-06-28T21:56:02.354+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO BlockManagerMasterEndpoint: Using org.apache.spark.storage.DefaultTopologyMapper for getting topology information
[2024-06-28T21:56:02.355+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO BlockManagerMasterEndpoint: BlockManagerMasterEndpoint up
[2024-06-28T21:56:02.356+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO SparkEnv: Registering BlockManagerMasterHeartbeat
[2024-06-28T21:56:02.366+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO DiskBlockManager: Created local directory at /tmp/blockmgr-e1d10ba1-af4e-4c94-bb13-a71b3ba78b74
[2024-06-28T21:56:02.374+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO MemoryStore: MemoryStore started with capacity 434.4 MiB
[2024-06-28T21:56:02.381+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO SparkEnv: Registering OutputCommitCoordinator
[2024-06-28T21:56:02.458+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO JettyUtils: Start Jetty 0.0.0.0:4040 for SparkUI
[2024-06-28T21:56:02.491+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO Utils: Successfully started service 'SparkUI' on port 4040.
[2024-06-28T21:56:02.511+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO SparkContext: Added JAR file:///opt/bitnami/spark/.ivy2/jars/org.postgresql_postgresql-42.5.4.jar at spark://localhost:39575/jars/org.postgresql_postgresql-42.5.4.jar with timestamp 1719611762131
[2024-06-28T21:56:02.511+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO SparkContext: Added JAR file:///opt/bitnami/spark/.ivy2/jars/org.apache.spark_spark-sql-kafka-0-10_2.12-3.5.0.jar at spark://localhost:39575/jars/org.apache.spark_spark-sql-kafka-0-10_2.12-3.5.0.jar with timestamp 1719611762131
[2024-06-28T21:56:02.512+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO SparkContext: Added JAR file:///opt/bitnami/spark/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar at spark://localhost:39575/jars/org.checkerframework_checker-qual-3.5.0.jar with timestamp 1719611762131
[2024-06-28T21:56:02.512+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO SparkContext: Added JAR file:///opt/bitnami/spark/.ivy2/jars/org.apache.spark_spark-token-provider-kafka-0-10_2.12-3.5.0.jar at spark://localhost:39575/jars/org.apache.spark_spark-token-provider-kafka-0-10_2.12-3.5.0.jar with timestamp 1719611762131
[2024-06-28T21:56:02.512+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO SparkContext: Added JAR file:///opt/bitnami/spark/.ivy2/jars/org.apache.kafka_kafka-clients-3.4.1.jar at spark://localhost:39575/jars/org.apache.kafka_kafka-clients-3.4.1.jar with timestamp 1719611762131
[2024-06-28T21:56:02.512+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO SparkContext: Added JAR file:///opt/bitnami/spark/.ivy2/jars/com.google.code.findbugs_jsr305-3.0.0.jar at spark://localhost:39575/jars/com.google.code.findbugs_jsr305-3.0.0.jar with timestamp 1719611762131
24/06/28 21:56:02 INFO SparkContext: Added JAR file:///opt/bitnami/spark/.ivy2/jars/org.apache.commons_commons-pool2-2.11.1.jar at spark://localhost:39575/jars/org.apache.commons_commons-pool2-2.11.1.jar with timestamp 1719611762131
[2024-06-28T21:56:02.513+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO SparkContext: Added JAR file:///opt/bitnami/spark/.ivy2/jars/org.apache.hadoop_hadoop-client-runtime-3.3.4.jar at spark://localhost:39575/jars/org.apache.hadoop_hadoop-client-runtime-3.3.4.jar with timestamp 1719611762131
[2024-06-28T21:56:02.513+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO SparkContext: Added JAR file:///opt/bitnami/spark/.ivy2/jars/org.lz4_lz4-java-1.8.0.jar at spark://localhost:39575/jars/org.lz4_lz4-java-1.8.0.jar with timestamp 1719611762131
[2024-06-28T21:56:02.513+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO SparkContext: Added JAR file:///opt/bitnami/spark/.ivy2/jars/org.xerial.snappy_snappy-java-1.1.10.3.jar at spark://localhost:39575/jars/org.xerial.snappy_snappy-java-1.1.10.3.jar with timestamp 1719611762131
[2024-06-28T21:56:02.513+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO SparkContext: Added JAR file:///opt/bitnami/spark/.ivy2/jars/org.slf4j_slf4j-api-2.0.7.jar at spark://localhost:39575/jars/org.slf4j_slf4j-api-2.0.7.jar with timestamp 1719611762131
[2024-06-28T21:56:02.514+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO SparkContext: Added JAR file:///opt/bitnami/spark/.ivy2/jars/org.apache.hadoop_hadoop-client-api-3.3.4.jar at spark://localhost:39575/jars/org.apache.hadoop_hadoop-client-api-3.3.4.jar with timestamp 1719611762131
24/06/28 21:56:02 INFO SparkContext: Added JAR file:///opt/bitnami/spark/.ivy2/jars/commons-logging_commons-logging-1.1.3.jar at spark://localhost:39575/jars/commons-logging_commons-logging-1.1.3.jar with timestamp 1719611762131
[2024-06-28T21:56:02.514+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO SparkContext: Added file file:///opt/bitnami/spark/.ivy2/jars/org.postgresql_postgresql-42.5.4.jar at file:///opt/bitnami/spark/.ivy2/jars/org.postgresql_postgresql-42.5.4.jar with timestamp 1719611762131
[2024-06-28T21:56:02.514+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO Utils: Copying /opt/bitnami/spark/.ivy2/jars/org.postgresql_postgresql-42.5.4.jar to /tmp/spark-fa8688b5-f0d1-4ae7-aa45-51ddf0864ceb/userFiles-451740d0-2f0a-4f62-b2fe-ad8fab63b23b/org.postgresql_postgresql-42.5.4.jar
[2024-06-28T21:56:02.519+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO SparkContext: Added file file:///opt/bitnami/spark/.ivy2/jars/org.apache.spark_spark-sql-kafka-0-10_2.12-3.5.0.jar at file:///opt/bitnami/spark/.ivy2/jars/org.apache.spark_spark-sql-kafka-0-10_2.12-3.5.0.jar with timestamp 1719611762131
[2024-06-28T21:56:02.520+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO Utils: Copying /opt/bitnami/spark/.ivy2/jars/org.apache.spark_spark-sql-kafka-0-10_2.12-3.5.0.jar to /tmp/spark-fa8688b5-f0d1-4ae7-aa45-51ddf0864ceb/userFiles-451740d0-2f0a-4f62-b2fe-ad8fab63b23b/org.apache.spark_spark-sql-kafka-0-10_2.12-3.5.0.jar
[2024-06-28T21:56:02.522+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO SparkContext: Added file file:///opt/bitnami/spark/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar at file:///opt/bitnami/spark/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar with timestamp 1719611762131
[2024-06-28T21:56:02.522+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO Utils: Copying /opt/bitnami/spark/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar to /tmp/spark-fa8688b5-f0d1-4ae7-aa45-51ddf0864ceb/userFiles-451740d0-2f0a-4f62-b2fe-ad8fab63b23b/org.checkerframework_checker-qual-3.5.0.jar
[2024-06-28T21:56:02.526+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO SparkContext: Added file file:///opt/bitnami/spark/.ivy2/jars/org.apache.spark_spark-token-provider-kafka-0-10_2.12-3.5.0.jar at file:///opt/bitnami/spark/.ivy2/jars/org.apache.spark_spark-token-provider-kafka-0-10_2.12-3.5.0.jar with timestamp 1719611762131
[2024-06-28T21:56:02.526+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO Utils: Copying /opt/bitnami/spark/.ivy2/jars/org.apache.spark_spark-token-provider-kafka-0-10_2.12-3.5.0.jar to /tmp/spark-fa8688b5-f0d1-4ae7-aa45-51ddf0864ceb/userFiles-451740d0-2f0a-4f62-b2fe-ad8fab63b23b/org.apache.spark_spark-token-provider-kafka-0-10_2.12-3.5.0.jar
[2024-06-28T21:56:02.529+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO SparkContext: Added file file:///opt/bitnami/spark/.ivy2/jars/org.apache.kafka_kafka-clients-3.4.1.jar at file:///opt/bitnami/spark/.ivy2/jars/org.apache.kafka_kafka-clients-3.4.1.jar with timestamp 1719611762131
[2024-06-28T21:56:02.529+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO Utils: Copying /opt/bitnami/spark/.ivy2/jars/org.apache.kafka_kafka-clients-3.4.1.jar to /tmp/spark-fa8688b5-f0d1-4ae7-aa45-51ddf0864ceb/userFiles-451740d0-2f0a-4f62-b2fe-ad8fab63b23b/org.apache.kafka_kafka-clients-3.4.1.jar
[2024-06-28T21:56:02.534+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO SparkContext: Added file file:///opt/bitnami/spark/.ivy2/jars/com.google.code.findbugs_jsr305-3.0.0.jar at file:///opt/bitnami/spark/.ivy2/jars/com.google.code.findbugs_jsr305-3.0.0.jar with timestamp 1719611762131
[2024-06-28T21:56:02.535+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO Utils: Copying /opt/bitnami/spark/.ivy2/jars/com.google.code.findbugs_jsr305-3.0.0.jar to /tmp/spark-fa8688b5-f0d1-4ae7-aa45-51ddf0864ceb/userFiles-451740d0-2f0a-4f62-b2fe-ad8fab63b23b/com.google.code.findbugs_jsr305-3.0.0.jar
[2024-06-28T21:56:02.536+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO SparkContext: Added file file:///opt/bitnami/spark/.ivy2/jars/org.apache.commons_commons-pool2-2.11.1.jar at file:///opt/bitnami/spark/.ivy2/jars/org.apache.commons_commons-pool2-2.11.1.jar with timestamp 1719611762131
[2024-06-28T21:56:02.537+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO Utils: Copying /opt/bitnami/spark/.ivy2/jars/org.apache.commons_commons-pool2-2.11.1.jar to /tmp/spark-fa8688b5-f0d1-4ae7-aa45-51ddf0864ceb/userFiles-451740d0-2f0a-4f62-b2fe-ad8fab63b23b/org.apache.commons_commons-pool2-2.11.1.jar
[2024-06-28T21:56:02.539+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO SparkContext: Added file file:///opt/bitnami/spark/.ivy2/jars/org.apache.hadoop_hadoop-client-runtime-3.3.4.jar at file:///opt/bitnami/spark/.ivy2/jars/org.apache.hadoop_hadoop-client-runtime-3.3.4.jar with timestamp 1719611762131
[2024-06-28T21:56:02.539+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO Utils: Copying /opt/bitnami/spark/.ivy2/jars/org.apache.hadoop_hadoop-client-runtime-3.3.4.jar to /tmp/spark-fa8688b5-f0d1-4ae7-aa45-51ddf0864ceb/userFiles-451740d0-2f0a-4f62-b2fe-ad8fab63b23b/org.apache.hadoop_hadoop-client-runtime-3.3.4.jar
[2024-06-28T21:56:02.573+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO SparkContext: Added file file:///opt/bitnami/spark/.ivy2/jars/org.lz4_lz4-java-1.8.0.jar at file:///opt/bitnami/spark/.ivy2/jars/org.lz4_lz4-java-1.8.0.jar with timestamp 1719611762131
[2024-06-28T21:56:02.574+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO Utils: Copying /opt/bitnami/spark/.ivy2/jars/org.lz4_lz4-java-1.8.0.jar to /tmp/spark-fa8688b5-f0d1-4ae7-aa45-51ddf0864ceb/userFiles-451740d0-2f0a-4f62-b2fe-ad8fab63b23b/org.lz4_lz4-java-1.8.0.jar
[2024-06-28T21:56:02.576+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO SparkContext: Added file file:///opt/bitnami/spark/.ivy2/jars/org.xerial.snappy_snappy-java-1.1.10.3.jar at file:///opt/bitnami/spark/.ivy2/jars/org.xerial.snappy_snappy-java-1.1.10.3.jar with timestamp 1719611762131
[2024-06-28T21:56:02.577+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO Utils: Copying /opt/bitnami/spark/.ivy2/jars/org.xerial.snappy_snappy-java-1.1.10.3.jar to /tmp/spark-fa8688b5-f0d1-4ae7-aa45-51ddf0864ceb/userFiles-451740d0-2f0a-4f62-b2fe-ad8fab63b23b/org.xerial.snappy_snappy-java-1.1.10.3.jar
[2024-06-28T21:56:02.580+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO SparkContext: Added file file:///opt/bitnami/spark/.ivy2/jars/org.slf4j_slf4j-api-2.0.7.jar at file:///opt/bitnami/spark/.ivy2/jars/org.slf4j_slf4j-api-2.0.7.jar with timestamp 1719611762131
[2024-06-28T21:56:02.582+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO Utils: Copying /opt/bitnami/spark/.ivy2/jars/org.slf4j_slf4j-api-2.0.7.jar to /tmp/spark-fa8688b5-f0d1-4ae7-aa45-51ddf0864ceb/userFiles-451740d0-2f0a-4f62-b2fe-ad8fab63b23b/org.slf4j_slf4j-api-2.0.7.jar
[2024-06-28T21:56:02.585+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO SparkContext: Added file file:///opt/bitnami/spark/.ivy2/jars/org.apache.hadoop_hadoop-client-api-3.3.4.jar at file:///opt/bitnami/spark/.ivy2/jars/org.apache.hadoop_hadoop-client-api-3.3.4.jar with timestamp 1719611762131
24/06/28 21:56:02 INFO Utils: Copying /opt/bitnami/spark/.ivy2/jars/org.apache.hadoop_hadoop-client-api-3.3.4.jar to /tmp/spark-fa8688b5-f0d1-4ae7-aa45-51ddf0864ceb/userFiles-451740d0-2f0a-4f62-b2fe-ad8fab63b23b/org.apache.hadoop_hadoop-client-api-3.3.4.jar
[2024-06-28T21:56:02.601+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO SparkContext: Added file file:///opt/bitnami/spark/.ivy2/jars/commons-logging_commons-logging-1.1.3.jar at file:///opt/bitnami/spark/.ivy2/jars/commons-logging_commons-logging-1.1.3.jar with timestamp 1719611762131
24/06/28 21:56:02 INFO Utils: Copying /opt/bitnami/spark/.ivy2/jars/commons-logging_commons-logging-1.1.3.jar to /tmp/spark-fa8688b5-f0d1-4ae7-aa45-51ddf0864ceb/userFiles-451740d0-2f0a-4f62-b2fe-ad8fab63b23b/commons-logging_commons-logging-1.1.3.jar
[2024-06-28T21:56:02.636+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO Executor: Starting executor ID driver on host localhost
[2024-06-28T21:56:02.636+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO Executor: OS info Linux, 6.6.12-linuxkit, aarch64
[2024-06-28T21:56:02.636+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO Executor: Java version 17.0.10
[2024-06-28T21:56:02.639+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO Executor: Starting executor with user classpath (userClassPathFirst = false): ''
[2024-06-28T21:56:02.640+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO Executor: Created or updated repl class loader org.apache.spark.util.MutableURLClassLoader@4a19c800 for default.
[2024-06-28T21:56:02.646+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO Executor: Fetching file:///opt/bitnami/spark/.ivy2/jars/org.apache.spark_spark-token-provider-kafka-0-10_2.12-3.5.0.jar with timestamp 1719611762131
[2024-06-28T21:56:02.653+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO Utils: /opt/bitnami/spark/.ivy2/jars/org.apache.spark_spark-token-provider-kafka-0-10_2.12-3.5.0.jar has been previously copied to /tmp/spark-fa8688b5-f0d1-4ae7-aa45-51ddf0864ceb/userFiles-451740d0-2f0a-4f62-b2fe-ad8fab63b23b/org.apache.spark_spark-token-provider-kafka-0-10_2.12-3.5.0.jar
[2024-06-28T21:56:02.655+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO Executor: Fetching file:///opt/bitnami/spark/.ivy2/jars/org.apache.hadoop_hadoop-client-runtime-3.3.4.jar with timestamp 1719611762131
[2024-06-28T21:56:02.671+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO Utils: /opt/bitnami/spark/.ivy2/jars/org.apache.hadoop_hadoop-client-runtime-3.3.4.jar has been previously copied to /tmp/spark-fa8688b5-f0d1-4ae7-aa45-51ddf0864ceb/userFiles-451740d0-2f0a-4f62-b2fe-ad8fab63b23b/org.apache.hadoop_hadoop-client-runtime-3.3.4.jar
[2024-06-28T21:56:02.673+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO Executor: Fetching file:///opt/bitnami/spark/.ivy2/jars/org.apache.commons_commons-pool2-2.11.1.jar with timestamp 1719611762131
[2024-06-28T21:56:02.674+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO Utils: /opt/bitnami/spark/.ivy2/jars/org.apache.commons_commons-pool2-2.11.1.jar has been previously copied to /tmp/spark-fa8688b5-f0d1-4ae7-aa45-51ddf0864ceb/userFiles-451740d0-2f0a-4f62-b2fe-ad8fab63b23b/org.apache.commons_commons-pool2-2.11.1.jar
[2024-06-28T21:56:02.675+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO Executor: Fetching file:///opt/bitnami/spark/.ivy2/jars/org.postgresql_postgresql-42.5.4.jar with timestamp 1719611762131
[2024-06-28T21:56:02.676+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO Utils: /opt/bitnami/spark/.ivy2/jars/org.postgresql_postgresql-42.5.4.jar has been previously copied to /tmp/spark-fa8688b5-f0d1-4ae7-aa45-51ddf0864ceb/userFiles-451740d0-2f0a-4f62-b2fe-ad8fab63b23b/org.postgresql_postgresql-42.5.4.jar
[2024-06-28T21:56:02.678+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO Executor: Fetching file:///opt/bitnami/spark/.ivy2/jars/org.slf4j_slf4j-api-2.0.7.jar with timestamp 1719611762131
[2024-06-28T21:56:02.680+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO Utils: /opt/bitnami/spark/.ivy2/jars/org.slf4j_slf4j-api-2.0.7.jar has been previously copied to /tmp/spark-fa8688b5-f0d1-4ae7-aa45-51ddf0864ceb/userFiles-451740d0-2f0a-4f62-b2fe-ad8fab63b23b/org.slf4j_slf4j-api-2.0.7.jar
[2024-06-28T21:56:02.681+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO Executor: Fetching file:///opt/bitnami/spark/.ivy2/jars/org.apache.kafka_kafka-clients-3.4.1.jar with timestamp 1719611762131
[2024-06-28T21:56:02.683+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO Utils: /opt/bitnami/spark/.ivy2/jars/org.apache.kafka_kafka-clients-3.4.1.jar has been previously copied to /tmp/spark-fa8688b5-f0d1-4ae7-aa45-51ddf0864ceb/userFiles-451740d0-2f0a-4f62-b2fe-ad8fab63b23b/org.apache.kafka_kafka-clients-3.4.1.jar
[2024-06-28T21:56:02.686+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO Executor: Fetching file:///opt/bitnami/spark/.ivy2/jars/com.google.code.findbugs_jsr305-3.0.0.jar with timestamp 1719611762131
[2024-06-28T21:56:02.686+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO Utils: /opt/bitnami/spark/.ivy2/jars/com.google.code.findbugs_jsr305-3.0.0.jar has been previously copied to /tmp/spark-fa8688b5-f0d1-4ae7-aa45-51ddf0864ceb/userFiles-451740d0-2f0a-4f62-b2fe-ad8fab63b23b/com.google.code.findbugs_jsr305-3.0.0.jar
[2024-06-28T21:56:02.688+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO Executor: Fetching file:///opt/bitnami/spark/.ivy2/jars/org.lz4_lz4-java-1.8.0.jar with timestamp 1719611762131
[2024-06-28T21:56:02.688+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO Utils: /opt/bitnami/spark/.ivy2/jars/org.lz4_lz4-java-1.8.0.jar has been previously copied to /tmp/spark-fa8688b5-f0d1-4ae7-aa45-51ddf0864ceb/userFiles-451740d0-2f0a-4f62-b2fe-ad8fab63b23b/org.lz4_lz4-java-1.8.0.jar
[2024-06-28T21:56:02.691+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO Executor: Fetching file:///opt/bitnami/spark/.ivy2/jars/org.apache.spark_spark-sql-kafka-0-10_2.12-3.5.0.jar with timestamp 1719611762131
[2024-06-28T21:56:02.691+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO Utils: /opt/bitnami/spark/.ivy2/jars/org.apache.spark_spark-sql-kafka-0-10_2.12-3.5.0.jar has been previously copied to /tmp/spark-fa8688b5-f0d1-4ae7-aa45-51ddf0864ceb/userFiles-451740d0-2f0a-4f62-b2fe-ad8fab63b23b/org.apache.spark_spark-sql-kafka-0-10_2.12-3.5.0.jar
[2024-06-28T21:56:02.694+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO Executor: Fetching file:///opt/bitnami/spark/.ivy2/jars/org.apache.hadoop_hadoop-client-api-3.3.4.jar with timestamp 1719611762131
[2024-06-28T21:56:02.702+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO Utils: /opt/bitnami/spark/.ivy2/jars/org.apache.hadoop_hadoop-client-api-3.3.4.jar has been previously copied to /tmp/spark-fa8688b5-f0d1-4ae7-aa45-51ddf0864ceb/userFiles-451740d0-2f0a-4f62-b2fe-ad8fab63b23b/org.apache.hadoop_hadoop-client-api-3.3.4.jar
[2024-06-28T21:56:02.704+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO Executor: Fetching file:///opt/bitnami/spark/.ivy2/jars/commons-logging_commons-logging-1.1.3.jar with timestamp 1719611762131
[2024-06-28T21:56:02.704+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO Utils: /opt/bitnami/spark/.ivy2/jars/commons-logging_commons-logging-1.1.3.jar has been previously copied to /tmp/spark-fa8688b5-f0d1-4ae7-aa45-51ddf0864ceb/userFiles-451740d0-2f0a-4f62-b2fe-ad8fab63b23b/commons-logging_commons-logging-1.1.3.jar
[2024-06-28T21:56:02.706+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO Executor: Fetching file:///opt/bitnami/spark/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar with timestamp 1719611762131
[2024-06-28T21:56:02.707+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO Utils: /opt/bitnami/spark/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar has been previously copied to /tmp/spark-fa8688b5-f0d1-4ae7-aa45-51ddf0864ceb/userFiles-451740d0-2f0a-4f62-b2fe-ad8fab63b23b/org.checkerframework_checker-qual-3.5.0.jar
[2024-06-28T21:56:02.709+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO Executor: Fetching file:///opt/bitnami/spark/.ivy2/jars/org.xerial.snappy_snappy-java-1.1.10.3.jar with timestamp 1719611762131
[2024-06-28T21:56:02.709+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO Utils: /opt/bitnami/spark/.ivy2/jars/org.xerial.snappy_snappy-java-1.1.10.3.jar has been previously copied to /tmp/spark-fa8688b5-f0d1-4ae7-aa45-51ddf0864ceb/userFiles-451740d0-2f0a-4f62-b2fe-ad8fab63b23b/org.xerial.snappy_snappy-java-1.1.10.3.jar
[2024-06-28T21:56:02.713+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO Executor: Fetching spark://localhost:39575/jars/org.apache.spark_spark-token-provider-kafka-0-10_2.12-3.5.0.jar with timestamp 1719611762131
[2024-06-28T21:56:02.732+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO TransportClientFactory: Successfully created connection to localhost/127.0.0.1:39575 after 13 ms (0 ms spent in bootstraps)
[2024-06-28T21:56:02.735+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO Utils: Fetching spark://localhost:39575/jars/org.apache.spark_spark-token-provider-kafka-0-10_2.12-3.5.0.jar to /tmp/spark-fa8688b5-f0d1-4ae7-aa45-51ddf0864ceb/userFiles-451740d0-2f0a-4f62-b2fe-ad8fab63b23b/fetchFileTemp8999897179020236031.tmp
[2024-06-28T21:56:02.747+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO Utils: /tmp/spark-fa8688b5-f0d1-4ae7-aa45-51ddf0864ceb/userFiles-451740d0-2f0a-4f62-b2fe-ad8fab63b23b/fetchFileTemp8999897179020236031.tmp has been previously copied to /tmp/spark-fa8688b5-f0d1-4ae7-aa45-51ddf0864ceb/userFiles-451740d0-2f0a-4f62-b2fe-ad8fab63b23b/org.apache.spark_spark-token-provider-kafka-0-10_2.12-3.5.0.jar
[2024-06-28T21:56:02.749+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO Executor: Adding file:/tmp/spark-fa8688b5-f0d1-4ae7-aa45-51ddf0864ceb/userFiles-451740d0-2f0a-4f62-b2fe-ad8fab63b23b/org.apache.spark_spark-token-provider-kafka-0-10_2.12-3.5.0.jar to class loader default
[2024-06-28T21:56:02.750+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO Executor: Fetching spark://localhost:39575/jars/org.apache.commons_commons-pool2-2.11.1.jar with timestamp 1719611762131
[2024-06-28T21:56:02.750+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO Utils: Fetching spark://localhost:39575/jars/org.apache.commons_commons-pool2-2.11.1.jar to /tmp/spark-fa8688b5-f0d1-4ae7-aa45-51ddf0864ceb/userFiles-451740d0-2f0a-4f62-b2fe-ad8fab63b23b/fetchFileTemp165695367018395545.tmp
[2024-06-28T21:56:02.751+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO Utils: /tmp/spark-fa8688b5-f0d1-4ae7-aa45-51ddf0864ceb/userFiles-451740d0-2f0a-4f62-b2fe-ad8fab63b23b/fetchFileTemp165695367018395545.tmp has been previously copied to /tmp/spark-fa8688b5-f0d1-4ae7-aa45-51ddf0864ceb/userFiles-451740d0-2f0a-4f62-b2fe-ad8fab63b23b/org.apache.commons_commons-pool2-2.11.1.jar
[2024-06-28T21:56:02.752+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO Executor: Adding file:/tmp/spark-fa8688b5-f0d1-4ae7-aa45-51ddf0864ceb/userFiles-451740d0-2f0a-4f62-b2fe-ad8fab63b23b/org.apache.commons_commons-pool2-2.11.1.jar to class loader default
[2024-06-28T21:56:02.753+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO Executor: Fetching spark://localhost:39575/jars/org.apache.spark_spark-sql-kafka-0-10_2.12-3.5.0.jar with timestamp 1719611762131
[2024-06-28T21:56:02.753+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO Utils: Fetching spark://localhost:39575/jars/org.apache.spark_spark-sql-kafka-0-10_2.12-3.5.0.jar to /tmp/spark-fa8688b5-f0d1-4ae7-aa45-51ddf0864ceb/userFiles-451740d0-2f0a-4f62-b2fe-ad8fab63b23b/fetchFileTemp9281933819197188249.tmp
[2024-06-28T21:56:02.755+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO Utils: /tmp/spark-fa8688b5-f0d1-4ae7-aa45-51ddf0864ceb/userFiles-451740d0-2f0a-4f62-b2fe-ad8fab63b23b/fetchFileTemp9281933819197188249.tmp has been previously copied to /tmp/spark-fa8688b5-f0d1-4ae7-aa45-51ddf0864ceb/userFiles-451740d0-2f0a-4f62-b2fe-ad8fab63b23b/org.apache.spark_spark-sql-kafka-0-10_2.12-3.5.0.jar
[2024-06-28T21:56:02.760+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO Executor: Adding file:/tmp/spark-fa8688b5-f0d1-4ae7-aa45-51ddf0864ceb/userFiles-451740d0-2f0a-4f62-b2fe-ad8fab63b23b/org.apache.spark_spark-sql-kafka-0-10_2.12-3.5.0.jar to class loader default
[2024-06-28T21:56:02.760+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO Executor: Fetching spark://localhost:39575/jars/org.lz4_lz4-java-1.8.0.jar with timestamp 1719611762131
[2024-06-28T21:56:02.761+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO Utils: Fetching spark://localhost:39575/jars/org.lz4_lz4-java-1.8.0.jar to /tmp/spark-fa8688b5-f0d1-4ae7-aa45-51ddf0864ceb/userFiles-451740d0-2f0a-4f62-b2fe-ad8fab63b23b/fetchFileTemp1788383428931695678.tmp
[2024-06-28T21:56:02.782+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO Utils: /tmp/spark-fa8688b5-f0d1-4ae7-aa45-51ddf0864ceb/userFiles-451740d0-2f0a-4f62-b2fe-ad8fab63b23b/fetchFileTemp1788383428931695678.tmp has been previously copied to /tmp/spark-fa8688b5-f0d1-4ae7-aa45-51ddf0864ceb/userFiles-451740d0-2f0a-4f62-b2fe-ad8fab63b23b/org.lz4_lz4-java-1.8.0.jar
[2024-06-28T21:56:02.784+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO Executor: Adding file:/tmp/spark-fa8688b5-f0d1-4ae7-aa45-51ddf0864ceb/userFiles-451740d0-2f0a-4f62-b2fe-ad8fab63b23b/org.lz4_lz4-java-1.8.0.jar to class loader default
[2024-06-28T21:56:02.785+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO Executor: Fetching spark://localhost:39575/jars/org.apache.hadoop_hadoop-client-runtime-3.3.4.jar with timestamp 1719611762131
[2024-06-28T21:56:02.786+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO Utils: Fetching spark://localhost:39575/jars/org.apache.hadoop_hadoop-client-runtime-3.3.4.jar to /tmp/spark-fa8688b5-f0d1-4ae7-aa45-51ddf0864ceb/userFiles-451740d0-2f0a-4f62-b2fe-ad8fab63b23b/fetchFileTemp18243890204629848877.tmp
[2024-06-28T21:56:02.837+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO Utils: /tmp/spark-fa8688b5-f0d1-4ae7-aa45-51ddf0864ceb/userFiles-451740d0-2f0a-4f62-b2fe-ad8fab63b23b/fetchFileTemp18243890204629848877.tmp has been previously copied to /tmp/spark-fa8688b5-f0d1-4ae7-aa45-51ddf0864ceb/userFiles-451740d0-2f0a-4f62-b2fe-ad8fab63b23b/org.apache.hadoop_hadoop-client-runtime-3.3.4.jar
[2024-06-28T21:56:02.840+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO Executor: Adding file:/tmp/spark-fa8688b5-f0d1-4ae7-aa45-51ddf0864ceb/userFiles-451740d0-2f0a-4f62-b2fe-ad8fab63b23b/org.apache.hadoop_hadoop-client-runtime-3.3.4.jar to class loader default
[2024-06-28T21:56:02.841+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO Executor: Fetching spark://localhost:39575/jars/commons-logging_commons-logging-1.1.3.jar with timestamp 1719611762131
[2024-06-28T21:56:02.841+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO Utils: Fetching spark://localhost:39575/jars/commons-logging_commons-logging-1.1.3.jar to /tmp/spark-fa8688b5-f0d1-4ae7-aa45-51ddf0864ceb/userFiles-451740d0-2f0a-4f62-b2fe-ad8fab63b23b/fetchFileTemp10014628795687784815.tmp
[2024-06-28T21:56:02.841+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO Utils: /tmp/spark-fa8688b5-f0d1-4ae7-aa45-51ddf0864ceb/userFiles-451740d0-2f0a-4f62-b2fe-ad8fab63b23b/fetchFileTemp10014628795687784815.tmp has been previously copied to /tmp/spark-fa8688b5-f0d1-4ae7-aa45-51ddf0864ceb/userFiles-451740d0-2f0a-4f62-b2fe-ad8fab63b23b/commons-logging_commons-logging-1.1.3.jar
[2024-06-28T21:56:02.843+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO Executor: Adding file:/tmp/spark-fa8688b5-f0d1-4ae7-aa45-51ddf0864ceb/userFiles-451740d0-2f0a-4f62-b2fe-ad8fab63b23b/commons-logging_commons-logging-1.1.3.jar to class loader default
[2024-06-28T21:56:02.843+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO Executor: Fetching spark://localhost:39575/jars/org.slf4j_slf4j-api-2.0.7.jar with timestamp 1719611762131
[2024-06-28T21:56:02.844+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO Utils: Fetching spark://localhost:39575/jars/org.slf4j_slf4j-api-2.0.7.jar to /tmp/spark-fa8688b5-f0d1-4ae7-aa45-51ddf0864ceb/userFiles-451740d0-2f0a-4f62-b2fe-ad8fab63b23b/fetchFileTemp6306510132494551747.tmp
[2024-06-28T21:56:02.844+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO Utils: /tmp/spark-fa8688b5-f0d1-4ae7-aa45-51ddf0864ceb/userFiles-451740d0-2f0a-4f62-b2fe-ad8fab63b23b/fetchFileTemp6306510132494551747.tmp has been previously copied to /tmp/spark-fa8688b5-f0d1-4ae7-aa45-51ddf0864ceb/userFiles-451740d0-2f0a-4f62-b2fe-ad8fab63b23b/org.slf4j_slf4j-api-2.0.7.jar
[2024-06-28T21:56:02.846+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO Executor: Adding file:/tmp/spark-fa8688b5-f0d1-4ae7-aa45-51ddf0864ceb/userFiles-451740d0-2f0a-4f62-b2fe-ad8fab63b23b/org.slf4j_slf4j-api-2.0.7.jar to class loader default
[2024-06-28T21:56:02.846+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO Executor: Fetching spark://localhost:39575/jars/com.google.code.findbugs_jsr305-3.0.0.jar with timestamp 1719611762131
[2024-06-28T21:56:02.847+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO Utils: Fetching spark://localhost:39575/jars/com.google.code.findbugs_jsr305-3.0.0.jar to /tmp/spark-fa8688b5-f0d1-4ae7-aa45-51ddf0864ceb/userFiles-451740d0-2f0a-4f62-b2fe-ad8fab63b23b/fetchFileTemp15133745995912681954.tmp
[2024-06-28T21:56:02.848+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO Utils: /tmp/spark-fa8688b5-f0d1-4ae7-aa45-51ddf0864ceb/userFiles-451740d0-2f0a-4f62-b2fe-ad8fab63b23b/fetchFileTemp15133745995912681954.tmp has been previously copied to /tmp/spark-fa8688b5-f0d1-4ae7-aa45-51ddf0864ceb/userFiles-451740d0-2f0a-4f62-b2fe-ad8fab63b23b/com.google.code.findbugs_jsr305-3.0.0.jar
[2024-06-28T21:56:02.850+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO Executor: Adding file:/tmp/spark-fa8688b5-f0d1-4ae7-aa45-51ddf0864ceb/userFiles-451740d0-2f0a-4f62-b2fe-ad8fab63b23b/com.google.code.findbugs_jsr305-3.0.0.jar to class loader default
[2024-06-28T21:56:02.850+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO Executor: Fetching spark://localhost:39575/jars/org.apache.kafka_kafka-clients-3.4.1.jar with timestamp 1719611762131
[2024-06-28T21:56:02.850+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO Utils: Fetching spark://localhost:39575/jars/org.apache.kafka_kafka-clients-3.4.1.jar to /tmp/spark-fa8688b5-f0d1-4ae7-aa45-51ddf0864ceb/userFiles-451740d0-2f0a-4f62-b2fe-ad8fab63b23b/fetchFileTemp15463805044745762817.tmp
[2024-06-28T21:56:02.859+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO Utils: /tmp/spark-fa8688b5-f0d1-4ae7-aa45-51ddf0864ceb/userFiles-451740d0-2f0a-4f62-b2fe-ad8fab63b23b/fetchFileTemp15463805044745762817.tmp has been previously copied to /tmp/spark-fa8688b5-f0d1-4ae7-aa45-51ddf0864ceb/userFiles-451740d0-2f0a-4f62-b2fe-ad8fab63b23b/org.apache.kafka_kafka-clients-3.4.1.jar
[2024-06-28T21:56:02.861+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO Executor: Adding file:/tmp/spark-fa8688b5-f0d1-4ae7-aa45-51ddf0864ceb/userFiles-451740d0-2f0a-4f62-b2fe-ad8fab63b23b/org.apache.kafka_kafka-clients-3.4.1.jar to class loader default
[2024-06-28T21:56:02.862+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO Executor: Fetching spark://localhost:39575/jars/org.apache.hadoop_hadoop-client-api-3.3.4.jar with timestamp 1719611762131
[2024-06-28T21:56:02.862+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO Utils: Fetching spark://localhost:39575/jars/org.apache.hadoop_hadoop-client-api-3.3.4.jar to /tmp/spark-fa8688b5-f0d1-4ae7-aa45-51ddf0864ceb/userFiles-451740d0-2f0a-4f62-b2fe-ad8fab63b23b/fetchFileTemp7858318944863841293.tmp
[2024-06-28T21:56:02.887+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO Utils: /tmp/spark-fa8688b5-f0d1-4ae7-aa45-51ddf0864ceb/userFiles-451740d0-2f0a-4f62-b2fe-ad8fab63b23b/fetchFileTemp7858318944863841293.tmp has been previously copied to /tmp/spark-fa8688b5-f0d1-4ae7-aa45-51ddf0864ceb/userFiles-451740d0-2f0a-4f62-b2fe-ad8fab63b23b/org.apache.hadoop_hadoop-client-api-3.3.4.jar
[2024-06-28T21:56:02.890+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO Executor: Adding file:/tmp/spark-fa8688b5-f0d1-4ae7-aa45-51ddf0864ceb/userFiles-451740d0-2f0a-4f62-b2fe-ad8fab63b23b/org.apache.hadoop_hadoop-client-api-3.3.4.jar to class loader default
[2024-06-28T21:56:02.891+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO Executor: Fetching spark://localhost:39575/jars/org.postgresql_postgresql-42.5.4.jar with timestamp 1719611762131
[2024-06-28T21:56:02.891+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO Utils: Fetching spark://localhost:39575/jars/org.postgresql_postgresql-42.5.4.jar to /tmp/spark-fa8688b5-f0d1-4ae7-aa45-51ddf0864ceb/userFiles-451740d0-2f0a-4f62-b2fe-ad8fab63b23b/fetchFileTemp5158927649958666435.tmp
[2024-06-28T21:56:02.893+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO Utils: /tmp/spark-fa8688b5-f0d1-4ae7-aa45-51ddf0864ceb/userFiles-451740d0-2f0a-4f62-b2fe-ad8fab63b23b/fetchFileTemp5158927649958666435.tmp has been previously copied to /tmp/spark-fa8688b5-f0d1-4ae7-aa45-51ddf0864ceb/userFiles-451740d0-2f0a-4f62-b2fe-ad8fab63b23b/org.postgresql_postgresql-42.5.4.jar
[2024-06-28T21:56:02.895+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO Executor: Adding file:/tmp/spark-fa8688b5-f0d1-4ae7-aa45-51ddf0864ceb/userFiles-451740d0-2f0a-4f62-b2fe-ad8fab63b23b/org.postgresql_postgresql-42.5.4.jar to class loader default
[2024-06-28T21:56:02.895+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO Executor: Fetching spark://localhost:39575/jars/org.checkerframework_checker-qual-3.5.0.jar with timestamp 1719611762131
[2024-06-28T21:56:02.895+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO Utils: Fetching spark://localhost:39575/jars/org.checkerframework_checker-qual-3.5.0.jar to /tmp/spark-fa8688b5-f0d1-4ae7-aa45-51ddf0864ceb/userFiles-451740d0-2f0a-4f62-b2fe-ad8fab63b23b/fetchFileTemp8308672525640969130.tmp
[2024-06-28T21:56:02.896+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO Utils: /tmp/spark-fa8688b5-f0d1-4ae7-aa45-51ddf0864ceb/userFiles-451740d0-2f0a-4f62-b2fe-ad8fab63b23b/fetchFileTemp8308672525640969130.tmp has been previously copied to /tmp/spark-fa8688b5-f0d1-4ae7-aa45-51ddf0864ceb/userFiles-451740d0-2f0a-4f62-b2fe-ad8fab63b23b/org.checkerframework_checker-qual-3.5.0.jar
[2024-06-28T21:56:02.898+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO Executor: Adding file:/tmp/spark-fa8688b5-f0d1-4ae7-aa45-51ddf0864ceb/userFiles-451740d0-2f0a-4f62-b2fe-ad8fab63b23b/org.checkerframework_checker-qual-3.5.0.jar to class loader default
[2024-06-28T21:56:02.898+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO Executor: Fetching spark://localhost:39575/jars/org.xerial.snappy_snappy-java-1.1.10.3.jar with timestamp 1719611762131
[2024-06-28T21:56:02.898+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO Utils: Fetching spark://localhost:39575/jars/org.xerial.snappy_snappy-java-1.1.10.3.jar to /tmp/spark-fa8688b5-f0d1-4ae7-aa45-51ddf0864ceb/userFiles-451740d0-2f0a-4f62-b2fe-ad8fab63b23b/fetchFileTemp11070127934384893331.tmp
[2024-06-28T21:56:02.901+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO Utils: /tmp/spark-fa8688b5-f0d1-4ae7-aa45-51ddf0864ceb/userFiles-451740d0-2f0a-4f62-b2fe-ad8fab63b23b/fetchFileTemp11070127934384893331.tmp has been previously copied to /tmp/spark-fa8688b5-f0d1-4ae7-aa45-51ddf0864ceb/userFiles-451740d0-2f0a-4f62-b2fe-ad8fab63b23b/org.xerial.snappy_snappy-java-1.1.10.3.jar
[2024-06-28T21:56:02.903+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO Executor: Adding file:/tmp/spark-fa8688b5-f0d1-4ae7-aa45-51ddf0864ceb/userFiles-451740d0-2f0a-4f62-b2fe-ad8fab63b23b/org.xerial.snappy_snappy-java-1.1.10.3.jar to class loader default
[2024-06-28T21:56:02.908+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO Utils: Successfully started service 'org.apache.spark.network.netty.NettyBlockTransferService' on port 40919.
[2024-06-28T21:56:02.908+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO NettyBlockTransferService: Server created on localhost:40919
[2024-06-28T21:56:02.909+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO BlockManager: Using org.apache.spark.storage.RandomBlockReplicationPolicy for block replication policy
[2024-06-28T21:56:02.912+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO BlockManagerMaster: Registering BlockManager BlockManagerId(driver, localhost, 40919, None)
[2024-06-28T21:56:02.914+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO BlockManagerMasterEndpoint: Registering block manager localhost:40919 with 434.4 MiB RAM, BlockManagerId(driver, localhost, 40919, None)
[2024-06-28T21:56:02.916+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO BlockManagerMaster: Registered BlockManager BlockManagerId(driver, localhost, 40919, None)
[2024-06-28T21:56:02.916+0000] {docker.py:413} INFO - 24/06/28 21:56:02 INFO BlockManager: Initialized BlockManager: BlockManagerId(driver, localhost, 40919, None)
[2024-06-28T21:56:03.130+0000] {docker.py:413} INFO - 2024-06-28 21:56:03,129:create_spark_session:INFO:Spark session created successfully
[2024-06-28T21:56:03.133+0000] {docker.py:413} INFO - 24/06/28 21:56:03 INFO SharedState: Setting hive.metastore.warehouse.dir ('null') to the value of spark.sql.warehouse.dir.
[2024-06-28T21:56:03.135+0000] {docker.py:413} INFO - 24/06/28 21:56:03 INFO SharedState: Warehouse path is 'file:/opt/bitnami/spark/spark-warehouse'.
[2024-06-28T21:56:03.833+0000] {docker.py:413} INFO - 2024-06-28 21:56:03,832:create_initial_dataframe:INFO:Initial dataframe created successfully
[2024-06-28T21:56:04.093+0000] {docker.py:413} INFO - 2024-06-28 21:56:04,092:start_streaming:INFO:Start streaming ...
[2024-06-28T21:56:04.203+0000] {docker.py:413} INFO - 2024-06-28 21:56:04,202:run:INFO:Callback Server Starting
2024-06-28 21:56:04,202:run:INFO:Socket listening on ('127.0.0.1', 34283)
[2024-06-28T21:56:04.215+0000] {docker.py:413} INFO - 24/06/28 21:56:04 INFO StateStoreCoordinatorRef: Registered StateStoreCoordinator endpoint
[2024-06-28T21:56:04.235+0000] {docker.py:413} INFO - 24/06/28 21:56:04 WARN ResolveWriteToStream: Temporary checkpoint location created which is deleted normally when the query didn't fail: /tmp/temporary-437b2cd0-8b24-4745-ada9-7287aa909c5a. If it's required to delete it under any circumstances, please set spark.sql.streaming.forceDeleteTempCheckpointLocation to true. Important to know deleting temp checkpoint folder is best effort.
[2024-06-28T21:56:04.245+0000] {docker.py:413} INFO - 24/06/28 21:56:04 INFO ResolveWriteToStream: Checkpoint root file:///tmp/temporary-437b2cd0-8b24-4745-ada9-7287aa909c5a resolved to file:/tmp/temporary-437b2cd0-8b24-4745-ada9-7287aa909c5a.
[2024-06-28T21:56:04.246+0000] {docker.py:413} INFO - 24/06/28 21:56:04 WARN ResolveWriteToStream: spark.sql.adaptive.enabled is not supported in streaming DataFrames/Datasets and will be disabled.
[2024-06-28T21:56:04.292+0000] {docker.py:413} INFO - 24/06/28 21:56:04 INFO CheckpointFileManager: Writing atomically to file:/tmp/temporary-437b2cd0-8b24-4745-ada9-7287aa909c5a/metadata using temp file file:/tmp/temporary-437b2cd0-8b24-4745-ada9-7287aa909c5a/.metadata.e0f55e38-53ef-42b8-b98f-ba554a99d55e.tmp
[2024-06-28T21:56:04.337+0000] {docker.py:413} INFO - 24/06/28 21:56:04 INFO CheckpointFileManager: Renamed temp file file:/tmp/temporary-437b2cd0-8b24-4745-ada9-7287aa909c5a/.metadata.e0f55e38-53ef-42b8-b98f-ba554a99d55e.tmp to file:/tmp/temporary-437b2cd0-8b24-4745-ada9-7287aa909c5a/metadata
[2024-06-28T21:56:04.367+0000] {docker.py:413} INFO - 24/06/28 21:56:04 INFO MicroBatchExecution: Starting [id = 522e5f26-f87d-4d61-90a3-470173ee9290, runId = 081937cf-48f4-4012-9e3f-24c29b364384]. Use file:/tmp/temporary-437b2cd0-8b24-4745-ada9-7287aa909c5a to store the query checkpoint.
[2024-06-28T21:56:04.381+0000] {docker.py:413} INFO - 24/06/28 21:56:04 INFO MicroBatchExecution: Reading table [org.apache.spark.sql.kafka010.KafkaSourceProvider$KafkaTable@4bbe7824] from DataSourceV2 named 'kafka' [org.apache.spark.sql.kafka010.KafkaSourceProvider@4d5e5e99]
[2024-06-28T21:56:04.400+0000] {docker.py:413} INFO - 24/06/28 21:56:04 INFO OffsetSeqLog: BatchIds found from listing:
[2024-06-28T21:56:04.402+0000] {docker.py:413} INFO - 24/06/28 21:56:04 INFO OffsetSeqLog: BatchIds found from listing:
[2024-06-28T21:56:04.403+0000] {docker.py:413} INFO - 24/06/28 21:56:04 INFO MicroBatchExecution: Starting new streaming query.
[2024-06-28T21:56:04.404+0000] {docker.py:413} INFO - 24/06/28 21:56:04 INFO MicroBatchExecution: Stream started from {}
[2024-06-28T21:56:04.558+0000] {docker.py:413} INFO - 24/06/28 21:56:04 INFO AdminClientConfig: AdminClientConfig values: 
	auto.include.jmx.reporter = true
	bootstrap.servers = [kafka:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
[2024-06-28T21:56:04.594+0000] {docker.py:413} INFO - 24/06/28 21:56:04 WARN AdminClientConfig: These configurations '[key.deserializer, value.deserializer, enable.auto.commit, max.poll.records, auto.offset.reset]' were supplied but are not used yet.
[2024-06-28T21:56:04.595+0000] {docker.py:413} INFO - 24/06/28 21:56:04 INFO AppInfoParser: Kafka version: 3.4.1
24/06/28 21:56:04 INFO AppInfoParser: Kafka commitId: 8a516edc2755df89
[2024-06-28T21:56:04.595+0000] {docker.py:413} INFO - 24/06/28 21:56:04 INFO AppInfoParser: Kafka startTimeMs: 1719611764593
[2024-06-28T21:56:04.776+0000] {docker.py:413} INFO - 24/06/28 21:56:04 INFO CheckpointFileManager: Writing atomically to file:/tmp/temporary-437b2cd0-8b24-4745-ada9-7287aa909c5a/sources/0/0 using temp file file:/tmp/temporary-437b2cd0-8b24-4745-ada9-7287aa909c5a/sources/0/.0.cec1265f-14a4-4e40-bd66-8fb15ed5758e.tmp
[2024-06-28T21:56:04.788+0000] {docker.py:413} INFO - 24/06/28 21:56:04 INFO CheckpointFileManager: Renamed temp file file:/tmp/temporary-437b2cd0-8b24-4745-ada9-7287aa909c5a/sources/0/.0.cec1265f-14a4-4e40-bd66-8fb15ed5758e.tmp to file:/tmp/temporary-437b2cd0-8b24-4745-ada9-7287aa909c5a/sources/0/0
[2024-06-28T21:56:04.789+0000] {docker.py:413} INFO - 24/06/28 21:56:04 INFO KafkaMicroBatchStream: Initial offsets: {"current_headlines":{"0":0}}
[2024-06-28T21:56:04.822+0000] {docker.py:413} INFO - 24/06/28 21:56:04 INFO CheckpointFileManager: Writing atomically to file:/tmp/temporary-437b2cd0-8b24-4745-ada9-7287aa909c5a/offsets/0 using temp file file:/tmp/temporary-437b2cd0-8b24-4745-ada9-7287aa909c5a/offsets/.0.3137103f-9de5-4db7-b0a1-c0e5af71ebe8.tmp
[2024-06-28T21:56:04.840+0000] {docker.py:413} INFO - 24/06/28 21:56:04 INFO CheckpointFileManager: Renamed temp file file:/tmp/temporary-437b2cd0-8b24-4745-ada9-7287aa909c5a/offsets/.0.3137103f-9de5-4db7-b0a1-c0e5af71ebe8.tmp to file:/tmp/temporary-437b2cd0-8b24-4745-ada9-7287aa909c5a/offsets/0
[2024-06-28T21:56:04.844+0000] {docker.py:413} INFO - 24/06/28 21:56:04 INFO MicroBatchExecution: Committed offsets for batch 0. Metadata OffsetSeqMetadata(0,1719611764797,Map(spark.sql.streaming.stateStore.providerClass -> org.apache.spark.sql.execution.streaming.state.HDFSBackedStateStoreProvider, spark.sql.streaming.join.stateFormatVersion -> 2, spark.sql.streaming.stateStore.compression.codec -> lz4, spark.sql.streaming.stateStore.rocksdb.formatVersion -> 5, spark.sql.streaming.statefulOperator.useStrictDistribution -> true, spark.sql.streaming.flatMapGroupsWithState.stateFormatVersion -> 2, spark.sql.streaming.multipleWatermarkPolicy -> min, spark.sql.streaming.aggregation.stateFormatVersion -> 2, spark.sql.shuffle.partitions -> 200))
[2024-06-28T21:56:05.023+0000] {docker.py:413} INFO - 24/06/28 21:56:05 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-06-28T21:56:05.053+0000] {docker.py:413} INFO - 24/06/28 21:56:05 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-06-28T21:56:05.083+0000] {docker.py:413} INFO - 24/06/28 21:56:05 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-06-28T21:56:05.087+0000] {docker.py:413} INFO - 24/06/28 21:56:05 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-06-28T21:56:05.268+0000] {docker.py:413} INFO - 24/06/28 21:56:05 INFO CodeGenerator: Code generated in 109.8455 ms
[2024-06-28T21:56:05.334+0000] {docker.py:413} INFO - 2024-06-28 21:56:05,333:wait_for_commands:INFO:Python Server ready to receive messages
2024-06-28 21:56:05,334:wait_for_commands:INFO:Received command c on object id p0
[2024-06-28T21:56:05.516+0000] {docker.py:413} INFO - 24/06/28 21:56:05 INFO CodeGenerator: Code generated in 36.234542 ms
[2024-06-28T21:56:05.530+0000] {docker.py:413} INFO - 24/06/28 21:56:05 INFO CodeGenerator: Code generated in 9.012791 ms
[2024-06-28T21:56:05.538+0000] {docker.py:413} INFO - 24/06/28 21:56:05 INFO CodeGenerator: Code generated in 6.073334 ms
[2024-06-28T21:56:05.632+0000] {docker.py:413} INFO - 24/06/28 21:56:05 INFO CodeGenerator: Code generated in 9.143041 ms
[2024-06-28T21:56:05.639+0000] {docker.py:413} INFO - 24/06/28 21:56:05 INFO CodeGenerator: Code generated in 6.257667 ms
[2024-06-28T21:56:05.692+0000] {docker.py:413} INFO - 24/06/28 21:56:05 INFO SparkContext: Starting job: start at NativeMethodAccessorImpl.java:0
[2024-06-28T21:56:05.701+0000] {docker.py:413} INFO - 24/06/28 21:56:05 INFO DAGScheduler: Registering RDD 7 (start at NativeMethodAccessorImpl.java:0) as input to shuffle 0
[2024-06-28T21:56:05.706+0000] {docker.py:413} INFO - 24/06/28 21:56:05 INFO DAGScheduler: Registering RDD 11 (start at NativeMethodAccessorImpl.java:0) as input to shuffle 1
[2024-06-28T21:56:05.707+0000] {docker.py:413} INFO - 24/06/28 21:56:05 INFO DAGScheduler: Got job 0 (start at NativeMethodAccessorImpl.java:0) with 200 output partitions
[2024-06-28T21:56:05.707+0000] {docker.py:413} INFO - 24/06/28 21:56:05 INFO DAGScheduler: Final stage: ResultStage 2 (start at NativeMethodAccessorImpl.java:0)
[2024-06-28T21:56:05.708+0000] {docker.py:413} INFO - 24/06/28 21:56:05 INFO DAGScheduler: Parents of final stage: List(ShuffleMapStage 0, ShuffleMapStage 1)
[2024-06-28T21:56:05.709+0000] {docker.py:413} INFO - 24/06/28 21:56:05 INFO DAGScheduler: Missing parents: List(ShuffleMapStage 0, ShuffleMapStage 1)
[2024-06-28T21:56:05.712+0000] {docker.py:413} INFO - 24/06/28 21:56:05 INFO DAGScheduler: Submitting ShuffleMapStage 0 (MapPartitionsRDD[7] at start at NativeMethodAccessorImpl.java:0), which has no missing parents
[2024-06-28T21:56:05.740+0000] {docker.py:413} INFO - 24/06/28 21:56:05 INFO MemoryStore: Block broadcast_0 stored as values in memory (estimated size 38.8 KiB, free 434.4 MiB)
[2024-06-28T21:56:05.754+0000] {docker.py:413} INFO - 24/06/28 21:56:05 INFO MemoryStore: Block broadcast_0_piece0 stored as bytes in memory (estimated size 15.2 KiB, free 434.3 MiB)
[2024-06-28T21:56:05.755+0000] {docker.py:413} INFO - 24/06/28 21:56:05 INFO BlockManagerInfo: Added broadcast_0_piece0 in memory on localhost:40919 (size: 15.2 KiB, free: 434.4 MiB)
[2024-06-28T21:56:05.757+0000] {docker.py:413} INFO - 24/06/28 21:56:05 INFO SparkContext: Created broadcast 0 from broadcast at DAGScheduler.scala:1580
[2024-06-28T21:56:05.765+0000] {docker.py:413} INFO - 24/06/28 21:56:05 INFO DAGScheduler: Submitting 1 missing tasks from ShuffleMapStage 0 (MapPartitionsRDD[7] at start at NativeMethodAccessorImpl.java:0) (first 15 tasks are for partitions Vector(0))
[2024-06-28T21:56:05.766+0000] {docker.py:413} INFO - 24/06/28 21:56:05 INFO TaskSchedulerImpl: Adding task set 0.0 with 1 tasks resource profile 0
[2024-06-28T21:56:05.776+0000] {docker.py:413} INFO - 24/06/28 21:56:05 INFO DAGScheduler: Submitting ShuffleMapStage 1 (MapPartitionsRDD[11] at start at NativeMethodAccessorImpl.java:0), which has no missing parents
[2024-06-28T21:56:05.777+0000] {docker.py:413} INFO - 24/06/28 21:56:05 INFO MemoryStore: Block broadcast_1 stored as values in memory (estimated size 14.0 KiB, free 434.3 MiB)
[2024-06-28T21:56:05.779+0000] {docker.py:413} INFO - 24/06/28 21:56:05 INFO MemoryStore: Block broadcast_1_piece0 stored as bytes in memory (estimated size 7.4 KiB, free 434.3 MiB)
[2024-06-28T21:56:05.779+0000] {docker.py:413} INFO - 24/06/28 21:56:05 INFO BlockManagerInfo: Added broadcast_1_piece0 in memory on localhost:40919 (size: 7.4 KiB, free: 434.4 MiB)
[2024-06-28T21:56:05.780+0000] {docker.py:413} INFO - 24/06/28 21:56:05 INFO SparkContext: Created broadcast 1 from broadcast at DAGScheduler.scala:1580
[2024-06-28T21:56:05.780+0000] {docker.py:413} INFO - 24/06/28 21:56:05 INFO DAGScheduler: Submitting 1 missing tasks from ShuffleMapStage 1 (MapPartitionsRDD[11] at start at NativeMethodAccessorImpl.java:0) (first 15 tasks are for partitions Vector(0))
24/06/28 21:56:05 INFO TaskSchedulerImpl: Adding task set 1.0 with 1 tasks resource profile 0
[2024-06-28T21:56:05.790+0000] {docker.py:413} INFO - 24/06/28 21:56:05 INFO TaskSetManager: Starting task 0.0 in stage 0.0 (TID 0) (localhost, executor driver, partition 0, PROCESS_LOCAL, 11066 bytes)
[2024-06-28T21:56:05.795+0000] {docker.py:413} INFO - 24/06/28 21:56:05 INFO TaskSetManager: Starting task 0.0 in stage 1.0 (TID 1) (localhost, executor driver, partition 0, PROCESS_LOCAL, 9967 bytes)
[2024-06-28T21:56:05.797+0000] {docker.py:413} INFO - 24/06/28 21:56:05 INFO Executor: Running task 0.0 in stage 0.0 (TID 0)
24/06/28 21:56:05 INFO Executor: Running task 0.0 in stage 1.0 (TID 1)
[2024-06-28T21:56:05.862+0000] {docker.py:413} INFO - 24/06/28 21:56:05 INFO CodeGenerator: Code generated in 16.835916 ms
[2024-06-28T21:56:05.868+0000] {docker.py:413} INFO - 24/06/28 21:56:05 INFO CodeGenerator: Code generated in 4.285292 ms
[2024-06-28T21:56:05.872+0000] {docker.py:413} INFO - 24/06/28 21:56:05 INFO CodeGenerator: Code generated in 7.041375 ms
[2024-06-28T21:56:05.878+0000] {docker.py:413} INFO - 24/06/28 21:56:05 INFO CodeGenerator: Code generated in 5.747792 ms
[2024-06-28T21:56:05.879+0000] {docker.py:413} INFO - 24/06/28 21:56:05 INFO CodeGenerator: Code generated in 8.31125 ms
[2024-06-28T21:56:05.883+0000] {docker.py:413} INFO - 24/06/28 21:56:05 INFO KafkaBatchReaderFactory: Creating Kafka reader topicPartition=current_headlines-0 fromOffset=0 untilOffset=579, for query queryId=522e5f26-f87d-4d61-90a3-470173ee9290 batchId=0 taskId=0 partitionId=0
[2024-06-28T21:56:05.894+0000] {docker.py:413} INFO - 24/06/28 21:56:05 INFO JDBCRDD: closed connection
[2024-06-28T21:56:05.909+0000] {docker.py:413} INFO - 24/06/28 21:56:05 INFO CodeGenerator: Code generated in 6.90475 ms
[2024-06-28T21:56:05.914+0000] {docker.py:413} INFO - 24/06/28 21:56:05 INFO Executor: Finished task 0.0 in stage 1.0 (TID 1). 2029 bytes result sent to driver
[2024-06-28T21:56:05.923+0000] {docker.py:413} INFO - 24/06/28 21:56:05 INFO TaskSetManager: Finished task 0.0 in stage 1.0 (TID 1) in 128 ms on localhost (executor driver) (1/1)
[2024-06-28T21:56:05.924+0000] {docker.py:413} INFO - 24/06/28 21:56:05 INFO TaskSchedulerImpl: Removed TaskSet 1.0, whose tasks have all completed, from pool
[2024-06-28T21:56:05.927+0000] {docker.py:413} INFO - 24/06/28 21:56:05 INFO CodeGenerator: Code generated in 12.816333 ms
[2024-06-28T21:56:05.931+0000] {docker.py:413} INFO - 24/06/28 21:56:05 INFO DAGScheduler: ShuffleMapStage 1 (start at NativeMethodAccessorImpl.java:0) finished in 0.154 s
[2024-06-28T21:56:05.932+0000] {docker.py:413} INFO - 24/06/28 21:56:05 INFO DAGScheduler: looking for newly runnable stages
[2024-06-28T21:56:05.932+0000] {docker.py:413} INFO - 24/06/28 21:56:05 INFO DAGScheduler: running: Set(ShuffleMapStage 0)
[2024-06-28T21:56:05.932+0000] {docker.py:413} INFO - 24/06/28 21:56:05 INFO DAGScheduler: waiting: Set(ResultStage 2)
[2024-06-28T21:56:05.933+0000] {docker.py:413} INFO - 24/06/28 21:56:05 INFO DAGScheduler: failed: Set()
[2024-06-28T21:56:05.940+0000] {docker.py:413} INFO - 24/06/28 21:56:05 INFO ConsumerConfig: ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = none
	bootstrap.servers = [kafka:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-spark-kafka-source-170f9fb6-86e5-49a8-bf3a-577acc797302-1029605498-executor-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = spark-kafka-source-170f9fb6-86e5-49a8-bf3a-577acc797302-1029605498-executor
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.ByteArrayDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.ByteArrayDeserializer
[2024-06-28T21:56:05.965+0000] {docker.py:413} INFO - 24/06/28 21:56:05 INFO AppInfoParser: Kafka version: 3.4.1
24/06/28 21:56:05 INFO AppInfoParser: Kafka commitId: 8a516edc2755df89
24/06/28 21:56:05 INFO AppInfoParser: Kafka startTimeMs: 1719611765964
[2024-06-28T21:56:05.966+0000] {docker.py:413} INFO - 24/06/28 21:56:05 INFO KafkaConsumer: [Consumer clientId=consumer-spark-kafka-source-170f9fb6-86e5-49a8-bf3a-577acc797302-1029605498-executor-1, groupId=spark-kafka-source-170f9fb6-86e5-49a8-bf3a-577acc797302-1029605498-executor] Assigned to partition(s): current_headlines-0
[2024-06-28T21:56:05.971+0000] {docker.py:413} INFO - 24/06/28 21:56:05 INFO KafkaConsumer: [Consumer clientId=consumer-spark-kafka-source-170f9fb6-86e5-49a8-bf3a-577acc797302-1029605498-executor-1, groupId=spark-kafka-source-170f9fb6-86e5-49a8-bf3a-577acc797302-1029605498-executor] Seeking to offset 0 for partition current_headlines-0
[2024-06-28T21:56:05.975+0000] {docker.py:413} INFO - 24/06/28 21:56:05 INFO Metadata: [Consumer clientId=consumer-spark-kafka-source-170f9fb6-86e5-49a8-bf3a-577acc797302-1029605498-executor-1, groupId=spark-kafka-source-170f9fb6-86e5-49a8-bf3a-577acc797302-1029605498-executor] Resetting the last seen epoch of partition current_headlines-0 to 6 since the associated topicId changed from null to oTQJXETvSIybCiV1hWStYA
[2024-06-28T21:56:05.976+0000] {docker.py:413} INFO - 24/06/28 21:56:05 INFO Metadata: [Consumer clientId=consumer-spark-kafka-source-170f9fb6-86e5-49a8-bf3a-577acc797302-1029605498-executor-1, groupId=spark-kafka-source-170f9fb6-86e5-49a8-bf3a-577acc797302-1029605498-executor] Cluster ID: G13gPvLWR7u_hUqWhAPD3A
[2024-06-28T21:56:06.005+0000] {docker.py:413} INFO - 24/06/28 21:56:06 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-170f9fb6-86e5-49a8-bf3a-577acc797302-1029605498-executor-1, groupId=spark-kafka-source-170f9fb6-86e5-49a8-bf3a-577acc797302-1029605498-executor] Seeking to earliest offset of partition current_headlines-0
[2024-06-28T21:56:06.008+0000] {docker.py:413} INFO - 24/06/28 21:56:06 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-170f9fb6-86e5-49a8-bf3a-577acc797302-1029605498-executor-1, groupId=spark-kafka-source-170f9fb6-86e5-49a8-bf3a-577acc797302-1029605498-executor] Resetting offset for partition current_headlines-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=6}}.
24/06/28 21:56:06 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-170f9fb6-86e5-49a8-bf3a-577acc797302-1029605498-executor-1, groupId=spark-kafka-source-170f9fb6-86e5-49a8-bf3a-577acc797302-1029605498-executor] Seeking to latest offset of partition current_headlines-0
[2024-06-28T21:56:06.008+0000] {docker.py:413} INFO - 24/06/28 21:56:06 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-170f9fb6-86e5-49a8-bf3a-577acc797302-1029605498-executor-1, groupId=spark-kafka-source-170f9fb6-86e5-49a8-bf3a-577acc797302-1029605498-executor] Resetting offset for partition current_headlines-0 to position FetchPosition{offset=579, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=6}}.
[2024-06-28T21:56:06.145+0000] {docker.py:413} INFO - 24/06/28 21:56:06 INFO KafkaConsumer: [Consumer clientId=consumer-spark-kafka-source-170f9fb6-86e5-49a8-bf3a-577acc797302-1029605498-executor-1, groupId=spark-kafka-source-170f9fb6-86e5-49a8-bf3a-577acc797302-1029605498-executor] Seeking to offset 500 for partition current_headlines-0
[2024-06-28T21:56:06.147+0000] {docker.py:413} INFO - 24/06/28 21:56:06 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-170f9fb6-86e5-49a8-bf3a-577acc797302-1029605498-executor-1, groupId=spark-kafka-source-170f9fb6-86e5-49a8-bf3a-577acc797302-1029605498-executor] Seeking to earliest offset of partition current_headlines-0
[2024-06-28T21:56:06.654+0000] {docker.py:413} INFO - 24/06/28 21:56:06 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-170f9fb6-86e5-49a8-bf3a-577acc797302-1029605498-executor-1, groupId=spark-kafka-source-170f9fb6-86e5-49a8-bf3a-577acc797302-1029605498-executor] Resetting offset for partition current_headlines-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=6}}.
[2024-06-28T21:56:06.655+0000] {docker.py:413} INFO - 24/06/28 21:56:06 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-170f9fb6-86e5-49a8-bf3a-577acc797302-1029605498-executor-1, groupId=spark-kafka-source-170f9fb6-86e5-49a8-bf3a-577acc797302-1029605498-executor] Seeking to latest offset of partition current_headlines-0
[2024-06-28T21:56:06.655+0000] {docker.py:413} INFO - 24/06/28 21:56:06 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-170f9fb6-86e5-49a8-bf3a-577acc797302-1029605498-executor-1, groupId=spark-kafka-source-170f9fb6-86e5-49a8-bf3a-577acc797302-1029605498-executor] Resetting offset for partition current_headlines-0 to position FetchPosition{offset=579, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=6}}.
[2024-06-28T21:56:06.683+0000] {docker.py:413} INFO - 24/06/28 21:56:06 INFO KafkaDataConsumer: From Kafka topicPartition=current_headlines-0 groupId=spark-kafka-source-170f9fb6-86e5-49a8-bf3a-577acc797302-1029605498-executor read 579 records through 2 polls (polled  out 579 records), taking 548891500 nanos, during time span of 713599792 nanos.
[2024-06-28T21:56:06.685+0000] {docker.py:413} INFO - 24/06/28 21:56:06 INFO Executor: Finished task 0.0 in stage 0.0 (TID 0). 2401 bytes result sent to driver
[2024-06-28T21:56:06.686+0000] {docker.py:413} INFO - 24/06/28 21:56:06 INFO TaskSetManager: Finished task 0.0 in stage 0.0 (TID 0) in 902 ms on localhost (executor driver) (1/1)
[2024-06-28T21:56:06.687+0000] {docker.py:413} INFO - 24/06/28 21:56:06 INFO TaskSchedulerImpl: Removed TaskSet 0.0, whose tasks have all completed, from pool
[2024-06-28T21:56:06.687+0000] {docker.py:413} INFO - 24/06/28 21:56:06 INFO DAGScheduler: ShuffleMapStage 0 (start at NativeMethodAccessorImpl.java:0) finished in 0.971 s
[2024-06-28T21:56:06.687+0000] {docker.py:413} INFO - 24/06/28 21:56:06 INFO DAGScheduler: looking for newly runnable stages
24/06/28 21:56:06 INFO DAGScheduler: running: Set()
[2024-06-28T21:56:06.688+0000] {docker.py:413} INFO - 24/06/28 21:56:06 INFO DAGScheduler: waiting: Set(ResultStage 2)
24/06/28 21:56:06 INFO DAGScheduler: failed: Set()
[2024-06-28T21:56:06.688+0000] {docker.py:413} INFO - 24/06/28 21:56:06 INFO DAGScheduler: Submitting ResultStage 2 (MapPartitionsRDD[18] at start at NativeMethodAccessorImpl.java:0), which has no missing parents
[2024-06-28T21:56:06.717+0000] {docker.py:413} INFO - 24/06/28 21:56:06 INFO MemoryStore: Block broadcast_2 stored as values in memory (estimated size 72.4 KiB, free 434.3 MiB)
[2024-06-28T21:56:06.718+0000] {docker.py:413} INFO - 24/06/28 21:56:06 INFO MemoryStore: Block broadcast_2_piece0 stored as bytes in memory (estimated size 31.7 KiB, free 434.2 MiB)
[2024-06-28T21:56:06.718+0000] {docker.py:413} INFO - 24/06/28 21:56:06 INFO BlockManagerInfo: Added broadcast_2_piece0 in memory on localhost:40919 (size: 31.7 KiB, free: 434.3 MiB)
[2024-06-28T21:56:06.719+0000] {docker.py:413} INFO - 24/06/28 21:56:06 INFO SparkContext: Created broadcast 2 from broadcast at DAGScheduler.scala:1580
[2024-06-28T21:56:06.722+0000] {docker.py:413} INFO - 24/06/28 21:56:06 INFO DAGScheduler: Submitting 200 missing tasks from ResultStage 2 (MapPartitionsRDD[18] at start at NativeMethodAccessorImpl.java:0) (first 15 tasks are for partitions Vector(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14))
[2024-06-28T21:56:06.722+0000] {docker.py:413} INFO - 24/06/28 21:56:06 INFO TaskSchedulerImpl: Adding task set 2.0 with 200 tasks resource profile 0
[2024-06-28T21:56:06.728+0000] {docker.py:413} INFO - 24/06/28 21:56:06 INFO TaskSetManager: Starting task 1.0 in stage 2.0 (TID 2) (localhost, executor driver, partition 1, NODE_LOCAL, 10414 bytes)
[2024-06-28T21:56:06.729+0000] {docker.py:413} INFO - 24/06/28 21:56:06 INFO TaskSetManager: Starting task 2.0 in stage 2.0 (TID 3) (localhost, executor driver, partition 2, NODE_LOCAL, 10414 bytes)
[2024-06-28T21:56:06.730+0000] {docker.py:413} INFO - 24/06/28 21:56:06 INFO TaskSetManager: Starting task 3.0 in stage 2.0 (TID 4) (localhost, executor driver, partition 3, NODE_LOCAL, 10414 bytes)
[2024-06-28T21:56:06.730+0000] {docker.py:413} INFO - 24/06/28 21:56:06 INFO TaskSetManager: Starting task 5.0 in stage 2.0 (TID 5) (localhost, executor driver, partition 5, NODE_LOCAL, 10414 bytes)
[2024-06-28T21:56:06.731+0000] {docker.py:413} INFO - 24/06/28 21:56:06 INFO TaskSetManager: Starting task 6.0 in stage 2.0 (TID 6) (localhost, executor driver, partition 6, NODE_LOCAL, 10414 bytes)
[2024-06-28T21:56:06.732+0000] {docker.py:413} INFO - 24/06/28 21:56:06 INFO TaskSetManager: Starting task 11.0 in stage 2.0 (TID 7) (localhost, executor driver, partition 11, NODE_LOCAL, 10414 bytes)
[2024-06-28T21:56:06.732+0000] {docker.py:413} INFO - 24/06/28 21:56:06 INFO TaskSetManager: Starting task 12.0 in stage 2.0 (TID 8) (localhost, executor driver, partition 12, NODE_LOCAL, 10414 bytes)
[2024-06-28T21:56:06.734+0000] {docker.py:413} INFO - 24/06/28 21:56:06 INFO TaskSetManager: Starting task 14.0 in stage 2.0 (TID 9) (localhost, executor driver, partition 14, NODE_LOCAL, 10414 bytes)
[2024-06-28T21:56:06.734+0000] {docker.py:413} INFO - 24/06/28 21:56:06 INFO TaskSetManager: Starting task 15.0 in stage 2.0 (TID 10) (localhost, executor driver, partition 15, NODE_LOCAL, 10414 bytes)
[2024-06-28T21:56:06.735+0000] {docker.py:413} INFO - 24/06/28 21:56:06 INFO TaskSetManager: Starting task 17.0 in stage 2.0 (TID 11) (localhost, executor driver, partition 17, NODE_LOCAL, 10414 bytes)
[2024-06-28T21:56:06.735+0000] {docker.py:413} INFO - 24/06/28 21:56:06 INFO Executor: Running task 1.0 in stage 2.0 (TID 2)
24/06/28 21:56:06 INFO Executor: Running task 2.0 in stage 2.0 (TID 3)
[2024-06-28T21:56:06.736+0000] {docker.py:413} INFO - 24/06/28 21:56:06 INFO Executor: Running task 3.0 in stage 2.0 (TID 4)
[2024-06-28T21:56:06.740+0000] {docker.py:413} INFO - 24/06/28 21:56:06 INFO Executor: Running task 5.0 in stage 2.0 (TID 5)
24/06/28 21:56:06 INFO Executor: Running task 6.0 in stage 2.0 (TID 6)
[2024-06-28T21:56:06.741+0000] {docker.py:413} INFO - 24/06/28 21:56:06 INFO Executor: Running task 11.0 in stage 2.0 (TID 7)
[2024-06-28T21:56:06.742+0000] {docker.py:413} INFO - 24/06/28 21:56:06 INFO Executor: Running task 12.0 in stage 2.0 (TID 8)
[2024-06-28T21:56:06.742+0000] {docker.py:413} INFO - 24/06/28 21:56:06 INFO Executor: Running task 15.0 in stage 2.0 (TID 10)
[2024-06-28T21:56:06.743+0000] {docker.py:413} INFO - 24/06/28 21:56:06 INFO Executor: Running task 17.0 in stage 2.0 (TID 11)
[2024-06-28T21:56:06.743+0000] {docker.py:413} INFO - 24/06/28 21:56:06 INFO Executor: Running task 14.0 in stage 2.0 (TID 9)
[2024-06-28T21:56:06.859+0000] {docker.py:413} INFO - 24/06/28 21:56:06 INFO ShuffleBlockFetcherIterator: Getting 1 (1538.0 B) non-empty blocks including 1 (1538.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) push-merged-local and 0 (0.0 B) remote blocks
24/06/28 21:56:06 INFO ShuffleBlockFetcherIterator: Getting 1 (789.0 B) non-empty blocks including 1 (789.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) push-merged-local and 0 (0.0 B) remote blocks
24/06/28 21:56:06 INFO ShuffleBlockFetcherIterator: Getting 1 (789.0 B) non-empty blocks including 1 (789.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) push-merged-local and 0 (0.0 B) remote blocks
24/06/28 21:56:06 INFO ShuffleBlockFetcherIterator: Getting 1 (1399.0 B) non-empty blocks including 1 (1399.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) push-merged-local and 0 (0.0 B) remote blocks
[2024-06-28T21:56:06.860+0000] {docker.py:413} INFO - 24/06/28 21:56:06 INFO ShuffleBlockFetcherIterator: Getting 1 (717.0 B) non-empty blocks including 1 (717.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) push-merged-local and 0 (0.0 B) remote blocks
24/06/28 21:56:06 INFO ShuffleBlockFetcherIterator: Getting 1 (717.0 B) non-empty blocks including 1 (717.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) push-merged-local and 0 (0.0 B) remote blocks
24/06/28 21:56:06 INFO ShuffleBlockFetcherIterator: Getting 1 (1538.0 B) non-empty blocks including 1 (1538.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) push-merged-local and 0 (0.0 B) remote blocks
24/06/28 21:56:06 INFO ShuffleBlockFetcherIterator: Getting 1 (717.0 B) non-empty blocks including 1 (717.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) push-merged-local and 0 (0.0 B) remote blocks
[2024-06-28T21:56:06.861+0000] {docker.py:413} INFO - 24/06/28 21:56:06 INFO ShuffleBlockFetcherIterator: Getting 1 (1156.0 B) non-empty blocks including 1 (1156.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) push-merged-local and 0 (0.0 B) remote blocks
[2024-06-28T21:56:06.862+0000] {docker.py:413} INFO - 24/06/28 21:56:06 INFO ShuffleBlockFetcherIterator: Getting 1 (1271.0 B) non-empty blocks including 1 (1271.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) push-merged-local and 0 (0.0 B) remote blocks
[2024-06-28T21:56:06.863+0000] {docker.py:413} INFO - 24/06/28 21:56:06 INFO ShuffleBlockFetcherIterator: Started 0 remote fetches in 10 ms
24/06/28 21:56:06 INFO ShuffleBlockFetcherIterator: Started 0 remote fetches in 10 ms
24/06/28 21:56:06 INFO ShuffleBlockFetcherIterator: Started 0 remote fetches in 10 ms
[2024-06-28T21:56:06.863+0000] {docker.py:413} INFO - 24/06/28 21:56:06 INFO ShuffleBlockFetcherIterator: Started 0 remote fetches in 10 ms
24/06/28 21:56:06 INFO ShuffleBlockFetcherIterator: Started 0 remote fetches in 10 ms
[2024-06-28T21:56:06.864+0000] {docker.py:413} INFO - 24/06/28 21:56:06 INFO ShuffleBlockFetcherIterator: Started 0 remote fetches in 10 ms
24/06/28 21:56:06 INFO ShuffleBlockFetcherIterator: Started 0 remote fetches in 10 ms
24/06/28 21:56:06 INFO ShuffleBlockFetcherIterator: Started 0 remote fetches in 10 ms
[2024-06-28T21:56:06.864+0000] {docker.py:413} INFO - 24/06/28 21:56:06 INFO ShuffleBlockFetcherIterator: Started 0 remote fetches in 10 ms
[2024-06-28T21:56:06.864+0000] {docker.py:413} INFO - 24/06/28 21:56:06 INFO ShuffleBlockFetcherIterator: Started 0 remote fetches in 11 ms
[2024-06-28T21:56:06.871+0000] {docker.py:413} INFO - 24/06/28 21:56:06 INFO CodeGenerator: Code generated in 6.429583 ms
[2024-06-28T21:56:06.886+0000] {docker.py:413} INFO - 24/06/28 21:56:06 INFO CodeGenerator: Code generated in 8.580709 ms
[2024-06-28T21:56:06.897+0000] {docker.py:413} INFO - 24/06/28 21:56:06 INFO CodeGenerator: Code generated in 4.689625 ms
[2024-06-28T21:56:06.904+0000] {docker.py:413} INFO - 24/06/28 21:56:06 INFO ShuffleBlockFetcherIterator: Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) push-merged-local and 0 (0.0 B) remote blocks
24/06/28 21:56:06 INFO ShuffleBlockFetcherIterator: Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) push-merged-local and 0 (0.0 B) remote blocks
24/06/28 21:56:06 INFO ShuffleBlockFetcherIterator: Started 0 remote fetches in 0 ms
24/06/28 21:56:06 INFO ShuffleBlockFetcherIterator: Getting 1 (88.0 B) non-empty blocks including 1 (88.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) push-merged-local and 0 (0.0 B) remote blocks
24/06/28 21:56:06 INFO ShuffleBlockFetcherIterator: Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) push-merged-local and 0 (0.0 B) remote blocks
24/06/28 21:56:06 INFO ShuffleBlockFetcherIterator: Getting 1 (88.0 B) non-empty blocks including 1 (88.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) push-merged-local and 0 (0.0 B) remote blocks
24/06/28 21:56:06 INFO ShuffleBlockFetcherIterator: Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) push-merged-local and 0 (0.0 B) remote blocks
24/06/28 21:56:06 INFO ShuffleBlockFetcherIterator: Started 0 remote fetches in 0 ms
24/06/28 21:56:06 INFO ShuffleBlockFetcherIterator: Started 0 remote fetches in 0 ms
24/06/28 21:56:06 INFO ShuffleBlockFetcherIterator: Getting 1 (88.0 B) non-empty blocks including 1 (88.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) push-merged-local and 0 (0.0 B) remote blocks
24/06/28 21:56:06 INFO ShuffleBlockFetcherIterator: Started 0 remote fetches in 0 ms
24/06/28 21:56:06 INFO ShuffleBlockFetcherIterator: Getting 1 (106.0 B) non-empty blocks including 1 (106.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) push-merged-local and 0 (0.0 B) remote blocks
24/06/28 21:56:06 INFO ShuffleBlockFetcherIterator: Started 0 remote fetches in 1 ms
24/06/28 21:56:06 INFO ShuffleBlockFetcherIterator: Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) push-merged-local and 0 (0.0 B) remote blocks
24/06/28 21:56:06 INFO ShuffleBlockFetcherIterator: Started 0 remote fetches in 1 ms
24/06/28 21:56:06 INFO ShuffleBlockFetcherIterator: Started 0 remote fetches in 0 ms
[2024-06-28T21:56:06.904+0000] {docker.py:413} INFO - 24/06/28 21:56:06 INFO ShuffleBlockFetcherIterator: Getting 1 (106.0 B) non-empty blocks including 1 (106.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) push-merged-local and 0 (0.0 B) remote blocks
24/06/28 21:56:06 INFO ShuffleBlockFetcherIterator: Started 0 remote fetches in 0 ms
24/06/28 21:56:06 INFO ShuffleBlockFetcherIterator: Started 0 remote fetches in 0 ms
[2024-06-28T21:56:06.904+0000] {docker.py:413} INFO - 24/06/28 21:56:06 INFO ShuffleBlockFetcherIterator: Started 0 remote fetches in 1 ms
[2024-06-28T21:56:06.908+0000] {docker.py:413} INFO - 24/06/28 21:56:06 INFO CodeGenerator: Code generated in 4.916459 ms
[2024-06-28T21:56:06.922+0000] {docker.py:413} INFO - 24/06/28 21:56:06 INFO CodeGenerator: Code generated in 10.823458 ms
[2024-06-28T21:56:07.475+0000] {docker.py:413} INFO - 24/06/28 21:56:07 INFO CodeGenerator: Code generated in 6.264958 ms
[2024-06-28T21:56:07.478+0000] {docker.py:413} INFO - 24/06/28 21:56:07 INFO BlockManagerInfo: Removed broadcast_1_piece0 on localhost:40919 in memory (size: 7.4 KiB, free: 434.4 MiB)
[2024-06-28T21:56:07.481+0000] {docker.py:413} INFO - 24/06/28 21:56:07 INFO BlockManagerInfo: Removed broadcast_0_piece0 on localhost:40919 in memory (size: 15.2 KiB, free: 434.4 MiB)
[2024-06-28T21:56:07.489+0000] {docker.py:413} INFO - 24/06/28 21:56:07 INFO Executor: Finished task 5.0 in stage 2.0 (TID 5). 6218 bytes result sent to driver
[2024-06-28T21:56:07.490+0000] {docker.py:413} INFO - 24/06/28 21:56:07 INFO Executor: Finished task 3.0 in stage 2.0 (TID 4). 6218 bytes result sent to driver
24/06/28 21:56:07 INFO Executor: Finished task 2.0 in stage 2.0 (TID 3). 6218 bytes result sent to driver
[2024-06-28T21:56:07.490+0000] {docker.py:413} INFO - 24/06/28 21:56:07 INFO Executor: Finished task 6.0 in stage 2.0 (TID 6). 6218 bytes result sent to driver
[2024-06-28T21:56:07.491+0000] {docker.py:413} INFO - 24/06/28 21:56:07 INFO TaskSetManager: Starting task 19.0 in stage 2.0 (TID 12) (localhost, executor driver, partition 19, NODE_LOCAL, 10414 bytes)
[2024-06-28T21:56:07.491+0000] {docker.py:413} INFO - 24/06/28 21:56:07 INFO Executor: Finished task 1.0 in stage 2.0 (TID 2). 6218 bytes result sent to driver
[2024-06-28T21:56:07.491+0000] {docker.py:413} INFO - 24/06/28 21:56:07 INFO Executor: Running task 19.0 in stage 2.0 (TID 12)
[2024-06-28T21:56:07.492+0000] {docker.py:413} INFO - 24/06/28 21:56:07 INFO TaskSetManager: Starting task 22.0 in stage 2.0 (TID 13) (localhost, executor driver, partition 22, NODE_LOCAL, 10414 bytes)
[2024-06-28T21:56:07.493+0000] {docker.py:413} INFO - 24/06/28 21:56:07 INFO Executor: Running task 22.0 in stage 2.0 (TID 13)
[2024-06-28T21:56:07.493+0000] {docker.py:413} INFO - 24/06/28 21:56:07 INFO TaskSetManager: Starting task 25.0 in stage 2.0 (TID 14) (localhost, executor driver, partition 25, NODE_LOCAL, 10414 bytes)
[2024-06-28T21:56:07.494+0000] {docker.py:413} INFO - 24/06/28 21:56:07 INFO TaskSetManager: Starting task 27.0 in stage 2.0 (TID 15) (localhost, executor driver, partition 27, NODE_LOCAL, 10414 bytes)
[2024-06-28T21:56:07.495+0000] {docker.py:413} INFO - 24/06/28 21:56:07 INFO Executor: Running task 25.0 in stage 2.0 (TID 14)
[2024-06-28T21:56:07.495+0000] {docker.py:413} INFO - 24/06/28 21:56:07 INFO Executor: Running task 27.0 in stage 2.0 (TID 15)
[2024-06-28T21:56:07.504+0000] {docker.py:413} INFO - 24/06/28 21:56:07 INFO TaskSetManager: Starting task 30.0 in stage 2.0 (TID 16) (localhost, executor driver, partition 30, NODE_LOCAL, 10414 bytes)
[2024-06-28T21:56:07.505+0000] {docker.py:413} INFO - 24/06/28 21:56:07 INFO TaskSetManager: Finished task 5.0 in stage 2.0 (TID 5) in 768 ms on localhost (executor driver) (1/200)
24/06/28 21:56:07 INFO Executor: Running task 30.0 in stage 2.0 (TID 16)
[2024-06-28T21:56:07.506+0000] {docker.py:413} INFO - 24/06/28 21:56:07 INFO TaskSetManager: Finished task 2.0 in stage 2.0 (TID 3) in 769 ms on localhost (executor driver) (2/200)
[2024-06-28T21:56:07.506+0000] {docker.py:413} INFO - 24/06/28 21:56:07 INFO TaskSetManager: Finished task 3.0 in stage 2.0 (TID 4) in 769 ms on localhost (executor driver) (3/200)
[2024-06-28T21:56:07.507+0000] {docker.py:413} INFO - 24/06/28 21:56:07 INFO TaskSetManager: Finished task 1.0 in stage 2.0 (TID 2) in 772 ms on localhost (executor driver) (4/200)
[2024-06-28T21:56:07.508+0000] {docker.py:413} INFO - 24/06/28 21:56:07 INFO TaskSetManager: Finished task 6.0 in stage 2.0 (TID 6) in 769 ms on localhost (executor driver) (5/200)
[2024-06-28T21:56:07.508+0000] {docker.py:413} INFO - 24/06/28 21:56:07 INFO ShuffleBlockFetcherIterator: Getting 1 (1271.0 B) non-empty blocks including 1 (1271.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) push-merged-local and 0 (0.0 B) remote blocks
[2024-06-28T21:56:07.509+0000] {docker.py:413} INFO - 24/06/28 21:56:07 INFO ShuffleBlockFetcherIterator: Started 0 remote fetches in 0 ms
[2024-06-28T21:56:07.509+0000] {docker.py:413} INFO - 24/06/28 21:56:07 INFO ShuffleBlockFetcherIterator: Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) push-merged-local and 0 (0.0 B) remote blocks
24/06/28 21:56:07 INFO ShuffleBlockFetcherIterator: Getting 1 (1399.0 B) non-empty blocks including 1 (1399.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) push-merged-local and 0 (0.0 B) remote blocks
24/06/28 21:56:07 INFO ShuffleBlockFetcherIterator: Started 0 remote fetches in 0 ms
24/06/28 21:56:07 INFO ShuffleBlockFetcherIterator: Started 0 remote fetches in 0 ms
[2024-06-28T21:56:07.509+0000] {docker.py:413} INFO - 24/06/28 21:56:07 INFO ShuffleBlockFetcherIterator: Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) push-merged-local and 0 (0.0 B) remote blocks
[2024-06-28T21:56:07.510+0000] {docker.py:413} INFO - 24/06/28 21:56:07 INFO ShuffleBlockFetcherIterator: Started 0 remote fetches in 0 ms
[2024-06-28T21:56:07.510+0000] {docker.py:413} INFO - 24/06/28 21:56:07 INFO ShuffleBlockFetcherIterator: Getting 1 (334.0 B) non-empty blocks including 1 (334.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) push-merged-local and 0 (0.0 B) remote blocks
[2024-06-28T21:56:07.510+0000] {docker.py:413} INFO - 24/06/28 21:56:07 INFO ShuffleBlockFetcherIterator: Started 0 remote fetches in 1 ms
[2024-06-28T21:56:07.511+0000] {docker.py:413} INFO - 24/06/28 21:56:07 INFO ShuffleBlockFetcherIterator: Getting 1 (1692.0 B) non-empty blocks including 1 (1692.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) push-merged-local and 0 (0.0 B) remote blocks
[2024-06-28T21:56:07.511+0000] {docker.py:413} INFO - 24/06/28 21:56:07 INFO ShuffleBlockFetcherIterator: Started 0 remote fetches in 0 ms
[2024-06-28T21:56:07.511+0000] {docker.py:413} INFO - 24/06/28 21:56:07 INFO ShuffleBlockFetcherIterator: Getting 1 (97.0 B) non-empty blocks including 1 (97.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) push-merged-local and 0 (0.0 B) remote blocks
24/06/28 21:56:07 INFO ShuffleBlockFetcherIterator: Getting 1 (955.0 B) non-empty blocks including 1 (955.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) push-merged-local and 0 (0.0 B) remote blocks
[2024-06-28T21:56:07.514+0000] {docker.py:413} INFO - 24/06/28 21:56:07 INFO ShuffleBlockFetcherIterator: Started 0 remote fetches in 0 ms
24/06/28 21:56:07 INFO ShuffleBlockFetcherIterator: Started 0 remote fetches in 0 ms
[2024-06-28T21:56:07.515+0000] {docker.py:413} INFO - 24/06/28 21:56:07 INFO ShuffleBlockFetcherIterator: Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) push-merged-local and 0 (0.0 B) remote blocks
[2024-06-28T21:56:07.515+0000] {docker.py:413} INFO - 24/06/28 21:56:07 INFO ShuffleBlockFetcherIterator: Started 0 remote fetches in 0 ms
[2024-06-28T21:56:07.515+0000] {docker.py:413} INFO - 24/06/28 21:56:07 INFO ShuffleBlockFetcherIterator: Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) push-merged-local and 0 (0.0 B) remote blocks
[2024-06-28T21:56:07.516+0000] {docker.py:413} INFO - 24/06/28 21:56:07 INFO ShuffleBlockFetcherIterator: Started 0 remote fetches in 0 ms
[2024-06-28T21:56:07.521+0000] {docker.py:413} INFO - 24/06/28 21:56:07 INFO Executor: Finished task 27.0 in stage 2.0 (TID 15). 6261 bytes result sent to driver
[2024-06-28T21:56:07.523+0000] {docker.py:413} INFO - 24/06/28 21:56:07 INFO TaskSetManager: Starting task 32.0 in stage 2.0 (TID 17) (localhost, executor driver, partition 32, NODE_LOCAL, 10414 bytes)
[2024-06-28T21:56:07.524+0000] {docker.py:413} INFO - 24/06/28 21:56:07 INFO TaskSetManager: Finished task 27.0 in stage 2.0 (TID 15) in 28 ms on localhost (executor driver) (6/200)
[2024-06-28T21:56:07.524+0000] {docker.py:413} INFO - 24/06/28 21:56:07 INFO Executor: Running task 32.0 in stage 2.0 (TID 17)
[2024-06-28T21:56:07.528+0000] {docker.py:413} INFO - 24/06/28 21:56:07 INFO ShuffleBlockFetcherIterator: Getting 1 (868.0 B) non-empty blocks including 1 (868.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) push-merged-local and 0 (0.0 B) remote blocks
24/06/28 21:56:07 INFO ShuffleBlockFetcherIterator: Started 0 remote fetches in 0 ms
[2024-06-28T21:56:07.530+0000] {docker.py:413} INFO - 24/06/28 21:56:07 INFO ShuffleBlockFetcherIterator: Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) push-merged-local and 0 (0.0 B) remote blocks
24/06/28 21:56:07 INFO ShuffleBlockFetcherIterator: Started 0 remote fetches in 0 ms
[2024-06-28T21:56:07.569+0000] {docker.py:413} INFO - 24/06/28 21:56:07 INFO Executor: Finished task 15.0 in stage 2.0 (TID 10). 6304 bytes result sent to driver
24/06/28 21:56:07 INFO Executor: Finished task 32.0 in stage 2.0 (TID 17). 6218 bytes result sent to driver
[2024-06-28T21:56:07.570+0000] {docker.py:413} INFO - 24/06/28 21:56:07 INFO TaskSetManager: Starting task 35.0 in stage 2.0 (TID 18) (localhost, executor driver, partition 35, NODE_LOCAL, 10414 bytes)
[2024-06-28T21:56:07.570+0000] {docker.py:413} INFO - 24/06/28 21:56:07 INFO TaskSetManager: Starting task 36.0 in stage 2.0 (TID 19) (localhost, executor driver, partition 36, NODE_LOCAL, 10414 bytes)
[2024-06-28T21:56:07.570+0000] {docker.py:413} INFO - 24/06/28 21:56:07 INFO Executor: Running task 36.0 in stage 2.0 (TID 19)
[2024-06-28T21:56:07.570+0000] {docker.py:413} INFO - 24/06/28 21:56:07 INFO Executor: Running task 35.0 in stage 2.0 (TID 18)
[2024-06-28T21:56:07.570+0000] {docker.py:413} INFO - 24/06/28 21:56:07 ERROR Executor: Exception in task 22.0 in stage 2.0 (TID 13)
java.sql.BatchUpdateException: Batch entry 1 INSERT INTO current_headlines_table ("publishedat","source","author","title","description","url","urltoimage","content") VALUES ('2024-06-26T22:36:40Z','{"id":"politico","name":"Politico"}','POLITICO','Trump debate playbook: Skip mock debates, fundraise and undermine the results - POLITICO',NULL,'https://www.politico.com/news/2024/06/26/trump-debate-preparation-00165187',NULL,NULL) was aborted: ERROR: duplicate key value violates unique constraint "current_headlines_table_pkey"
  Detail: Key (publishedat)=(2024-06-26T22:36:40Z) already exists.  Call getNextException to see other errors in the batch.
	at org.postgresql.jdbc.BatchResultHandler.handleError(BatchResultHandler.java:165)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2367)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:560)
	at org.postgresql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:893)
	at org.postgresql.jdbc.PgStatement.executeBatch(PgStatement.java:916)
	at org.postgresql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1684)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.savePartition(JdbcUtils.scala:751)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1(JdbcUtils.scala:902)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1$adapted(JdbcUtils.scala:901)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2(RDD.scala:1036)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2$adapted(RDD.scala:1036)
	at org.apache.spark.SparkContext.$anonfun$runJob$5(SparkContext.scala:2438)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:93)
	at org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:161)
	at org.apache.spark.scheduler.Task.run(Task.scala:141)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.postgresql.util.PSQLException: ERROR: duplicate key value violates unique constraint "current_headlines_table_pkey"
  Detail: Key (publishedat)=(2024-06-26T22:36:40Z) already exists.
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2676)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2366)
	... 21 more
24/06/28 21:56:07 ERROR Executor: Exception in task 11.0 in stage 2.0 (TID 7)
java.sql.BatchUpdateException: Batch entry 1 INSERT INTO current_headlines_table ("publishedat","source","author","title","description","url","urltoimage","content") VALUES ('2024-06-26T21:06:07Z','{"id":"al-jazeera-english","name":"Al Jazeera English"}','Al Jazeera','Troops begin to withdraw as Bolivian president rallies against coup attempt - Al Jazeera English','Regional organisations mobilised behind Bolivian government after troops and armoured vehicles gathered in the capital.','https://www.aljazeera.com/news/2024/6/26/fears-of-coup-attempt-in-bolivia-as-soldiers-storm-presidential-palace','https://www.aljazeera.com/wp-content/uploads/2024/06/AP24178775725792-1719438488.jpg?resize=1200%2C675','Bolivian President Luis Arce has offered his thanks to the people of the country after facing down a coup attempt that drew international condemnation and saw soldiers smash through the doors of the ? [+4381 chars]') was aborted: ERROR: duplicate key value violates unique constraint "current_headlines_table_pkey"
  Detail: Key (publishedat)=(2024-06-26T21:06:07Z) already exists.  Call getNextException to see other errors in the batch.
	at org.postgresql.jdbc.BatchResultHandler.handleError(BatchResultHandler.java:165)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2367)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:560)
	at org.postgresql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:893)
	at org.postgresql.jdbc.PgStatement.executeBatch(PgStatement.java:916)
	at org.postgresql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1684)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.savePartition(JdbcUtils.scala:751)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1(JdbcUtils.scala:902)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1$adapted(JdbcUtils.scala:901)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2(RDD.scala:1036)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2$adapted(RDD.scala:1036)
	at org.apache.spark.SparkContext.$anonfun$runJob$5(SparkContext.scala:2438)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:93)
	at org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:161)
	at org.apache.spark.scheduler.Task.run(Task.scala:141)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.postgresql.util.PSQLException: ERROR: duplicate key value violates unique constraint "current_headlines_table_pkey"
  Detail: Key (publishedat)=(2024-06-26T21:06:07Z) already exists.
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2676)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2366)
	... 21 more
24/06/28 21:56:07 ERROR Executor: Exception in task 30.0 in stage 2.0 (TID 16)
java.sql.BatchUpdateException: Batch entry 2 INSERT INTO current_headlines_table ("publishedat","source","author","title","description","url","urltoimage","content") VALUES ('2024-06-26T22:00:35Z','{"id":null,"name":"The Weather Channel"}','The Weather Channel','Hundreds Of Ice Cream, Coffee Products Recalled - Videos from The Weather Channel - The Weather Channel','The FDA has announced two widespread recalls of coffee and ice cream products. Find out if your favorites are on the list. <a href="https://www.fda.gov/safety/recalls-market-withdrawals-safety-alerts/totally-cool-inc-recalls-all-ice-cream-products-because-pos?','https://weather.com/home-garden/food/video/summer-treat-recalls-is-your-favorite-on-the-list','https://v.w-x.co/1719439224584_0626_fda_recall_v1_35199b66-0605-4711-a2af-f50a29aef4f2.jpg',NULL) was aborted: ERROR: duplicate key value violates unique constraint "current_headlines_table_pkey"
  Detail: Key (publishedat)=(2024-06-26T22:00:35Z) already exists.  Call getNextException to see other errors in the batch.
	at org.postgresql.jdbc.BatchResultHandler.handleError(BatchResultHandler.java:165)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2367)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:560)
	at org.postgresql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:893)
	at org.postgresql.jdbc.PgStatement.executeBatch(PgStatement.java:916)
	at org.postgresql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1684)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.savePartition(JdbcUtils.scala:751)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1(JdbcUtils.scala:902)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1$adapted(JdbcUtils.scala:901)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2(RDD.scala:1036)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2$adapted(RDD.scala:1036)
	at org.apache.spark.SparkContext.$anonfun$runJob$5(SparkContext.scala:2438)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:93)
	at org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:161)
	at org.apache.spark.scheduler.Task.run(Task.scala:141)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.postgresql.util.PSQLException: ERROR: duplicate key value violates unique constraint "current_headlines_table_pkey"
  Detail: Key (publishedat)=(2024-06-26T22:00:35Z) already exists.
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2676)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2366)
	... 21 more
[2024-06-28T21:56:07.577+0000] {docker.py:413} INFO - 24/06/28 21:56:07 ERROR Executor: Exception in task 12.0 in stage 2.0 (TID 8)
java.sql.BatchUpdateException: Batch entry 1 INSERT INTO current_headlines_table ("publishedat","source","author","title","description","url","urltoimage","content") VALUES ('2024-06-26T17:00:00Z','{"id":"the-verge","name":"The Verge"}','Jay Peters','An AI version of Al Michaels will deliver Olympic recaps on Peacock - The Verge','Peacock?s Paris Olympics coverage will include personalized daily recaps narrated by an AI-generated version of Al Michaels? voice.','https://www.theverge.com/2024/6/26/24185774/olympics-ai-al-michaels-voice-recaps','https://cdn.vox-cdn.com/thumbor/loA3E-uE5D5ufnZcSYeCltrB99o=/0x0:8640x5760/1200x628/filters:focal(5224x2847:5225x2848)/cdn.vox-cdn.com/uploads/chorus_asset/file/25505642/1772478978.jpg','An AI version of Al Michaels will deliver Olympic recaps on Peacock
An AI version of Al Michaels will deliver Olympic recaps on Peacock
 / NBCs AI-generated voice could create nearly 7 million cust? [+2697 chars]') was aborted: ERROR: duplicate key value violates unique constraint "current_headlines_table_pkey"
  Detail: Key (publishedat)=(2024-06-26T17:00:00Z) already exists.  Call getNextException to see other errors in the batch.
	at org.postgresql.jdbc.BatchResultHandler.handleError(BatchResultHandler.java:165)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2367)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:560)
	at org.postgresql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:893)
	at org.postgresql.jdbc.PgStatement.executeBatch(PgStatement.java:916)
	at org.postgresql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1684)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.savePartition(JdbcUtils.scala:751)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1(JdbcUtils.scala:902)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1$adapted(JdbcUtils.scala:901)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2(RDD.scala:1036)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2$adapted(RDD.scala:1036)
	at org.apache.spark.SparkContext.$anonfun$runJob$5(SparkContext.scala:2438)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:93)
	at org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:161)
	at org.apache.spark.scheduler.Task.run(Task.scala:141)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.postgresql.util.PSQLException: ERROR: duplicate key value violates unique constraint "current_headlines_table_pkey"
  Detail: Key (publishedat)=(2024-06-26T17:00:00Z) already exists.
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2676)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2366)
	... 21 more
[2024-06-28T21:56:07.579+0000] {docker.py:413} INFO - 24/06/28 21:56:07 ERROR Executor: Exception in task 19.0 in stage 2.0 (TID 12)
java.sql.BatchUpdateException: Batch entry 1 INSERT INTO current_headlines_table ("publishedat","source","author","title","description","url","urltoimage","content") VALUES ('2024-06-26T16:00:13Z','{"id":null,"name":"Space.com"}','Andrew Jones','What happened to China''s Chang''e 6 lander on the moon''s far side? - Space.com','The Chang''e 6 lander wasn''t equipped with heaters to help it survive the long, cold lunar night.','https://www.space.com/china-chang-e-6-moon-lander-far-side-fate','https://cdn.mos.cms.futurecdn.net/LEb2kLUkdpZay9QTj8srWS-1200-80.png','China''s Chang''e 6 mission has successfully delivered to Earth the first-ever samples from the far side of the moon. But what became of the lander that collected the lunar material?
Chang''e 6 launche? [+3742 chars]') was aborted: ERROR: duplicate key value violates unique constraint "current_headlines_table_pkey"
  Detail: Key (publishedat)=(2024-06-26T16:00:13Z) already exists.  Call getNextException to see other errors in the batch.
	at org.postgresql.jdbc.BatchResultHandler.handleError(BatchResultHandler.java:165)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2367)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:560)
	at org.postgresql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:893)
	at org.postgresql.jdbc.PgStatement.executeBatch(PgStatement.java:916)
	at org.postgresql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1684)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.savePartition(JdbcUtils.scala:751)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1(JdbcUtils.scala:902)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1$adapted(JdbcUtils.scala:901)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2(RDD.scala:1036)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2$adapted(RDD.scala:1036)
	at org.apache.spark.SparkContext.$anonfun$runJob$5(SparkContext.scala:2438)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:93)
	at org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:161)
	at org.apache.spark.scheduler.Task.run(Task.scala:141)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.postgresql.util.PSQLException: ERROR: duplicate key value violates unique constraint "current_headlines_table_pkey"
  Detail: Key (publishedat)=(2024-06-26T16:00:13Z) already exists.
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2676)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2366)
	... 21 more
[2024-06-28T21:56:07.580+0000] {docker.py:413} INFO - 24/06/28 21:56:07 INFO TaskSetManager: Finished task 15.0 in stage 2.0 (TID 10) in 847 ms on localhost (executor driver) (7/200)
[2024-06-28T21:56:07.581+0000] {docker.py:413} INFO - 24/06/28 21:56:07 ERROR Executor: Exception in task 17.0 in stage 2.0 (TID 11)
java.sql.BatchUpdateException: Batch entry 1 INSERT INTO current_headlines_table ("publishedat","source","author","title","description","url","urltoimage","content") VALUES ('2024-06-26T05:46:56Z','{"id":null,"name":"NPR"}',NULL,'FDA warns top U.S. bakery not to claim foods contain allergens when they don''t - NPR','The FDA found Bimbo Bakeries USA ? which includes brands such as Sara Lee and Ball Park buns and rolls ? listed ingredients such as sesame or tree nuts on labels even when they weren''t in the foods.','https://www.npr.org/2024/06/26/g-s1-6238/fda-warns-bakery-foods-allergens','https://npr.brightspotcdn.com/dims3/default/strip/false/crop/2000x1125+0+104/resize/1400/quality/100/format/jpeg/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2Fd8%2F16%2Fe55fa0fb497f9e722a56bbbc2b8f%2Fap24177785376325.jpg','Federal food safety regulators said Tuesday that they have warned a top U.S. bakery to stop using labels that say its products contain potentially dangerous allergens when they don''t.
U.S. Food and ? [+2568 chars]') was aborted: ERROR: duplicate key value violates unique constraint "current_headlines_table_pkey"
  Detail: Key (publishedat)=(2024-06-26T05:46:56Z) already exists.  Call getNextException to see other errors in the batch.
	at org.postgresql.jdbc.BatchResultHandler.handleError(BatchResultHandler.java:165)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2367)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:560)
	at org.postgresql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:893)
	at org.postgresql.jdbc.PgStatement.executeBatch(PgStatement.java:916)
	at org.postgresql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1684)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.savePartition(JdbcUtils.scala:751)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1(JdbcUtils.scala:902)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1$adapted(JdbcUtils.scala:901)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2(RDD.scala:1036)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2$adapted(RDD.scala:1036)
	at org.apache.spark.SparkContext.$anonfun$runJob$5(SparkContext.scala:2438)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:93)
	at org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:161)
	at org.apache.spark.scheduler.Task.run(Task.scala:141)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.postgresql.util.PSQLException: ERROR: duplicate key value violates unique constraint "current_headlines_table_pkey"
  Detail: Key (publishedat)=(2024-06-26T05:46:56Z) already exists.
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2676)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2366)
	... 21 more
[2024-06-28T21:56:07.585+0000] {docker.py:413} INFO - 24/06/28 21:56:07 ERROR Executor: Exception in task 14.0 in stage 2.0 (TID 9)
java.sql.BatchUpdateException: Batch entry 1 INSERT INTO current_headlines_table ("publishedat","source","author","title","description","url","urltoimage","content") VALUES ('2024-06-26T04:40:45Z','{"id":"cbs-news","name":"CBS News"}','Jesse Sarles, Austen Erblat','Lauren Boebert wins crowded House GOP primary in new Colorado district - CBS News','Republican Rep. Lauren Boebert declared victory on Tuesday night in the primary election in her new Colorado district.','https://www.cbsnews.com/colorado/news/lauren-boebert-wins-colorado-4th-congressional-district-republican-primary/','https://assets2.cbsnewsstatic.com/hub/i/r/2024/06/26/7e070f25-2f00-46f7-b7c8-670413a2d960/thumbnail/1200x630/422748044f79ba0d00e98d2723e5f785/boebert.jpg?v=d44ea471ad55b1f821a0763c85064960','Republican Rep. Lauren Boebert has emerged victorious in the primary election in her new Colorado district.
The controversial Congresswoman defeated five GOP opponents in a competitive primary in Co? [+5329 chars]') was aborted: ERROR: duplicate key value violates unique constraint "current_headlines_table_pkey"
  Detail: Key (publishedat)=(2024-06-26T04:40:45Z) already exists.  Call getNextException to see other errors in the batch.
	at org.postgresql.jdbc.BatchResultHandler.handleError(BatchResultHandler.java:165)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2367)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:560)
	at org.postgresql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:893)
	at org.postgresql.jdbc.PgStatement.executeBatch(PgStatement.java:916)
	at org.postgresql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1684)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.savePartition(JdbcUtils.scala:751)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1(JdbcUtils.scala:902)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1$adapted(JdbcUtils.scala:901)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2(RDD.scala:1036)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2$adapted(RDD.scala:1036)
	at org.apache.spark.SparkContext.$anonfun$runJob$5(SparkContext.scala:2438)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:93)
	at org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:161)
	at org.apache.spark.scheduler.Task.run(Task.scala:141)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.postgresql.util.PSQLException: ERROR: duplicate key value violates unique constraint "current_headlines_table_pkey"
  Detail: Key (publishedat)=(2024-06-26T04:40:45Z) already exists.
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2676)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2366)
	... 21 more
[2024-06-28T21:56:07.585+0000] {docker.py:413} INFO - 24/06/28 21:56:07 INFO TaskSetManager: Finished task 32.0 in stage 2.0 (TID 17) in 58 ms on localhost (executor driver) (8/200)
[2024-06-28T21:56:07.586+0000] {docker.py:413} INFO - 24/06/28 21:56:07 ERROR Executor: Exception in task 25.0 in stage 2.0 (TID 14)
java.sql.BatchUpdateException: Batch entry 2 INSERT INTO current_headlines_table ("publishedat","source","author","title","description","url","urltoimage","content") VALUES ('2024-06-26T19:20:00Z','{"id":"cnn","name":"CNN"}','Taylor Nicioli','Decades after the famed Kyrenia shipwreck?s discovery, researchers have a new estimate of when it sank - CNN','The timeline of a Hellenistic Kyrenia shipwreck stumped researchers for decades. But thanks to a cache of ancient almonds, a new study may have a better estimate.','https://www.cnn.com/2024/06/26/science/kyrenia-shipwreck-radiocarbon-dating-almonds-scn/index.html','https://media.cnn.com/api/v1/images/stellar/prod/kyrenia-ship-hull-during-excavation.jpg?c=16x9&q=w_800,c_fill','Sign up for CNNs Wonder Theory science newsletter.?Explore the universe with news on fascinating discoveries, scientific advancements and more.
A lone diverfirst laid eyes on the ancient Kyrenia shi? [+6426 chars]') was aborted: ERROR: duplicate key value violates unique constraint "current_headlines_table_pkey"
  Detail: Key (publishedat)=(2024-06-26T19:20:00Z) already exists.  Call getNextException to see other errors in the batch.
	at org.postgresql.jdbc.BatchResultHandler.handleError(BatchResultHandler.java:165)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2367)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:560)
	at org.postgresql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:893)
	at org.postgresql.jdbc.PgStatement.executeBatch(PgStatement.java:916)
	at org.postgresql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1684)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.savePartition(JdbcUtils.scala:751)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1(JdbcUtils.scala:902)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1$adapted(JdbcUtils.scala:901)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2(RDD.scala:1036)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2$adapted(RDD.scala:1036)
	at org.apache.spark.SparkContext.$anonfun$runJob$5(SparkContext.scala:2438)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:93)
	at org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:161)
	at org.apache.spark.scheduler.Task.run(Task.scala:141)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.postgresql.util.PSQLException: ERROR: duplicate key value violates unique constraint "current_headlines_table_pkey"
  Detail: Key (publishedat)=(2024-06-26T19:20:00Z) already exists.
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2676)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2366)
	... 21 more
[2024-06-28T21:56:07.586+0000] {docker.py:413} INFO - 24/06/28 21:56:07 INFO ShuffleBlockFetcherIterator: Getting 1 (1538.0 B) non-empty blocks including 1 (1538.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) push-merged-local and 0 (0.0 B) remote blocks
[2024-06-28T21:56:07.586+0000] {docker.py:413} INFO - 24/06/28 21:56:07 INFO ShuffleBlockFetcherIterator: Started 0 remote fetches in 0 ms
[2024-06-28T21:56:07.587+0000] {docker.py:413} INFO - 24/06/28 21:56:07 INFO ShuffleBlockFetcherIterator: Getting 1 (955.0 B) non-empty blocks including 1 (955.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) push-merged-local and 0 (0.0 B) remote blocks
24/06/28 21:56:07 INFO ShuffleBlockFetcherIterator: Started 0 remote fetches in 0 ms
[2024-06-28T21:56:07.588+0000] {docker.py:413} INFO - 24/06/28 21:56:07 INFO ShuffleBlockFetcherIterator: Getting 1 (106.0 B) non-empty blocks including 1 (106.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) push-merged-local and 0 (0.0 B) remote blocks
24/06/28 21:56:07 INFO ShuffleBlockFetcherIterator: Started 0 remote fetches in 1 ms
[2024-06-28T21:56:07.588+0000] {docker.py:413} INFO - 24/06/28 21:56:07 INFO ShuffleBlockFetcherIterator: Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) push-merged-local and 0 (0.0 B) remote blocks
24/06/28 21:56:07 INFO ShuffleBlockFetcherIterator: Started 0 remote fetches in 0 ms
[2024-06-28T21:56:07.590+0000] {docker.py:413} INFO - 24/06/28 21:56:07 INFO Executor: Finished task 36.0 in stage 2.0 (TID 19). 6175 bytes result sent to driver
[2024-06-28T21:56:07.591+0000] {docker.py:413} INFO - 24/06/28 21:56:07 INFO TaskSetManager: Starting task 40.0 in stage 2.0 (TID 20) (localhost, executor driver, partition 40, NODE_LOCAL, 10414 bytes)
[2024-06-28T21:56:07.593+0000] {docker.py:413} INFO - 24/06/28 21:56:07 INFO Executor: Running task 40.0 in stage 2.0 (TID 20)
24/06/28 21:56:07 INFO TaskSetManager: Starting task 41.0 in stage 2.0 (TID 21) (localhost, executor driver, partition 41, NODE_LOCAL, 10414 bytes)
[2024-06-28T21:56:07.593+0000] {docker.py:413} INFO - 24/06/28 21:56:07 INFO Executor: Running task 41.0 in stage 2.0 (TID 21)
24/06/28 21:56:07 INFO TaskSetManager: Starting task 44.0 in stage 2.0 (TID 22) (localhost, executor driver, partition 44, NODE_LOCAL, 10414 bytes)
[2024-06-28T21:56:07.595+0000] {docker.py:413} INFO - 24/06/28 21:56:07 INFO Executor: Running task 44.0 in stage 2.0 (TID 22)
24/06/28 21:56:07 INFO TaskSetManager: Starting task 45.0 in stage 2.0 (TID 23) (localhost, executor driver, partition 45, NODE_LOCAL, 10414 bytes) 
24/06/28 21:56:07 INFO Executor: Running task 45.0 in stage 2.0 (TID 23)
24/06/28 21:56:07 WARN TaskSetManager: Lost task 25.0 in stage 2.0 (TID 14) (localhost executor driver): java.sql.BatchUpdateException: Batch entry 2 INSERT INTO current_headlines_table ("publishedat","source","author","title","description","url","urltoimage","content") VALUES ('2024-06-26T19:20:00Z','{"id":"cnn","name":"CNN"}','Taylor Nicioli','Decades after the famed Kyrenia shipwreck?s discovery, researchers have a new estimate of when it sank - CNN','The timeline of a Hellenistic Kyrenia shipwreck stumped researchers for decades. But thanks to a cache of ancient almonds, a new study may have a better estimate.','https://www.cnn.com/2024/06/26/science/kyrenia-shipwreck-radiocarbon-dating-almonds-scn/index.html','https://media.cnn.com/api/v1/images/stellar/prod/kyrenia-ship-hull-during-excavation.jpg?c=16x9&q=w_800,c_fill','Sign up for CNNs Wonder Theory science newsletter.?Explore the universe with news on fascinating discoveries, scientific advancements and more.
A lone diverfirst laid eyes on the ancient Kyrenia shi? [+6426 chars]') was aborted: ERROR: duplicate key value violates unique constraint "current_headlines_table_pkey"
  Detail: Key (publishedat)=(2024-06-26T19:20:00Z) already exists.  Call getNextException to see other errors in the batch.
	at org.postgresql.jdbc.BatchResultHandler.handleError(BatchResultHandler.java:165)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2367)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:560)
	at org.postgresql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:893)
	at org.postgresql.jdbc.PgStatement.executeBatch(PgStatement.java:916)
	at org.postgresql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1684)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.savePartition(JdbcUtils.scala:751)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1(JdbcUtils.scala:902)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1$adapted(JdbcUtils.scala:901)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2(RDD.scala:1036)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2$adapted(RDD.scala:1036)
	at org.apache.spark.SparkContext.$anonfun$runJob$5(SparkContext.scala:2438)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:93)
	at org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:161)
	at org.apache.spark.scheduler.Task.run(Task.scala:141)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.postgresql.util.PSQLException: ERROR: duplicate key value violates unique constraint "current_headlines_table_pkey"
  Detail: Key (publishedat)=(2024-06-26T19:20:00Z) already exists.
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2676)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2366)
	... 21 more
[2024-06-28T21:56:07.595+0000] {docker.py:413} INFO - 24/06/28 21:56:07 ERROR TaskSetManager: Task 25 in stage 2.0 failed 1 times; aborting job
[2024-06-28T21:56:07.600+0000] {docker.py:413} INFO - 24/06/28 21:56:07 WARN TaskSetManager: Lost task 17.0 in stage 2.0 (TID 11) (localhost executor driver): java.sql.BatchUpdateException: Batch entry 1 INSERT INTO current_headlines_table ("publishedat","source","author","title","description","url","urltoimage","content") VALUES ('2024-06-26T05:46:56Z','{"id":null,"name":"NPR"}',NULL,'FDA warns top U.S. bakery not to claim foods contain allergens when they don''t - NPR','The FDA found Bimbo Bakeries USA ? which includes brands such as Sara Lee and Ball Park buns and rolls ? listed ingredients such as sesame or tree nuts on labels even when they weren''t in the foods.','https://www.npr.org/2024/06/26/g-s1-6238/fda-warns-bakery-foods-allergens','https://npr.brightspotcdn.com/dims3/default/strip/false/crop/2000x1125+0+104/resize/1400/quality/100/format/jpeg/?url=http%3A%2F%2Fnpr-brightspot.s3.amazonaws.com%2Fd8%2F16%2Fe55fa0fb497f9e722a56bbbc2b8f%2Fap24177785376325.jpg','Federal food safety regulators said Tuesday that they have warned a top U.S. bakery to stop using labels that say its products contain potentially dangerous allergens when they don''t.
U.S. Food and ? [+2568 chars]') was aborted: ERROR: duplicate key value violates unique constraint "current_headlines_table_pkey"
  Detail: Key (publishedat)=(2024-06-26T05:46:56Z) already exists.  Call getNextException to see other errors in the batch.
	at org.postgresql.jdbc.BatchResultHandler.handleError(BatchResultHandler.java:165)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2367)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:560)
	at org.postgresql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:893)
	at org.postgresql.jdbc.PgStatement.executeBatch(PgStatement.java:916)
	at org.postgresql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1684)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.savePartition(JdbcUtils.scala:751)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1(JdbcUtils.scala:902)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1$adapted(JdbcUtils.scala:901)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2(RDD.scala:1036)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2$adapted(RDD.scala:1036)
	at org.apache.spark.SparkContext.$anonfun$runJob$5(SparkContext.scala:2438)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:93)
	at org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:161)
	at org.apache.spark.scheduler.Task.run(Task.scala:141)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.postgresql.util.PSQLException: ERROR: duplicate key value violates unique constraint "current_headlines_table_pkey"
  Detail: Key (publishedat)=(2024-06-26T05:46:56Z) already exists.
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2676)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2366)
	... 21 more
[2024-06-28T21:56:07.602+0000] {docker.py:413} INFO - 24/06/28 21:56:07 WARN TaskSetManager: Lost task 12.0 in stage 2.0 (TID 8) (localhost executor driver): java.sql.BatchUpdateException: Batch entry 1 INSERT INTO current_headlines_table ("publishedat","source","author","title","description","url","urltoimage","content") VALUES ('2024-06-26T17:00:00Z','{"id":"the-verge","name":"The Verge"}','Jay Peters','An AI version of Al Michaels will deliver Olympic recaps on Peacock - The Verge','Peacock?s Paris Olympics coverage will include personalized daily recaps narrated by an AI-generated version of Al Michaels? voice.','https://www.theverge.com/2024/6/26/24185774/olympics-ai-al-michaels-voice-recaps','https://cdn.vox-cdn.com/thumbor/loA3E-uE5D5ufnZcSYeCltrB99o=/0x0:8640x5760/1200x628/filters:focal(5224x2847:5225x2848)/cdn.vox-cdn.com/uploads/chorus_asset/file/25505642/1772478978.jpg','An AI version of Al Michaels will deliver Olympic recaps on Peacock
An AI version of Al Michaels will deliver Olympic recaps on Peacock
 / NBCs AI-generated voice could create nearly 7 million cust? [+2697 chars]') was aborted: ERROR: duplicate key value violates unique constraint "current_headlines_table_pkey"
  Detail: Key (publishedat)=(2024-06-26T17:00:00Z) already exists.  Call getNextException to see other errors in the batch.
	at org.postgresql.jdbc.BatchResultHandler.handleError(BatchResultHandler.java:165)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2367)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:560)
	at org.postgresql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:893)
	at org.postgresql.jdbc.PgStatement.executeBatch(PgStatement.java:916)
	at org.postgresql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1684)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.savePartition(JdbcUtils.scala:751)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1(JdbcUtils.scala:902)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1$adapted(JdbcUtils.scala:901)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2(RDD.scala:1036)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2$adapted(RDD.scala:1036)
	at org.apache.spark.SparkContext.$anonfun$runJob$5(SparkContext.scala:2438)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:93)
	at org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:161)
	at org.apache.spark.scheduler.Task.run(Task.scala:141)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.postgresql.util.PSQLException: ERROR: duplicate key value violates unique constraint "current_headlines_table_pkey"
  Detail: Key (publishedat)=(2024-06-26T17:00:00Z) already exists.
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2676)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2366)
	... 21 more
[2024-06-28T21:56:07.604+0000] {docker.py:413} INFO - 24/06/28 21:56:07 WARN TaskSetManager: Lost task 14.0 in stage 2.0 (TID 9) (localhost executor driver): java.sql.BatchUpdateException: Batch entry 1 INSERT INTO current_headlines_table ("publishedat","source","author","title","description","url","urltoimage","content") VALUES ('2024-06-26T04:40:45Z','{"id":"cbs-news","name":"CBS News"}','Jesse Sarles, Austen Erblat','Lauren Boebert wins crowded House GOP primary in new Colorado district - CBS News','Republican Rep. Lauren Boebert declared victory on Tuesday night in the primary election in her new Colorado district.','https://www.cbsnews.com/colorado/news/lauren-boebert-wins-colorado-4th-congressional-district-republican-primary/','https://assets2.cbsnewsstatic.com/hub/i/r/2024/06/26/7e070f25-2f00-46f7-b7c8-670413a2d960/thumbnail/1200x630/422748044f79ba0d00e98d2723e5f785/boebert.jpg?v=d44ea471ad55b1f821a0763c85064960','Republican Rep. Lauren Boebert has emerged victorious in the primary election in her new Colorado district.
The controversial Congresswoman defeated five GOP opponents in a competitive primary in Co? [+5329 chars]') was aborted: ERROR: duplicate key value violates unique constraint "current_headlines_table_pkey"
  Detail: Key (publishedat)=(2024-06-26T04:40:45Z) already exists.  Call getNextException to see other errors in the batch.
	at org.postgresql.jdbc.BatchResultHandler.handleError(BatchResultHandler.java:165)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2367)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:560)
	at org.postgresql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:893)
	at org.postgresql.jdbc.PgStatement.executeBatch(PgStatement.java:916)
	at org.postgresql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1684)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.savePartition(JdbcUtils.scala:751)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1(JdbcUtils.scala:902)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1$adapted(JdbcUtils.scala:901)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2(RDD.scala:1036)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2$adapted(RDD.scala:1036)
	at org.apache.spark.SparkContext.$anonfun$runJob$5(SparkContext.scala:2438)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:93)
	at org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:161)
	at org.apache.spark.scheduler.Task.run(Task.scala:141)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.postgresql.util.PSQLException: ERROR: duplicate key value violates unique constraint "current_headlines_table_pkey"
  Detail: Key (publishedat)=(2024-06-26T04:40:45Z) already exists.
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2676)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2366)
	... 21 more
[2024-06-28T21:56:07.606+0000] {docker.py:413} INFO - 24/06/28 21:56:07 WARN TaskSetManager: Lost task 11.0 in stage 2.0 (TID 7) (localhost executor driver): java.sql.BatchUpdateException: Batch entry 1 INSERT INTO current_headlines_table ("publishedat","source","author","title","description","url","urltoimage","content") VALUES ('2024-06-26T21:06:07Z','{"id":"al-jazeera-english","name":"Al Jazeera English"}','Al Jazeera','Troops begin to withdraw as Bolivian president rallies against coup attempt - Al Jazeera English','Regional organisations mobilised behind Bolivian government after troops and armoured vehicles gathered in the capital.','https://www.aljazeera.com/news/2024/6/26/fears-of-coup-attempt-in-bolivia-as-soldiers-storm-presidential-palace','https://www.aljazeera.com/wp-content/uploads/2024/06/AP24178775725792-1719438488.jpg?resize=1200%2C675','Bolivian President Luis Arce has offered his thanks to the people of the country after facing down a coup attempt that drew international condemnation and saw soldiers smash through the doors of the ? [+4381 chars]') was aborted: ERROR: duplicate key value violates unique constraint "current_headlines_table_pkey"
  Detail: Key (publishedat)=(2024-06-26T21:06:07Z) already exists.  Call getNextException to see other errors in the batch.
	at org.postgresql.jdbc.BatchResultHandler.handleError(BatchResultHandler.java:165)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2367)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:560)
	at org.postgresql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:893)
	at org.postgresql.jdbc.PgStatement.executeBatch(PgStatement.java:916)
	at org.postgresql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1684)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.savePartition(JdbcUtils.scala:751)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1(JdbcUtils.scala:902)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1$adapted(JdbcUtils.scala:901)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2(RDD.scala:1036)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2$adapted(RDD.scala:1036)
	at org.apache.spark.SparkContext.$anonfun$runJob$5(SparkContext.scala:2438)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:93)
	at org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:161)
	at org.apache.spark.scheduler.Task.run(Task.scala:141)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.postgresql.util.PSQLException: ERROR: duplicate key value violates unique constraint "current_headlines_table_pkey"
  Detail: Key (publishedat)=(2024-06-26T21:06:07Z) already exists.
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2676)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2366)
	... 21 more

24/06/28 21:56:07 INFO TaskSchedulerImpl: Cancelling stage 2
[2024-06-28T21:56:07.607+0000] {docker.py:413} INFO - 24/06/28 21:56:07 INFO TaskSchedulerImpl: Killing all running tasks in stage 2: Stage cancelled: Job aborted due to stage failure: Task 25 in stage 2.0 failed 1 times, most recent failure: Lost task 25.0 in stage 2.0 (TID 14) (localhost executor driver): java.sql.BatchUpdateException: Batch entry 2 INSERT INTO current_headlines_table ("publishedat","source","author","title","description","url","urltoimage","content") VALUES ('2024-06-26T19:20:00Z','{"id":"cnn","name":"CNN"}','Taylor Nicioli','Decades after the famed Kyrenia shipwreck?s discovery, researchers have a new estimate of when it sank - CNN','The timeline of a Hellenistic Kyrenia shipwreck stumped researchers for decades. But thanks to a cache of ancient almonds, a new study may have a better estimate.','https://www.cnn.com/2024/06/26/science/kyrenia-shipwreck-radiocarbon-dating-almonds-scn/index.html','https://media.cnn.com/api/v1/images/stellar/prod/kyrenia-ship-hull-during-excavation.jpg?c=16x9&q=w_800,c_fill','Sign up for CNNs Wonder Theory science newsletter.?Explore the universe with news on fascinating discoveries, scientific advancements and more.
A lone diverfirst laid eyes on the ancient Kyrenia shi? [+6426 chars]') was aborted: ERROR: duplicate key value violates unique constraint "current_headlines_table_pkey"
  Detail: Key (publishedat)=(2024-06-26T19:20:00Z) already exists.  Call getNextException to see other errors in the batch.
	at org.postgresql.jdbc.BatchResultHandler.handleError(BatchResultHandler.java:165)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2367)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:560)
	at org.postgresql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:893)
	at org.postgresql.jdbc.PgStatement.executeBatch(PgStatement.java:916)
	at org.postgresql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1684)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.savePartition(JdbcUtils.scala:751)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1(JdbcUtils.scala:902)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1$adapted(JdbcUtils.scala:901)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2(RDD.scala:1036)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2$adapted(RDD.scala:1036)
	at org.apache.spark.SparkContext.$anonfun$runJob$5(SparkContext.scala:2438)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:93)
	at org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:161)
	at org.apache.spark.scheduler.Task.run(Task.scala:141)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.postgresql.util.PSQLException: ERROR: duplicate key value violates unique constraint "current_headlines_table_pkey"
  Detail: Key (publishedat)=(2024-06-26T19:20:00Z) already exists.
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2676)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2366)
	... 21 more

Driver stacktrace:
[2024-06-28T21:56:07.608+0000] {docker.py:413} INFO - 24/06/28 21:56:07 INFO TaskSchedulerImpl: Stage 2 was cancelled
[2024-06-28T21:56:07.609+0000] {docker.py:413} INFO - 24/06/28 21:56:07 INFO Executor: Executor is trying to kill task 40.0 in stage 2.0 (TID 20), reason: Stage cancelled: Job aborted due to stage failure: Task 25 in stage 2.0 failed 1 times, most recent failure: Lost task 25.0 in stage 2.0 (TID 14) (localhost executor driver): java.sql.BatchUpdateException: Batch entry 2 INSERT INTO current_headlines_table ("publishedat","source","author","title","description","url","urltoimage","content") VALUES ('2024-06-26T19:20:00Z','{"id":"cnn","name":"CNN"}','Taylor Nicioli','Decades after the famed Kyrenia shipwreck?s discovery, researchers have a new estimate of when it sank - CNN','The timeline of a Hellenistic Kyrenia shipwreck stumped researchers for decades. But thanks to a cache of ancient almonds, a new study may have a better estimate.','https://www.cnn.com/2024/06/26/science/kyrenia-shipwreck-radiocarbon-dating-almonds-scn/index.html','https://media.cnn.com/api/v1/images/stellar/prod/kyrenia-ship-hull-during-excavation.jpg?c=16x9&q=w_800,c_fill','Sign up for CNNs Wonder Theory science newsletter.?Explore the universe with news on fascinating discoveries, scientific advancements and more.
A lone diverfirst laid eyes on the ancient Kyrenia shi? [+6426 chars]') was aborted: ERROR: duplicate key value violates unique constraint "current_headlines_table_pkey"
  Detail: Key (publishedat)=(2024-06-26T19:20:00Z) already exists.  Call getNextException to see other errors in the batch.
	at org.postgresql.jdbc.BatchResultHandler.handleError(BatchResultHandler.java:165)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2367)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:560)
	at org.postgresql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:893)
	at org.postgresql.jdbc.PgStatement.executeBatch(PgStatement.java:916)
	at org.postgresql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1684)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.savePartition(JdbcUtils.scala:751)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1(JdbcUtils.scala:902)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1$adapted(JdbcUtils.scala:901)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2(RDD.scala:1036)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2$adapted(RDD.scala:1036)
	at org.apache.spark.SparkContext.$anonfun$runJob$5(SparkContext.scala:2438)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:93)
	at org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:161)
	at org.apache.spark.scheduler.Task.run(Task.scala:141)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.postgresql.util.PSQLException: ERROR: duplicate key value violates unique constraint "current_headlines_table_pkey"
  Detail: Key (publishedat)=(2024-06-26T19:20:00Z) already exists.
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2676)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2366)
	... 21 more

Driver stacktrace:
24/06/28 21:56:07 INFO Executor: Executor is trying to kill task 41.0 in stage 2.0 (TID 21), reason: Stage cancelled: Job aborted due to stage failure: Task 25 in stage 2.0 failed 1 times, most recent failure: Lost task 25.0 in stage 2.0 (TID 14) (localhost executor driver): java.sql.BatchUpdateException: Batch entry 2 INSERT INTO current_headlines_table ("publishedat","source","author","title","description","url","urltoimage","content") VALUES ('2024-06-26T19:20:00Z','{"id":"cnn","name":"CNN"}','Taylor Nicioli','Decades after the famed Kyrenia shipwreck?s discovery, researchers have a new estimate of when it sank - CNN','The timeline of a Hellenistic Kyrenia shipwreck stumped researchers for decades. But thanks to a cache of ancient almonds, a new study may have a better estimate.','https://www.cnn.com/2024/06/26/science/kyrenia-shipwreck-radiocarbon-dating-almonds-scn/index.html','https://media.cnn.com/api/v1/images/stellar/prod/kyrenia-ship-hull-during-excavation.jpg?c=16x9&q=w_800,c_fill','Sign up for CNNs Wonder Theory science newsletter.?Explore the universe with news on fascinating discoveries, scientific advancements and more.
A lone diverfirst laid eyes on the ancient Kyrenia shi? [+6426 chars]') was aborted: ERROR: duplicate key value violates unique constraint "current_headlines_table_pkey"
  Detail: Key (publishedat)=(2024-06-26T19:20:00Z) already exists.  Call getNextException to see other errors in the batch.
	at org.postgresql.jdbc.BatchResultHandler.handleError(BatchResultHandler.java:165)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2367)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:560)
	at org.postgresql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:893)
	at org.postgresql.jdbc.PgStatement.executeBatch(PgStatement.java:916)
	at org.postgresql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1684)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.savePartition(JdbcUtils.scala:751)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1(JdbcUtils.scala:902)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1$adapted(JdbcUtils.scala:901)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2(RDD.scala:1036)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2$adapted(RDD.scala:1036)
	at org.apache.spark.SparkContext.$anonfun$runJob$5(SparkContext.scala:2438)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:93)
	at org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:161)
	at org.apache.spark.scheduler.Task.run(Task.scala:141)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.postgresql.util.PSQLException: ERROR: duplicate key value violates unique constraint "current_headlines_table_pkey"
  Detail: Key (publishedat)=(2024-06-26T19:20:00Z) already exists.
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2676)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2366)
	... 21 more

Driver stacktrace:
24/06/28 21:56:07 INFO Executor: Executor is trying to kill task 35.0 in stage 2.0 (TID 18), reason: Stage cancelled: Job aborted due to stage failure: Task 25 in stage 2.0 failed 1 times, most recent failure: Lost task 25.0 in stage 2.0 (TID 14) (localhost executor driver): java.sql.BatchUpdateException: Batch entry 2 INSERT INTO current_headlines_table ("publishedat","source","author","title","description","url","urltoimage","content") VALUES ('2024-06-26T19:20:00Z','{"id":"cnn","name":"CNN"}','Taylor Nicioli','Decades after the famed Kyrenia shipwreck?s discovery, researchers have a new estimate of when it sank - CNN','The timeline of a Hellenistic Kyrenia shipwreck stumped researchers for decades. But thanks to a cache of ancient almonds, a new study may have a better estimate.','https://www.cnn.com/2024/06/26/science/kyrenia-shipwreck-radiocarbon-dating-almonds-scn/index.html','https://media.cnn.com/api/v1/images/stellar/prod/kyrenia-ship-hull-during-excavation.jpg?c=16x9&q=w_800,c_fill','Sign up for CNNs Wonder Theory science newsletter.?Explore the universe with news on fascinating discoveries, scientific advancements and more.
A lone diverfirst laid eyes on the ancient Kyrenia shi? [+6426 chars]') was aborted: ERROR: duplicate key value violates unique constraint "current_headlines_table_pkey"
  Detail: Key (publishedat)=(2024-06-26T19:20:00Z) already exists.  Call getNextException to see other errors in the batch.
	at org.postgresql.jdbc.BatchResultHandler.handleError(BatchResultHandler.java:165)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2367)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:560)
	at org.postgresql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:893)
	at org.postgresql.jdbc.PgStatement.executeBatch(PgStatement.java:916)
	at org.postgresql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1684)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.savePartition(JdbcUtils.scala:751)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1(JdbcUtils.scala:902)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1$adapted(JdbcUtils.scala:901)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2(RDD.scala:1036)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2$adapted(RDD.scala:1036)
	at org.apache.spark.SparkContext.$anonfun$runJob$5(SparkContext.scala:2438)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:93)
	at org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:161)
	at org.apache.spark.scheduler.Task.run(Task.scala:141)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.postgresql.util.PSQLException: ERROR: duplicate key value violates unique constraint "current_headlines_table_pkey"
  Detail: Key (publishedat)=(2024-06-26T19:20:00Z) already exists.
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2676)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2366)
	... 21 more

Driver stacktrace:
24/06/28 21:56:07 INFO Executor: Executor is trying to kill task 44.0 in stage 2.0 (TID 22), reason: Stage cancelled: Job aborted due to stage failure: Task 25 in stage 2.0 failed 1 times, most recent failure: Lost task 25.0 in stage 2.0 (TID 14) (localhost executor driver): java.sql.BatchUpdateException: Batch entry 2 INSERT INTO current_headlines_table ("publishedat","source","author","title","description","url","urltoimage","content") VALUES ('2024-06-26T19:20:00Z','{"id":"cnn","name":"CNN"}','Taylor Nicioli','Decades after the famed Kyrenia shipwreck?s discovery, researchers have a new estimate of when it sank - CNN','The timeline of a Hellenistic Kyrenia shipwreck stumped researchers for decades. But thanks to a cache of ancient almonds, a new study may have a better estimate.','https://www.cnn.com/2024/06/26/science/kyrenia-shipwreck-radiocarbon-dating-almonds-scn/index.html','https://media.cnn.com/api/v1/images/stellar/prod/kyrenia-ship-hull-during-excavation.jpg?c=16x9&q=w_800,c_fill','Sign up for CNNs Wonder Theory science newsletter.?Explore the universe with news on fascinating discoveries, scientific advancements and more.
A lone diverfirst laid eyes on the ancient Kyrenia shi? [+6426 chars]') was aborted: ERROR: duplicate key value violates unique constraint "current_headlines_table_pkey"
  Detail: Key (publishedat)=(2024-06-26T19:20:00Z) already exists.  Call getNextException to see other errors in the batch.
	at org.postgresql.jdbc.BatchResultHandler.handleError(BatchResultHandler.java:165)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2367)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:560)
	at org.postgresql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:893)
	at org.postgresql.jdbc.PgStatement.executeBatch(PgStatement.java:916)
	at org.postgresql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1684)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.savePartition(JdbcUtils.scala:751)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1(JdbcUtils.scala:902)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1$adapted(JdbcUtils.scala:901)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2(RDD.scala:1036)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2$adapted(RDD.scala:1036)
	at org.apache.spark.SparkContext.$anonfun$runJob$5(SparkContext.scala:2438)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:93)
	at org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:161)
	at org.apache.spark.scheduler.Task.run(Task.scala:141)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.postgresql.util.PSQLException: ERROR: duplicate key value violates unique constraint "current_headlines_table_pkey"
  Detail: Key (publishedat)=(2024-06-26T19:20:00Z) already exists.
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2676)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2366)
	... 21 more

Driver stacktrace:
24/06/28 21:56:07 WARN TaskSetManager: Lost task 19.0 in stage 2.0 (TID 12) (localhost executor driver): java.sql.BatchUpdateException: Batch entry 1 INSERT INTO current_headlines_table ("publishedat","source","author","title","description","url","urltoimage","content") VALUES ('2024-06-26T16:00:13Z','{"id":null,"name":"Space.com"}','Andrew Jones','What happened to China''s Chang''e 6 lander on the moon''s far side? - Space.com','The Chang''e 6 lander wasn''t equipped with heaters to help it survive the long, cold lunar night.','https://www.space.com/china-chang-e-6-moon-lander-far-side-fate','https://cdn.mos.cms.futurecdn.net/LEb2kLUkdpZay9QTj8srWS-1200-80.png','China''s Chang''e 6 mission has successfully delivered to Earth the first-ever samples from the far side of the moon. But what became of the lander that collected the lunar material?
Chang''e 6 launche? [+3742 chars]') was aborted: ERROR: duplicate key value violates unique constraint "current_headlines_table_pkey"
  Detail: Key (publishedat)=(2024-06-26T16:00:13Z) already exists.  Call getNextException to see other errors in the batch.
	at org.postgresql.jdbc.BatchResultHandler.handleError(BatchResultHandler.java:165)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2367)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:560)
	at org.postgresql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:893)
	at org.postgresql.jdbc.PgStatement.executeBatch(PgStatement.java:916)
	at org.postgresql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1684)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.savePartition(JdbcUtils.scala:751)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1(JdbcUtils.scala:902)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1$adapted(JdbcUtils.scala:901)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2(RDD.scala:1036)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2$adapted(RDD.scala:1036)
	at org.apache.spark.SparkContext.$anonfun$runJob$5(SparkContext.scala:2438)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:93)
	at org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:161)
	at org.apache.spark.scheduler.Task.run(Task.scala:141)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.postgresql.util.PSQLException: ERROR: duplicate key value violates unique constraint "current_headlines_table_pkey"
  Detail: Key (publishedat)=(2024-06-26T16:00:13Z) already exists.
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2676)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2366)
	... 21 more

24/06/28 21:56:07 INFO Executor: Executor is trying to kill task 45.0 in stage 2.0 (TID 23), reason: Stage cancelled: Job aborted due to stage failure: Task 25 in stage 2.0 failed 1 times, most recent failure: Lost task 25.0 in stage 2.0 (TID 14) (localhost executor driver): java.sql.BatchUpdateException: Batch entry 2 INSERT INTO current_headlines_table ("publishedat","source","author","title","description","url","urltoimage","content") VALUES ('2024-06-26T19:20:00Z','{"id":"cnn","name":"CNN"}','Taylor Nicioli','Decades after the famed Kyrenia shipwreck?s discovery, researchers have a new estimate of when it sank - CNN','The timeline of a Hellenistic Kyrenia shipwreck stumped researchers for decades. But thanks to a cache of ancient almonds, a new study may have a better estimate.','https://www.cnn.com/2024/06/26/science/kyrenia-shipwreck-radiocarbon-dating-almonds-scn/index.html','https://media.cnn.com/api/v1/images/stellar/prod/kyrenia-ship-hull-during-excavation.jpg?c=16x9&q=w_800,c_fill','Sign up for CNNs Wonder Theory science newsletter.?Explore the universe with news on fascinating discoveries, scientific advancements and more.
A lone diverfirst laid eyes on the ancient Kyrenia shi? [+6426 chars]') was aborted: ERROR: duplicate key value violates unique constraint "current_headlines_table_pkey"
  Detail: Key (publishedat)=(2024-06-26T19:20:00Z) already exists.  Call getNextException to see other errors in the batch.
	at org.postgresql.jdbc.BatchResultHandler.handleError(BatchResultHandler.java:165)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2367)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:560)
	at org.postgresql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:893)
	at org.postgresql.jdbc.PgStatement.executeBatch(PgStatement.java:916)
	at org.postgresql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1684)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.savePartition(JdbcUtils.scala:751)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1(JdbcUtils.scala:902)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1$adapted(JdbcUtils.scala:901)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2(RDD.scala:1036)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2$adapted(RDD.scala:1036)
	at org.apache.spark.SparkContext.$anonfun$runJob$5(SparkContext.scala:2438)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:93)
	at org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:161)
	at org.apache.spark.scheduler.Task.run(Task.scala:141)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.postgresql.util.PSQLException: ERROR: duplicate key value violates unique constraint "current_headlines_table_pkey"
  Detail: Key (publishedat)=(2024-06-26T19:20:00Z) already exists.
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2676)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2366)
	... 21 more

Driver stacktrace:
[2024-06-28T21:56:07.610+0000] {docker.py:413} INFO - 24/06/28 21:56:07 WARN TaskSetManager: Lost task 30.0 in stage 2.0 (TID 16) (localhost executor driver): java.sql.BatchUpdateException: Batch entry 2 INSERT INTO current_headlines_table ("publishedat","source","author","title","description","url","urltoimage","content") VALUES ('2024-06-26T22:00:35Z','{"id":null,"name":"The Weather Channel"}','The Weather Channel','Hundreds Of Ice Cream, Coffee Products Recalled - Videos from The Weather Channel - The Weather Channel','The FDA has announced two widespread recalls of coffee and ice cream products. Find out if your favorites are on the list. <a href="https://www.fda.gov/safety/recalls-market-withdrawals-safety-alerts/totally-cool-inc-recalls-all-ice-cream-products-because-pos?','https://weather.com/home-garden/food/video/summer-treat-recalls-is-your-favorite-on-the-list','https://v.w-x.co/1719439224584_0626_fda_recall_v1_35199b66-0605-4711-a2af-f50a29aef4f2.jpg',NULL) was aborted: ERROR: duplicate key value violates unique constraint "current_headlines_table_pkey"
  Detail: Key (publishedat)=(2024-06-26T22:00:35Z) already exists.  Call getNextException to see other errors in the batch.
	at org.postgresql.jdbc.BatchResultHandler.handleError(BatchResultHandler.java:165)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2367)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:560)
	at org.postgresql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:893)
	at org.postgresql.jdbc.PgStatement.executeBatch(PgStatement.java:916)
	at org.postgresql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1684)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.savePartition(JdbcUtils.scala:751)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1(JdbcUtils.scala:902)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1$adapted(JdbcUtils.scala:901)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2(RDD.scala:1036)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2$adapted(RDD.scala:1036)
	at org.apache.spark.SparkContext.$anonfun$runJob$5(SparkContext.scala:2438)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:93)
	at org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:161)
	at org.apache.spark.scheduler.Task.run(Task.scala:141)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.postgresql.util.PSQLException: ERROR: duplicate key value violates unique constraint "current_headlines_table_pkey"
  Detail: Key (publishedat)=(2024-06-26T22:00:35Z) already exists.
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2676)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2366)
	... 21 more
[2024-06-28T21:56:07.611+0000] {docker.py:413} INFO - 24/06/28 21:56:07 WARN TaskSetManager: Lost task 22.0 in stage 2.0 (TID 13) (localhost executor driver): java.sql.BatchUpdateException: Batch entry 1 INSERT INTO current_headlines_table ("publishedat","source","author","title","description","url","urltoimage","content") VALUES ('2024-06-26T22:36:40Z','{"id":"politico","name":"Politico"}','POLITICO','Trump debate playbook: Skip mock debates, fundraise and undermine the results - POLITICO',NULL,'https://www.politico.com/news/2024/06/26/trump-debate-preparation-00165187',NULL,NULL) was aborted: ERROR: duplicate key value violates unique constraint "current_headlines_table_pkey"
  Detail: Key (publishedat)=(2024-06-26T22:36:40Z) already exists.  Call getNextException to see other errors in the batch.
	at org.postgresql.jdbc.BatchResultHandler.handleError(BatchResultHandler.java:165)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2367)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:560)
	at org.postgresql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:893)
	at org.postgresql.jdbc.PgStatement.executeBatch(PgStatement.java:916)
	at org.postgresql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1684)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.savePartition(JdbcUtils.scala:751)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1(JdbcUtils.scala:902)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1$adapted(JdbcUtils.scala:901)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2(RDD.scala:1036)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2$adapted(RDD.scala:1036)
	at org.apache.spark.SparkContext.$anonfun$runJob$5(SparkContext.scala:2438)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:93)
	at org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:161)
	at org.apache.spark.scheduler.Task.run(Task.scala:141)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.postgresql.util.PSQLException: ERROR: duplicate key value violates unique constraint "current_headlines_table_pkey"
  Detail: Key (publishedat)=(2024-06-26T22:36:40Z) already exists.
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2676)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2366)
	... 21 more
[2024-06-28T21:56:07.611+0000] {docker.py:413} INFO - 24/06/28 21:56:07 INFO TaskSetManager: Finished task 36.0 in stage 2.0 (TID 19) in 37 ms on localhost (executor driver) (9/200)
[2024-06-28T21:56:07.611+0000] {docker.py:413} INFO - 24/06/28 21:56:07 INFO DAGScheduler: ResultStage 2 (start at NativeMethodAccessorImpl.java:0) failed in 0.898 s due to Job aborted due to stage failure: Task 25 in stage 2.0 failed 1 times, most recent failure: Lost task 25.0 in stage 2.0 (TID 14) (localhost executor driver): java.sql.BatchUpdateException: Batch entry 2 INSERT INTO current_headlines_table ("publishedat","source","author","title","description","url","urltoimage","content") VALUES ('2024-06-26T19:20:00Z','{"id":"cnn","name":"CNN"}','Taylor Nicioli','Decades after the famed Kyrenia shipwreck?s discovery, researchers have a new estimate of when it sank - CNN','The timeline of a Hellenistic Kyrenia shipwreck stumped researchers for decades. But thanks to a cache of ancient almonds, a new study may have a better estimate.','https://www.cnn.com/2024/06/26/science/kyrenia-shipwreck-radiocarbon-dating-almonds-scn/index.html','https://media.cnn.com/api/v1/images/stellar/prod/kyrenia-ship-hull-during-excavation.jpg?c=16x9&q=w_800,c_fill','Sign up for CNNs Wonder Theory science newsletter.?Explore the universe with news on fascinating discoveries, scientific advancements and more.
A lone diverfirst laid eyes on the ancient Kyrenia shi? [+6426 chars]') was aborted: ERROR: duplicate key value violates unique constraint "current_headlines_table_pkey"
  Detail: Key (publishedat)=(2024-06-26T19:20:00Z) already exists.  Call getNextException to see other errors in the batch.
	at org.postgresql.jdbc.BatchResultHandler.handleError(BatchResultHandler.java:165)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2367)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:560)
	at org.postgresql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:893)
	at org.postgresql.jdbc.PgStatement.executeBatch(PgStatement.java:916)
	at org.postgresql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1684)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.savePartition(JdbcUtils.scala:751)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1(JdbcUtils.scala:902)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1$adapted(JdbcUtils.scala:901)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2(RDD.scala:1036)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2$adapted(RDD.scala:1036)
	at org.apache.spark.SparkContext.$anonfun$runJob$5(SparkContext.scala:2438)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:93)
	at org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:161)
	at org.apache.spark.scheduler.Task.run(Task.scala:141)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.postgresql.util.PSQLException: ERROR: duplicate key value violates unique constraint "current_headlines_table_pkey"
  Detail: Key (publishedat)=(2024-06-26T19:20:00Z) already exists.
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2676)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2366)
	... 21 more

Driver stacktrace:
[2024-06-28T21:56:07.612+0000] {docker.py:413} INFO - 24/06/28 21:56:07 INFO ShuffleBlockFetcherIterator: Getting 1 (1051.0 B) non-empty blocks including 1 (1051.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) push-merged-local and 0 (0.0 B) remote blocks
24/06/28 21:56:07 INFO ShuffleBlockFetcherIterator: Getting 1 (652.0 B) non-empty blocks including 1 (652.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) push-merged-local and 0 (0.0 B) remote blocks
[2024-06-28T21:56:07.612+0000] {docker.py:413} INFO - 24/06/28 21:56:07 INFO ShuffleBlockFetcherIterator: Started 0 remote fetches in 0 ms
[2024-06-28T21:56:07.612+0000] {docker.py:413} INFO - 24/06/28 21:56:07 INFO ShuffleBlockFetcherIterator: Started 0 remote fetches in 0 ms
[2024-06-28T21:56:07.612+0000] {docker.py:413} INFO - 24/06/28 21:56:07 ERROR ShuffleBlockFetcherIterator: Error occurred while fetching local blocks, null
24/06/28 21:56:07 ERROR ShuffleBlockFetcherIterator: Error occurred while fetching local blocks, null
[2024-06-28T21:56:07.613+0000] {docker.py:413} INFO - 24/06/28 21:56:07 INFO ShuffleBlockFetcherIterator: Getting 1 (789.0 B) non-empty blocks including 1 (789.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) push-merged-local and 0 (0.0 B) remote blocks
24/06/28 21:56:07 INFO ShuffleBlockFetcherIterator: Started 0 remote fetches in 0 ms
24/06/28 21:56:07 INFO ShuffleBlockFetcherIterator: Getting 1 (652.0 B) non-empty blocks including 1 (652.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) push-merged-local and 0 (0.0 B) remote blocks
24/06/28 21:56:07 ERROR ShuffleBlockFetcherIterator: Error occurred while fetching local blocks, null
24/06/28 21:56:07 INFO ShuffleBlockFetcherIterator: Started 0 remote fetches in 0 ms
24/06/28 21:56:07 ERROR ShuffleBlockFetcherIterator: Error occurred while fetching local blocks, null
24/06/28 21:56:07 INFO Executor: Executor interrupted and killed task 45.0 in stage 2.0 (TID 23), reason: Stage cancelled: Job aborted due to stage failure: Task 25 in stage 2.0 failed 1 times, most recent failure: Lost task 25.0 in stage 2.0 (TID 14) (localhost executor driver): java.sql.BatchUpdateException: Batch entry 2 INSERT INTO current_headlines_table ("publishedat","source","author","title","description","url","urltoimage","content") VALUES ('2024-06-26T19:20:00Z','{"id":"cnn","name":"CNN"}','Taylor Nicioli','Decades after the famed Kyrenia shipwreck?s discovery, researchers have a new estimate of when it sank - CNN','The timeline of a Hellenistic Kyrenia shipwreck stumped researchers for decades. But thanks to a cache of ancient almonds, a new study may have a better estimate.','https://www.cnn.com/2024/06/26/science/kyrenia-shipwreck-radiocarbon-dating-almonds-scn/index.html','https://media.cnn.com/api/v1/images/stellar/prod/kyrenia-ship-hull-during-excavation.jpg?c=16x9&q=w_800,c_fill','Sign up for CNNs Wonder Theory science newsletter.?Explore the universe with news on fascinating discoveries, scientific advancements and more.
A lone diverfirst laid eyes on the ancient Kyrenia shi? [+6426 chars]') was aborted: ERROR: duplicate key value violates unique constraint "current_headlines_table_pkey"
  Detail: Key (publishedat)=(2024-06-26T19:20:00Z) already exists.  Call getNextException to see other errors in the batch.
	at org.postgresql.jdbc.BatchResultHandler.handleError(BatchResultHandler.java:165)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2367)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:560)
	at org.postgresql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:893)
	at org.postgresql.jdbc.PgStatement.executeBatch(PgStatement.java:916)
	at org.postgresql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1684)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.savePartition(JdbcUtils.scala:751)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1(JdbcUtils.scala:902)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1$adapted(JdbcUtils.scala:901)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2(RDD.scala:1036)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2$adapted(RDD.scala:1036)
	at org.apache.spark.SparkContext.$anonfun$runJob$5(SparkContext.scala:2438)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:93)
	at org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:161)
	at org.apache.spark.scheduler.Task.run(Task.scala:141)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.postgresql.util.PSQLException: ERROR: duplicate key value violates unique constraint "current_headlines_table_pkey"
  Detail: Key (publishedat)=(2024-06-26T19:20:00Z) already exists.
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2676)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2366)
	... 21 more

Driver stacktrace:
24/06/28 21:56:07 INFO DAGScheduler: Job 0 failed: start at NativeMethodAccessorImpl.java:0, took 1.918038 s
24/06/28 21:56:07 INFO Executor: Executor interrupted and killed task 44.0 in stage 2.0 (TID 22), reason: Stage cancelled: Job aborted due to stage failure: Task 25 in stage 2.0 failed 1 times, most recent failure: Lost task 25.0 in stage 2.0 (TID 14) (localhost executor driver): java.sql.BatchUpdateException: Batch entry 2 INSERT INTO current_headlines_table ("publishedat","source","author","title","description","url","urltoimage","content") VALUES ('2024-06-26T19:20:00Z','{"id":"cnn","name":"CNN"}','Taylor Nicioli','Decades after the famed Kyrenia shipwreck?s discovery, researchers have a new estimate of when it sank - CNN','The timeline of a Hellenistic Kyrenia shipwreck stumped researchers for decades. But thanks to a cache of ancient almonds, a new study may have a better estimate.','https://www.cnn.com/2024/06/26/science/kyrenia-shipwreck-radiocarbon-dating-almonds-scn/index.html','https://media.cnn.com/api/v1/images/stellar/prod/kyrenia-ship-hull-during-excavation.jpg?c=16x9&q=w_800,c_fill','Sign up for CNNs Wonder Theory science newsletter.?Explore the universe with news on fascinating discoveries, scientific advancements and more.
A lone diverfirst laid eyes on the ancient Kyrenia shi? [+6426 chars]') was aborted: ERROR: duplicate key value violates unique constraint "current_headlines_table_pkey"
  Detail: Key (publishedat)=(2024-06-26T19:20:00Z) already exists.  Call getNextException to see other errors in the batch.
	at org.postgresql.jdbc.BatchResultHandler.handleError(BatchResultHandler.java:165)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2367)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:560)
	at org.postgresql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:893)
	at org.postgresql.jdbc.PgStatement.executeBatch(PgStatement.java:916)
	at org.postgresql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1684)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.savePartition(JdbcUtils.scala:751)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1(JdbcUtils.scala:902)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1$adapted(JdbcUtils.scala:901)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2(RDD.scala:1036)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2$adapted(RDD.scala:1036)
	at org.apache.spark.SparkContext.$anonfun$runJob$5(SparkContext.scala:2438)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:93)
	at org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:161)
	at org.apache.spark.scheduler.Task.run(Task.scala:141)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.postgresql.util.PSQLException: ERROR: duplicate key value violates unique constraint "current_headlines_table_pkey"
  Detail: Key (publishedat)=(2024-06-26T19:20:00Z) already exists.
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2676)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2366)
	... 21 more

Driver stacktrace:
[2024-06-28T21:56:07.623+0000] {docker.py:413} INFO - 24/06/28 21:56:07 INFO Executor: Executor interrupted and killed task 40.0 in stage 2.0 (TID 20), reason: Stage cancelled: Job aborted due to stage failure: Task 25 in stage 2.0 failed 1 times, most recent failure: Lost task 25.0 in stage 2.0 (TID 14) (localhost executor driver): java.sql.BatchUpdateException: Batch entry 2 INSERT INTO current_headlines_table ("publishedat","source","author","title","description","url","urltoimage","content") VALUES ('2024-06-26T19:20:00Z','{"id":"cnn","name":"CNN"}','Taylor Nicioli','Decades after the famed Kyrenia shipwreck?s discovery, researchers have a new estimate of when it sank - CNN','The timeline of a Hellenistic Kyrenia shipwreck stumped researchers for decades. But thanks to a cache of ancient almonds, a new study may have a better estimate.','https://www.cnn.com/2024/06/26/science/kyrenia-shipwreck-radiocarbon-dating-almonds-scn/index.html','https://media.cnn.com/api/v1/images/stellar/prod/kyrenia-ship-hull-during-excavation.jpg?c=16x9&q=w_800,c_fill','Sign up for CNNs Wonder Theory science newsletter.?Explore the universe with news on fascinating discoveries, scientific advancements and more.
A lone diverfirst laid eyes on the ancient Kyrenia shi? [+6426 chars]') was aborted: ERROR: duplicate key value violates unique constraint "current_headlines_table_pkey"
  Detail: Key (publishedat)=(2024-06-26T19:20:00Z) already exists.  Call getNextException to see other errors in the batch.
	at org.postgresql.jdbc.BatchResultHandler.handleError(BatchResultHandler.java:165)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2367)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:560)
	at org.postgresql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:893)
	at org.postgresql.jdbc.PgStatement.executeBatch(PgStatement.java:916)
	at org.postgresql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1684)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.savePartition(JdbcUtils.scala:751)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1(JdbcUtils.scala:902)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1$adapted(JdbcUtils.scala:901)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2(RDD.scala:1036)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2$adapted(RDD.scala:1036)
	at org.apache.spark.SparkContext.$anonfun$runJob$5(SparkContext.scala:2438)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:93)
	at org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:161)
	at org.apache.spark.scheduler.Task.run(Task.scala:141)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.postgresql.util.PSQLException: ERROR: duplicate key value violates unique constraint "current_headlines_table_pkey"
  Detail: Key (publishedat)=(2024-06-26T19:20:00Z) already exists.
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2676)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2366)
	... 21 more

Driver stacktrace:
24/06/28 21:56:07 INFO Executor: Executor interrupted and killed task 41.0 in stage 2.0 (TID 21), reason: Stage cancelled: Job aborted due to stage failure: Task 25 in stage 2.0 failed 1 times, most recent failure: Lost task 25.0 in stage 2.0 (TID 14) (localhost executor driver): java.sql.BatchUpdateException: Batch entry 2 INSERT INTO current_headlines_table ("publishedat","source","author","title","description","url","urltoimage","content") VALUES ('2024-06-26T19:20:00Z','{"id":"cnn","name":"CNN"}','Taylor Nicioli','Decades after the famed Kyrenia shipwreck?s discovery, researchers have a new estimate of when it sank - CNN','The timeline of a Hellenistic Kyrenia shipwreck stumped researchers for decades. But thanks to a cache of ancient almonds, a new study may have a better estimate.','https://www.cnn.com/2024/06/26/science/kyrenia-shipwreck-radiocarbon-dating-almonds-scn/index.html','https://media.cnn.com/api/v1/images/stellar/prod/kyrenia-ship-hull-during-excavation.jpg?c=16x9&q=w_800,c_fill','Sign up for CNNs Wonder Theory science newsletter.?Explore the universe with news on fascinating discoveries, scientific advancements and more.
A lone diverfirst laid eyes on the ancient Kyrenia shi? [+6426 chars]') was aborted: ERROR: duplicate key value violates unique constraint "current_headlines_table_pkey"
  Detail: Key (publishedat)=(2024-06-26T19:20:00Z) already exists.  Call getNextException to see other errors in the batch.
	at org.postgresql.jdbc.BatchResultHandler.handleError(BatchResultHandler.java:165)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2367)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:560)
	at org.postgresql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:893)
	at org.postgresql.jdbc.PgStatement.executeBatch(PgStatement.java:916)
	at org.postgresql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1684)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.savePartition(JdbcUtils.scala:751)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1(JdbcUtils.scala:902)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1$adapted(JdbcUtils.scala:901)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2(RDD.scala:1036)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2$adapted(RDD.scala:1036)
	at org.apache.spark.SparkContext.$anonfun$runJob$5(SparkContext.scala:2438)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:93)
	at org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:161)
	at org.apache.spark.scheduler.Task.run(Task.scala:141)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.postgresql.util.PSQLException: ERROR: duplicate key value violates unique constraint "current_headlines_table_pkey"
  Detail: Key (publishedat)=(2024-06-26T19:20:00Z) already exists.
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2676)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2366)
	... 21 more

Driver stacktrace:
[2024-06-28T21:56:07.624+0000] {docker.py:413} INFO - 24/06/28 21:56:07 INFO Executor: Executor killed task 35.0 in stage 2.0 (TID 18), reason: Stage cancelled: Job aborted due to stage failure: Task 25 in stage 2.0 failed 1 times, most recent failure: Lost task 25.0 in stage 2.0 (TID 14) (localhost executor driver): java.sql.BatchUpdateException: Batch entry 2 INSERT INTO current_headlines_table ("publishedat","source","author","title","description","url","urltoimage","content") VALUES ('2024-06-26T19:20:00Z','{"id":"cnn","name":"CNN"}','Taylor Nicioli','Decades after the famed Kyrenia shipwreck?s discovery, researchers have a new estimate of when it sank - CNN','The timeline of a Hellenistic Kyrenia shipwreck stumped researchers for decades. But thanks to a cache of ancient almonds, a new study may have a better estimate.','https://www.cnn.com/2024/06/26/science/kyrenia-shipwreck-radiocarbon-dating-almonds-scn/index.html','https://media.cnn.com/api/v1/images/stellar/prod/kyrenia-ship-hull-during-excavation.jpg?c=16x9&q=w_800,c_fill','Sign up for CNNs Wonder Theory science newsletter.?Explore the universe with news on fascinating discoveries, scientific advancements and more.
A lone diverfirst laid eyes on the ancient Kyrenia shi? [+6426 chars]') was aborted: ERROR: duplicate key value violates unique constraint "current_headlines_table_pkey"
  Detail: Key (publishedat)=(2024-06-26T19:20:00Z) already exists.  Call getNextException to see other errors in the batch.
	at org.postgresql.jdbc.BatchResultHandler.handleError(BatchResultHandler.java:165)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2367)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:560)
	at org.postgresql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:893)
	at org.postgresql.jdbc.PgStatement.executeBatch(PgStatement.java:916)
	at org.postgresql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1684)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.savePartition(JdbcUtils.scala:751)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1(JdbcUtils.scala:902)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1$adapted(JdbcUtils.scala:901)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2(RDD.scala:1036)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2$adapted(RDD.scala:1036)
	at org.apache.spark.SparkContext.$anonfun$runJob$5(SparkContext.scala:2438)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:93)
	at org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:161)
	at org.apache.spark.scheduler.Task.run(Task.scala:141)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.postgresql.util.PSQLException: ERROR: duplicate key value violates unique constraint "current_headlines_table_pkey"
  Detail: Key (publishedat)=(2024-06-26T19:20:00Z) already exists.
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2676)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2366)
	... 21 more

Driver stacktrace:
[2024-06-28T21:56:07.625+0000] {docker.py:413} INFO - 24/06/28 21:56:07 WARN TaskSetManager: Lost task 45.0 in stage 2.0 (TID 23) (localhost executor driver): TaskKilled (Stage cancelled: Job aborted due to stage failure: Task 25 in stage 2.0 failed 1 times, most recent failure: Lost task 25.0 in stage 2.0 (TID 14) (localhost executor driver): java.sql.BatchUpdateException: Batch entry 2 INSERT INTO current_headlines_table ("publishedat","source","author","title","description","url","urltoimage","content") VALUES ('2024-06-26T19:20:00Z','{"id":"cnn","name":"CNN"}','Taylor Nicioli','Decades after the famed Kyrenia shipwreck?s discovery, researchers have a new estimate of when it sank - CNN','The timeline of a Hellenistic Kyrenia shipwreck stumped researchers for decades. But thanks to a cache of ancient almonds, a new study may have a better estimate.','https://www.cnn.com/2024/06/26/science/kyrenia-shipwreck-radiocarbon-dating-almonds-scn/index.html','https://media.cnn.com/api/v1/images/stellar/prod/kyrenia-ship-hull-during-excavation.jpg?c=16x9&q=w_800,c_fill','Sign up for CNNs Wonder Theory science newsletter.?Explore the universe with news on fascinating discoveries, scientific advancements and more.
A lone diverfirst laid eyes on the ancient Kyrenia shi? [+6426 chars]') was aborted: ERROR: duplicate key value violates unique constraint "current_headlines_table_pkey"
  Detail: Key (publishedat)=(2024-06-26T19:20:00Z) already exists.  Call getNextException to see other errors in the batch.
	at org.postgresql.jdbc.BatchResultHandler.handleError(BatchResultHandler.java:165)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2367)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:560)
	at org.postgresql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:893)
	at org.postgresql.jdbc.PgStatement.executeBatch(PgStatement.java:916)
	at org.postgresql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1684)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.savePartition(JdbcUtils.scala:751)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1(JdbcUtils.scala:902)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1$adapted(JdbcUtils.scala:901)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2(RDD.scala:1036)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2$adapted(RDD.scala:1036)
	at org.apache.spark.SparkContext.$anonfun$runJob$5(SparkContext.scala:2438)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:93)
	at org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:161)
	at org.apache.spark.scheduler.Task.run(Task.scala:141)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.postgresql.util.PSQLException: ERROR: duplicate key value violates unique constraint "current_headlines_table_pkey"
  Detail: Key (publishedat)=(2024-06-26T19:20:00Z) already exists.
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2676)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2366)
	... 21 more

Driver stacktrace:)
[2024-06-28T21:56:07.626+0000] {docker.py:413} INFO - 24/06/28 21:56:07 WARN TaskSetManager: Lost task 40.0 in stage 2.0 (TID 20) (localhost executor driver): TaskKilled (Stage cancelled: Job aborted due to stage failure: Task 25 in stage 2.0 failed 1 times, most recent failure: Lost task 25.0 in stage 2.0 (TID 14) (localhost executor driver): java.sql.BatchUpdateException: Batch entry 2 INSERT INTO current_headlines_table ("publishedat","source","author","title","description","url","urltoimage","content") VALUES ('2024-06-26T19:20:00Z','{"id":"cnn","name":"CNN"}','Taylor Nicioli','Decades after the famed Kyrenia shipwreck?s discovery, researchers have a new estimate of when it sank - CNN','The timeline of a Hellenistic Kyrenia shipwreck stumped researchers for decades. But thanks to a cache of ancient almonds, a new study may have a better estimate.','https://www.cnn.com/2024/06/26/science/kyrenia-shipwreck-radiocarbon-dating-almonds-scn/index.html','https://media.cnn.com/api/v1/images/stellar/prod/kyrenia-ship-hull-during-excavation.jpg?c=16x9&q=w_800,c_fill','Sign up for CNNs Wonder Theory science newsletter.?Explore the universe with news on fascinating discoveries, scientific advancements and more.
A lone diverfirst laid eyes on the ancient Kyrenia shi? [+6426 chars]') was aborted: ERROR: duplicate key value violates unique constraint "current_headlines_table_pkey"
  Detail: Key (publishedat)=(2024-06-26T19:20:00Z) already exists.  Call getNextException to see other errors in the batch.
	at org.postgresql.jdbc.BatchResultHandler.handleError(BatchResultHandler.java:165)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2367)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:560)
	at org.postgresql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:893)
	at org.postgresql.jdbc.PgStatement.executeBatch(PgStatement.java:916)
	at org.postgresql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1684)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.savePartition(JdbcUtils.scala:751)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1(JdbcUtils.scala:902)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1$adapted(JdbcUtils.scala:901)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2(RDD.scala:1036)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2$adapted(RDD.scala:1036)
	at org.apache.spark.SparkContext.$anonfun$runJob$5(SparkContext.scala:2438)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:93)
	at org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:161)
	at org.apache.spark.scheduler.Task.run(Task.scala:141)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.postgresql.util.PSQLException: ERROR: duplicate key value violates unique constraint "current_headlines_table_pkey"
  Detail: Key (publishedat)=(2024-06-26T19:20:00Z) already exists.
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2676)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2366)
	... 21 more

Driver stacktrace:)
24/06/28 21:56:07 WARN TaskSetManager: Lost task 44.0 in stage 2.0 (TID 22) (localhost executor driver): TaskKilled (Stage cancelled: Job aborted due to stage failure: Task 25 in stage 2.0 failed 1 times, most recent failure: Lost task 25.0 in stage 2.0 (TID 14) (localhost executor driver): java.sql.BatchUpdateException: Batch entry 2 INSERT INTO current_headlines_table ("publishedat","source","author","title","description","url","urltoimage","content") VALUES ('2024-06-26T19:20:00Z','{"id":"cnn","name":"CNN"}','Taylor Nicioli','Decades after the famed Kyrenia shipwreck?s discovery, researchers have a new estimate of when it sank - CNN','The timeline of a Hellenistic Kyrenia shipwreck stumped researchers for decades. But thanks to a cache of ancient almonds, a new study may have a better estimate.','https://www.cnn.com/2024/06/26/science/kyrenia-shipwreck-radiocarbon-dating-almonds-scn/index.html','https://media.cnn.com/api/v1/images/stellar/prod/kyrenia-ship-hull-during-excavation.jpg?c=16x9&q=w_800,c_fill','Sign up for CNNs Wonder Theory science newsletter.?Explore the universe with news on fascinating discoveries, scientific advancements and more.
A lone diverfirst laid eyes on the ancient Kyrenia shi? [+6426 chars]') was aborted: ERROR: duplicate key value violates unique constraint "current_headlines_table_pkey"
  Detail: Key (publishedat)=(2024-06-26T19:20:00Z) already exists.  Call getNextException to see other errors in the batch.
	at org.postgresql.jdbc.BatchResultHandler.handleError(BatchResultHandler.java:165)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2367)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:560)
	at org.postgresql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:893)
	at org.postgresql.jdbc.PgStatement.executeBatch(PgStatement.java:916)
	at org.postgresql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1684)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.savePartition(JdbcUtils.scala:751)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1(JdbcUtils.scala:902)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1$adapted(JdbcUtils.scala:901)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2(RDD.scala:1036)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2$adapted(RDD.scala:1036)
	at org.apache.spark.SparkContext.$anonfun$runJob$5(SparkContext.scala:2438)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:93)
	at org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:161)
	at org.apache.spark.scheduler.Task.run(Task.scala:141)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.postgresql.util.PSQLException: ERROR: duplicate key value violates unique constraint "current_headlines_table_pkey"
  Detail: Key (publishedat)=(2024-06-26T19:20:00Z) already exists.
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2676)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2366)
	... 21 more

Driver stacktrace:)
[2024-06-28T21:56:07.626+0000] {docker.py:413} INFO - 24/06/28 21:56:07 WARN TaskSetManager: Lost task 41.0 in stage 2.0 (TID 21) (localhost executor driver): TaskKilled (Stage cancelled: Job aborted due to stage failure: Task 25 in stage 2.0 failed 1 times, most recent failure: Lost task 25.0 in stage 2.0 (TID 14) (localhost executor driver): java.sql.BatchUpdateException: Batch entry 2 INSERT INTO current_headlines_table ("publishedat","source","author","title","description","url","urltoimage","content") VALUES ('2024-06-26T19:20:00Z','{"id":"cnn","name":"CNN"}','Taylor Nicioli','Decades after the famed Kyrenia shipwreck?s discovery, researchers have a new estimate of when it sank - CNN','The timeline of a Hellenistic Kyrenia shipwreck stumped researchers for decades. But thanks to a cache of ancient almonds, a new study may have a better estimate.','https://www.cnn.com/2024/06/26/science/kyrenia-shipwreck-radiocarbon-dating-almonds-scn/index.html','https://media.cnn.com/api/v1/images/stellar/prod/kyrenia-ship-hull-during-excavation.jpg?c=16x9&q=w_800,c_fill','Sign up for CNNs Wonder Theory science newsletter.?Explore the universe with news on fascinating discoveries, scientific advancements and more.
A lone diverfirst laid eyes on the ancient Kyrenia shi? [+6426 chars]') was aborted: ERROR: duplicate key value violates unique constraint "current_headlines_table_pkey"
  Detail: Key (publishedat)=(2024-06-26T19:20:00Z) already exists.  Call getNextException to see other errors in the batch.
	at org.postgresql.jdbc.BatchResultHandler.handleError(BatchResultHandler.java:165)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2367)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:560)
	at org.postgresql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:893)
	at org.postgresql.jdbc.PgStatement.executeBatch(PgStatement.java:916)
	at org.postgresql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1684)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.savePartition(JdbcUtils.scala:751)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1(JdbcUtils.scala:902)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1$adapted(JdbcUtils.scala:901)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2(RDD.scala:1036)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2$adapted(RDD.scala:1036)
	at org.apache.spark.SparkContext.$anonfun$runJob$5(SparkContext.scala:2438)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:93)
	at org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:161)
	at org.apache.spark.scheduler.Task.run(Task.scala:141)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.postgresql.util.PSQLException: ERROR: duplicate key value violates unique constraint "current_headlines_table_pkey"
  Detail: Key (publishedat)=(2024-06-26T19:20:00Z) already exists.
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2676)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2366)
	... 21 more

Driver stacktrace:)
[2024-06-28T21:56:07.627+0000] {docker.py:413} INFO - 24/06/28 21:56:07 WARN TaskSetManager: Lost task 35.0 in stage 2.0 (TID 18) (localhost executor driver): TaskKilled (Stage cancelled: Job aborted due to stage failure: Task 25 in stage 2.0 failed 1 times, most recent failure: Lost task 25.0 in stage 2.0 (TID 14) (localhost executor driver): java.sql.BatchUpdateException: Batch entry 2 INSERT INTO current_headlines_table ("publishedat","source","author","title","description","url","urltoimage","content") VALUES ('2024-06-26T19:20:00Z','{"id":"cnn","name":"CNN"}','Taylor Nicioli','Decades after the famed Kyrenia shipwreck?s discovery, researchers have a new estimate of when it sank - CNN','The timeline of a Hellenistic Kyrenia shipwreck stumped researchers for decades. But thanks to a cache of ancient almonds, a new study may have a better estimate.','https://www.cnn.com/2024/06/26/science/kyrenia-shipwreck-radiocarbon-dating-almonds-scn/index.html','https://media.cnn.com/api/v1/images/stellar/prod/kyrenia-ship-hull-during-excavation.jpg?c=16x9&q=w_800,c_fill','Sign up for CNNs Wonder Theory science newsletter.?Explore the universe with news on fascinating discoveries, scientific advancements and more.
A lone diverfirst laid eyes on the ancient Kyrenia shi? [+6426 chars]') was aborted: ERROR: duplicate key value violates unique constraint "current_headlines_table_pkey"
  Detail: Key (publishedat)=(2024-06-26T19:20:00Z) already exists.  Call getNextException to see other errors in the batch.
	at org.postgresql.jdbc.BatchResultHandler.handleError(BatchResultHandler.java:165)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2367)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:560)
	at org.postgresql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:893)
	at org.postgresql.jdbc.PgStatement.executeBatch(PgStatement.java:916)
	at org.postgresql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1684)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.savePartition(JdbcUtils.scala:751)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1(JdbcUtils.scala:902)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1$adapted(JdbcUtils.scala:901)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2(RDD.scala:1036)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2$adapted(RDD.scala:1036)
	at org.apache.spark.SparkContext.$anonfun$runJob$5(SparkContext.scala:2438)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:93)
	at org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:161)
	at org.apache.spark.scheduler.Task.run(Task.scala:141)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.postgresql.util.PSQLException: ERROR: duplicate key value violates unique constraint "current_headlines_table_pkey"
  Detail: Key (publishedat)=(2024-06-26T19:20:00Z) already exists.
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2676)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2366)
	... 21 more

Driver stacktrace:)
24/06/28 21:56:07 INFO TaskSchedulerImpl: Removed TaskSet 2.0, whose tasks have all completed, from pool
[2024-06-28T21:56:07.760+0000] {docker.py:413} INFO - 2024-06-28 21:56:07,714:_call_proxy:ERROR:There was an exception while executing the Python Proxy on the Python Side.
Traceback (most recent call last):
  File "/opt/bitnami/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/clientserver.py", line 617, in _call_proxy
    return_value = getattr(self.pool[obj_id], method)(*params)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/bitnami/spark/python/lib/pyspark.zip/pyspark/sql/utils.py", line 120, in call
    raise e
  File "/opt/bitnami/spark/python/lib/pyspark.zip/pyspark/sql/utils.py", line 117, in call
    self.func(DataFrame(jdf, wrapped_session_jdf), batch_id)
  File "/opt/bitnami/spark/spark_streaming.py", line 83, in <lambda>
    .write.jdbc(
           ^^^^^
  File "/opt/bitnami/spark/python/lib/pyspark.zip/pyspark/sql/readwriter.py", line 1984, in jdbc
    self.mode(mode)._jwrite.jdbc(url, table, jprop)
  File "/opt/bitnami/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/java_gateway.py", line 1322, in __call__
    return_value = get_return_value(
                   ^^^^^^^^^^^^^^^^^
  File "/opt/bitnami/spark/python/lib/pyspark.zip/pyspark/errors/exceptions/captured.py", line 179, in deco
    return f(*a, **kw)
           ^^^^^^^^^^^
  File "/opt/bitnami/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/protocol.py", line 326, in get_return_value
    raise Py4JJavaError(
py4j.protocol.Py4JJavaError: An error occurred while calling o69.jdbc.
: org.apache.spark.SparkException: Job aborted due to stage failure: Task 25 in stage 2.0 failed 1 times, most recent failure: Lost task 25.0 in stage 2.0 (TID 14) (localhost executor driver): java.sql.BatchUpdateException: Batch entry 2 INSERT INTO current_headlines_table ("publishedat","source","author","title","description","url","urltoimage","content") VALUES ('2024-06-26T19:20:00Z','{"id":"cnn","name":"CNN"}','Taylor Nicioli','Decades after the famed Kyrenia shipwreck’s discovery, researchers have a new estimate of when it sank - CNN','The timeline of a Hellenistic Kyrenia shipwreck stumped researchers for decades. But thanks to a cache of ancient almonds, a new study may have a better estimate.','https://www.cnn.com/2024/06/26/science/kyrenia-shipwreck-radiocarbon-dating-almonds-scn/index.html','https://media.cnn.com/api/v1/images/stellar/prod/kyrenia-ship-hull-during-excavation.jpg?c=16x9&q=w_800,c_fill','Sign up for CNNs Wonder Theory science newsletter. Explore the universe with news on fascinating discoveries, scientific advancements and more.
A lone diverfirst laid eyes on the ancient Kyrenia shi… [+6426 chars]') was aborted: ERROR: duplicate key value violates unique constraint "current_headlines_table_pkey"
  Detail: Key (publishedat)=(2024-06-26T19:20:00Z) already exists.  Call getNextException to see other errors in the batch.
	at org.postgresql.jdbc.BatchResultHandler.handleError(BatchResultHandler.java:165)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2367)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:560)
	at org.postgresql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:893)
	at org.postgresql.jdbc.PgStatement.executeBatch(PgStatement.java:916)
	at org.postgresql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1684)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.savePartition(JdbcUtils.scala:751)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1(JdbcUtils.scala:902)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1$adapted(JdbcUtils.scala:901)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2(RDD.scala:1036)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2$adapted(RDD.scala:1036)
	at org.apache.spark.SparkContext.$anonfun$runJob$5(SparkContext.scala:2438)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:93)
	at org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:161)
	at org.apache.spark.scheduler.Task.run(Task.scala:141)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.postgresql.util.PSQLException: ERROR: duplicate key value violates unique constraint "current_headlines_table_pkey"
  Detail: Key (publishedat)=(2024-06-26T19:20:00Z) already exists.
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2676)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2366)
	... 21 more

Driver stacktrace:
	at org.apache.spark.scheduler.DAGScheduler.failJobAndIndependentStages(DAGScheduler.scala:2844)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$abortStage$2(DAGScheduler.scala:2780)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$abortStage$2$adapted(DAGScheduler.scala:2779)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at org.apache.spark.scheduler.DAGScheduler.abortStage(DAGScheduler.scala:2779)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$handleTaskSetFailed$1(DAGScheduler.scala:1242)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$handleTaskSetFailed$1$adapted(DAGScheduler.scala:1242)
	at scala.Option.foreach(Option.scala:407)
	at org.apache.spark.scheduler.DAGScheduler.handleTaskSetFailed(DAGScheduler.scala:1242)
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.doOnReceive(DAGScheduler.scala:3048)
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:2982)
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:2971)
	at org.apache.spark.util.EventLoop$$anon$1.run(EventLoop.scala:49)
	at org.apache.spark.scheduler.DAGScheduler.runJob(DAGScheduler.scala:984)
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2398)
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2419)
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2438)
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2463)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$1(RDD.scala:1036)
	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:151)
	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:112)
	at org.apache.spark.rdd.RDD.withScope(RDD.scala:407)
	at org.apache.spark.rdd.RDD.foreachPartition(RDD.scala:1034)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.saveTable(JdbcUtils.scala:901)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcRelationProvider.createRelation(JdbcRelationProvider.scala:70)
	at org.apache.spark.sql.execution.datasources.SaveIntoDataSourceCommand.run(SaveIntoDataSourceCommand.scala:48)
	at org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult$lzycompute(commands.scala:75)
	at org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult(commands.scala:73)
	at org.apache.spark.sql.execution.command.ExecutedCommandExec.executeCollect(commands.scala:84)
	at org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$1.$anonfun$applyOrElse$1(QueryExecution.scala:107)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$6(SQLExecution.scala:125)
	at org.apache.spark.sql.execution.SQLExecution$.withSQLConfPropagated(SQLExecution.scala:201)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$1(SQLExecution.scala:108)
	at org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:900)
	at org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:66)
	at org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$1.applyOrElse(QueryExecution.scala:107)
	at org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$1.applyOrElse(QueryExecution.scala:98)
	at org.apache.spark.sql.catalyst.trees.TreeNode.$anonfun$transformDownWithPruning$1(TreeNode.scala:461)
	at org.apache.spark.sql.catalyst.trees.CurrentOrigin$.withOrigin(origin.scala:76)
	at org.apache.spark.sql.catalyst.trees.TreeNode.transformDownWithPruning(TreeNode.scala:461)
	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.org$apache$spark$sql$catalyst$plans$logical$AnalysisHelper$$super$transformDownWithPruning(LogicalPlan.scala:32)
	at org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.transformDownWithPruning(AnalysisHelper.scala:267)
	at org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.transformDownWithPruning$(AnalysisHelper.scala:263)
	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.transformDownWithPruning(LogicalPlan.scala:32)
	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.transformDownWithPruning(LogicalPlan.scala:32)
	at org.apache.spark.sql.catalyst.trees.TreeNode.transformDown(TreeNode.scala:437)
	at org.apache.spark.sql.execution.QueryExecution.eagerlyExecuteCommands(QueryExecution.scala:98)
	at org.apache.spark.sql.execution.QueryExecution.commandExecuted$lzycompute(QueryExecution.scala:85)
	at org.apache.spark.sql.execution.QueryExecution.commandExecuted(QueryExecution.scala:83)
	at org.apache.spark.sql.execution.QueryExecution.assertCommandExecuted(QueryExecution.scala:142)
	at org.apache.spark.sql.DataFrameWriter.runCommand(DataFrameWriter.scala:859)
	at org.apache.spark.sql.DataFrameWriter.saveToV1Source(DataFrameWriter.scala:388)
	at org.apache.spark.sql.DataFrameWriter.saveInternal(DataFrameWriter.scala:361)
	at org.apache.spark.sql.DataFrameWriter.save(DataFrameWriter.scala:248)
	at org.apache.spark.sql.DataFrameWriter.jdbc(DataFrameWriter.scala:756)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)
	at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)
	at py4j.Gateway.invoke(Gateway.java:282)
	at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)
	at py4j.commands.CallCommand.execute(CallCommand.java:79)
	at py4j.ClientServerConnection.sendCommand(ClientServerConnection.java:244)
	at py4j.CallbackClient.sendCommand(CallbackClient.java:384)
	at py4j.CallbackClient.sendCommand(CallbackClient.java:356)
	at py4j.reflection.PythonProxyHandler.invoke(PythonProxyHandler.java:106)
	at jdk.proxy3/jdk.proxy3.$Proxy30.call(Unknown Source)
	at org.apache.spark.sql.execution.streaming.sources.PythonForeachBatchHelper$.$anonfun$callForeachBatch$1(ForeachBatchSink.scala:53)
	at org.apache.spark.sql.execution.streaming.sources.PythonForeachBatchHelper$.$anonfun$callForeachBatch$1$adapted(ForeachBatchSink.scala:53)
	at org.apache.spark.sql.execution.streaming.sources.ForeachBatchSink.addBatch(ForeachBatchSink.scala:34)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.$anonfun$runBatch$17(MicroBatchExecution.scala:732)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$6(SQLExecution.scala:125)
	at org.apache.spark.sql.execution.SQLExecution$.withSQLConfPropagated(SQLExecution.scala:201)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$1(SQLExecution.scala:108)
	at org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:900)
	at org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:66)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.$anonfun$runBatch$16(MicroBatchExecution.scala:729)
	at org.apache.spark.sql.execution.streaming.ProgressReporter.reportTimeTaken(ProgressReporter.scala:427)
	at org.apache.spark.sql.execution.streaming.ProgressReporter.reportTimeTaken$(ProgressReporter.scala:425)
	at org.apache.spark.sql.execution.streaming.StreamExecution.reportTimeTaken(StreamExecution.scala:67)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.runBatch(MicroBatchExecution.scala:729)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.$anonfun$runActivatedStream$2(MicroBatchExecution.scala:286)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at org.apache.spark.sql.execution.streaming.ProgressReporter.reportTimeTaken(ProgressReporter.scala:427)
	at org.apache.spark.sql.execution.streaming.ProgressReporter.reportTimeTaken$(ProgressReporter.scala:425)
	at org.apache.spark.sql.execution.streaming.StreamExecution.reportTimeTaken(StreamExecution.scala:67)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.$anonfun$runActivatedStream$1(MicroBatchExecution.scala:249)
	at org.apache.spark.sql.execution.streaming.SingleBatchExecutor.execute(TriggerExecutor.scala:39)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.runActivatedStream(MicroBatchExecution.scala:239)
	at org.apache.spark.sql.execution.streaming.StreamExecution.$anonfun$runStream$1(StreamExecution.scala:311)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:900)
	at org.apache.spark.sql.execution.streaming.StreamExecution.org$apache$spark$sql$execution$streaming$StreamExecution$$runStream(StreamExecution.scala:289)
	at org.apache.spark.sql.execution.streaming.StreamExecution$$anon$1.$anonfun$run$1(StreamExecution.scala:211)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at org.apache.spark.JobArtifactSet$.withActiveJobArtifactState(JobArtifactSet.scala:94)
	at org.apache.spark.sql.execution.streaming.StreamExecution$$anon$1.run(StreamExecution.scala:211)
Caused by: java.sql.BatchUpdateException: Batch entry 2 INSERT INTO current_headlines_table ("publishedat","source","author","title","description","url","urltoimage","content") VALUES ('2024-06-26T19:20:00Z','{"id":"cnn","name":"CNN"}','Taylor Nicioli','Decades after the famed Kyrenia shipwreck’s discovery, researchers have a new estimate of when it sank - CNN','The timeline of a Hellenistic Kyrenia shipwreck stumped researchers for decades. But thanks to a cache of ancient almonds, a new study may have a better estimate.','https://www.cnn.com/2024/06/26/science/kyrenia-shipwreck-radiocarbon-dating-almonds-scn/index.html','https://media.cnn.com/api/v1/images/stellar/prod/kyrenia-ship-hull-during-excavation.jpg?c=16x9&q=w_800,c_fill','Sign up for CNNs Wonder Theory science newsletter. Explore the universe with news on fascinating discoveries, scientific advancements and more.
A lone diverfirst laid eyes on the ancient Kyrenia shi… [+6426 chars]') was aborted: ERROR: duplicate key value violates unique constraint "current_headlines_table_pkey"
  Detail: Key (publishedat)=(2024-06-26T19:20:00Z) already exists.  Call getNextException to see other errors in the batch.
	at org.postgresql.jdbc.BatchResultHandler.handleError(BatchResultHandler.java:165)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2367)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:560)
	at org.postgresql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:893)
	at org.postgresql.jdbc.PgStatement.executeBatch(PgStatement.java:916)
	at org.postgresql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1684)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.savePartition(JdbcUtils.scala:751)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1(JdbcUtils.scala:902)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1$adapted(JdbcUtils.scala:901)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2(RDD.scala:1036)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2$adapted(RDD.scala:1036)
	at org.apache.spark.SparkContext.$anonfun$runJob$5(SparkContext.scala:2438)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:93)
	at org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:161)
	at org.apache.spark.scheduler.Task.run(Task.scala:141)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.postgresql.util.PSQLException: ERROR: duplicate key value violates unique constraint "current_headlines_table_pkey"
  Detail: Key (publishedat)=(2024-06-26T19:20:00Z) already exists.
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2676)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2366)
	... 21 more
[2024-06-28T21:56:07.806+0000] {docker.py:413} INFO - 24/06/28 21:56:07 ERROR MicroBatchExecution: Query [id = 522e5f26-f87d-4d61-90a3-470173ee9290, runId = 081937cf-48f4-4012-9e3f-24c29b364384] terminated with error
py4j.Py4JException: An exception was raised by the Python Proxy. Return Message: Traceback (most recent call last):
  File "/opt/bitnami/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/clientserver.py", line 617, in _call_proxy
    return_value = getattr(self.pool[obj_id], method)(*params)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/bitnami/spark/python/lib/pyspark.zip/pyspark/sql/utils.py", line 120, in call
    raise e
  File "/opt/bitnami/spark/python/lib/pyspark.zip/pyspark/sql/utils.py", line 117, in call
    self.func(DataFrame(jdf, wrapped_session_jdf), batch_id)
  File "/opt/bitnami/spark/spark_streaming.py", line 83, in <lambda>
    .write.jdbc(
           ^^^^^
  File "/opt/bitnami/spark/python/lib/pyspark.zip/pyspark/sql/readwriter.py", line 1984, in jdbc
    self.mode(mode)._jwrite.jdbc(url, table, jprop)
  File "/opt/bitnami/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/java_gateway.py", line 1322, in __call__
    return_value = get_return_value(
                   ^^^^^^^^^^^^^^^^^
  File "/opt/bitnami/spark/python/lib/pyspark.zip/pyspark/errors/exceptions/captured.py", line 179, in deco
    return f(*a, **kw)
           ^^^^^^^^^^^
  File "/opt/bitnami/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/protocol.py", line 326, in get_return_value
    raise Py4JJavaError(
py4j.protocol.Py4JJavaError: An error occurred while calling o69.jdbc.
: org.apache.spark.SparkException: Job aborted due to stage failure: Task 25 in stage 2.0 failed 1 times, most recent failure: Lost task 25.0 in stage 2.0 (TID 14) (localhost executor driver): java.sql.BatchUpdateException: Batch entry 2 INSERT INTO current_headlines_table ("publishedat","source","author","title","description","url","urltoimage","content") VALUES ('2024-06-26T19:20:00Z','{"id":"cnn","name":"CNN"}','Taylor Nicioli','Decades after the famed Kyrenia shipwreck?s discovery, researchers have a new estimate of when it sank - CNN','The timeline of a Hellenistic Kyrenia shipwreck stumped researchers for decades. But thanks to a cache of ancient almonds, a new study may have a better estimate.','https://www.cnn.com/2024/06/26/science/kyrenia-shipwreck-radiocarbon-dating-almonds-scn/index.html','https://media.cnn.com/api/v1/images/stellar/prod/kyrenia-ship-hull-during-excavation.jpg?c=16x9&q=w_800,c_fill','Sign up for CNNs Wonder Theory science newsletter.?Explore the universe with news on fascinating discoveries, scientific advancements and more.
A lone diverfirst laid eyes on the ancient Kyrenia shi? [+6426 chars]') was aborted: ERROR: duplicate key value violates unique constraint "current_headlines_table_pkey"
  Detail: Key (publishedat)=(2024-06-26T19:20:00Z) already exists.  Call getNextException to see other errors in the batch.
	at org.postgresql.jdbc.BatchResultHandler.handleError(BatchResultHandler.java:165)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2367)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:560)
	at org.postgresql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:893)
	at org.postgresql.jdbc.PgStatement.executeBatch(PgStatement.java:916)
	at org.postgresql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1684)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.savePartition(JdbcUtils.scala:751)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1(JdbcUtils.scala:902)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1$adapted(JdbcUtils.scala:901)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2(RDD.scala:1036)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2$adapted(RDD.scala:1036)
	at org.apache.spark.SparkContext.$anonfun$runJob$5(SparkContext.scala:2438)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:93)
	at org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:161)
	at org.apache.spark.scheduler.Task.run(Task.scala:141)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.postgresql.util.PSQLException: ERROR: duplicate key value violates unique constraint "current_headlines_table_pkey"
  Detail: Key (publishedat)=(2024-06-26T19:20:00Z) already exists.
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2676)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2366)
	... 21 more

Driver stacktrace:
	at org.apache.spark.scheduler.DAGScheduler.failJobAndIndependentStages(DAGScheduler.scala:2844)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$abortStage$2(DAGScheduler.scala:2780)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$abortStage$2$adapted(DAGScheduler.scala:2779)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at org.apache.spark.scheduler.DAGScheduler.abortStage(DAGScheduler.scala:2779)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$handleTaskSetFailed$1(DAGScheduler.scala:1242)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$handleTaskSetFailed$1$adapted(DAGScheduler.scala:1242)
	at scala.Option.foreach(Option.scala:407)
	at org.apache.spark.scheduler.DAGScheduler.handleTaskSetFailed(DAGScheduler.scala:1242)
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.doOnReceive(DAGScheduler.scala:3048)
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:2982)
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:2971)
	at org.apache.spark.util.EventLoop$$anon$1.run(EventLoop.scala:49)
	at org.apache.spark.scheduler.DAGScheduler.runJob(DAGScheduler.scala:984)
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2398)
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2419)
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2438)
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2463)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$1(RDD.scala:1036)
	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:151)
	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:112)
	at org.apache.spark.rdd.RDD.withScope(RDD.scala:407)
	at org.apache.spark.rdd.RDD.foreachPartition(RDD.scala:1034)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.saveTable(JdbcUtils.scala:901)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcRelationProvider.createRelation(JdbcRelationProvider.scala:70)
	at org.apache.spark.sql.execution.datasources.SaveIntoDataSourceCommand.run(SaveIntoDataSourceCommand.scala:48)
	at org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult$lzycompute(commands.scala:75)
	at org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult(commands.scala:73)
	at org.apache.spark.sql.execution.command.ExecutedCommandExec.executeCollect(commands.scala:84)
	at org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$1.$anonfun$applyOrElse$1(QueryExecution.scala:107)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$6(SQLExecution.scala:125)
	at org.apache.spark.sql.execution.SQLExecution$.withSQLConfPropagated(SQLExecution.scala:201)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$1(SQLExecution.scala:108)
	at org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:900)
	at org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:66)
	at org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$1.applyOrElse(QueryExecution.scala:107)
	at org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$1.applyOrElse(QueryExecution.scala:98)
	at org.apache.spark.sql.catalyst.trees.TreeNode.$anonfun$transformDownWithPruning$1(TreeNode.scala:461)
	at org.apache.spark.sql.catalyst.trees.CurrentOrigin$.withOrigin(origin.scala:76)
	at org.apache.spark.sql.catalyst.trees.TreeNode.transformDownWithPruning(TreeNode.scala:461)
	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.org$apache$spark$sql$catalyst$plans$logical$AnalysisHelper$$super$transformDownWithPruning(LogicalPlan.scala:32)
	at org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.transformDownWithPruning(AnalysisHelper.scala:267)
	at org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.transformDownWithPruning$(AnalysisHelper.scala:263)
	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.transformDownWithPruning(LogicalPlan.scala:32)
	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.transformDownWithPruning(LogicalPlan.scala:32)
	at org.apache.spark.sql.catalyst.trees.TreeNode.transformDown(TreeNode.scala:437)
	at org.apache.spark.sql.execution.QueryExecution.eagerlyExecuteCommands(QueryExecution.scala:98)
	at org.apache.spark.sql.execution.QueryExecution.commandExecuted$lzycompute(QueryExecution.scala:85)
	at org.apache.spark.sql.execution.QueryExecution.commandExecuted(QueryExecution.scala:83)
	at org.apache.spark.sql.execution.QueryExecution.assertCommandExecuted(QueryExecution.scala:142)
	at org.apache.spark.sql.DataFrameWriter.runCommand(DataFrameWriter.scala:859)
	at org.apache.spark.sql.DataFrameWriter.saveToV1Source(DataFrameWriter.scala:388)
	at org.apache.spark.sql.DataFrameWriter.saveInternal(DataFrameWriter.scala:361)
	at org.apache.spark.sql.DataFrameWriter.save(DataFrameWriter.scala:248)
	at org.apache.spark.sql.DataFrameWriter.jdbc(DataFrameWriter.scala:756)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)
	at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)
	at py4j.Gateway.invoke(Gateway.java:282)
	at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)
	at py4j.commands.CallCommand.execute(CallCommand.java:79)
	at py4j.ClientServerConnection.sendCommand(ClientServerConnection.java:244)
	at py4j.CallbackClient.sendCommand(CallbackClient.java:384)
	at py4j.CallbackClient.sendCommand(CallbackClient.java:356)
	at py4j.reflection.PythonProxyHandler.invoke(PythonProxyHandler.java:106)
	at jdk.proxy3/jdk.proxy3.$Proxy30.call(Unknown Source)
	at org.apache.spark.sql.execution.streaming.sources.PythonForeachBatchHelper$.$anonfun$callForeachBatch$1(ForeachBatchSink.scala:53)
	at org.apache.spark.sql.execution.streaming.sources.PythonForeachBatchHelper$.$anonfun$callForeachBatch$1$adapted(ForeachBatchSink.scala:53)
	at org.apache.spark.sql.execution.streaming.sources.ForeachBatchSink.addBatch(ForeachBatchSink.scala:34)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.$anonfun$runBatch$17(MicroBatchExecution.scala:732)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$6(SQLExecution.scala:125)
	at org.apache.spark.sql.execution.SQLExecution$.withSQLConfPropagated(SQLExecution.scala:201)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$1(SQLExecution.scala:108)
	at org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:900)
	at org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:66)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.$anonfun$runBatch$16(MicroBatchExecution.scala:729)
	at org.apache.spark.sql.execution.streaming.ProgressReporter.reportTimeTaken(ProgressReporter.scala:427)
	at org.apache.spark.sql.execution.streaming.ProgressReporter.reportTimeTaken$(ProgressReporter.scala:425)
	at org.apache.spark.sql.execution.streaming.StreamExecution.reportTimeTaken(StreamExecution.scala:67)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.runBatch(MicroBatchExecution.scala:729)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.$anonfun$runActivatedStream$2(MicroBatchExecution.scala:286)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at org.apache.spark.sql.execution.streaming.ProgressReporter.reportTimeTaken(ProgressReporter.scala:427)
	at org.apache.spark.sql.execution.streaming.ProgressReporter.reportTimeTaken$(ProgressReporter.scala:425)
	at org.apache.spark.sql.execution.streaming.StreamExecution.reportTimeTaken(StreamExecution.scala:67)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.$anonfun$runActivatedStream$1(MicroBatchExecution.scala:249)
	at org.apache.spark.sql.execution.streaming.SingleBatchExecutor.execute(TriggerExecutor.scala:39)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.runActivatedStream(MicroBatchExecution.scala:239)
	at org.apache.spark.sql.execution.streaming.StreamExecution.$anonfun$runStream$1(StreamExecution.scala:311)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:900)
	at org.apache.spark.sql.execution.streaming.StreamExecution.org$apache$spark$sql$execution$streaming$StreamExecution$$runStream(StreamExecution.scala:289)
	at org.apache.spark.sql.execution.streaming.StreamExecution$$anon$1.$anonfun$run$1(StreamExecution.scala:211)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at org.apache.spark.JobArtifactSet$.withActiveJobArtifactState(JobArtifactSet.scala:94)
	at org.apache.spark.sql.execution.streaming.StreamExecution$$anon$1.run(StreamExecution.scala:211)
Caused by: java.sql.BatchUpdateException: Batch entry 2 INSERT INTO current_headlines_table ("publishedat","source","author","title","description","url","urltoimage","content") VALUES ('2024-06-26T19:20:00Z','{"id":"cnn","name":"CNN"}','Taylor Nicioli','Decades after the famed Kyrenia shipwreck?s discovery, researchers have a new estimate of when it sank - CNN','The timeline of a Hellenistic Kyrenia shipwreck stumped researchers for decades. But thanks to a cache of ancient almonds, a new study may have a better estimate.','https://www.cnn.com/2024/06/26/science/kyrenia-shipwreck-radiocarbon-dating-almonds-scn/index.html','https://media.cnn.com/api/v1/images/stellar/prod/kyrenia-ship-hull-during-excavation.jpg?c=16x9&q=w_800,c_fill','Sign up for CNNs Wonder Theory science newsletter.?Explore the universe with news on fascinating discoveries, scientific advancements and more.
A lone diverfirst laid eyes on the ancient Kyrenia shi? [+6426 chars]') was aborted: ERROR: duplicate key value violates unique constraint "current_headlines_table_pkey"
  Detail: Key (publishedat)=(2024-06-26T19:20:00Z) already exists.  Call getNextException to see other errors in the batch.
	at org.postgresql.jdbc.BatchResultHandler.handleError(BatchResultHandler.java:165)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2367)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:560)
	at org.postgresql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:893)
	at org.postgresql.jdbc.PgStatement.executeBatch(PgStatement.java:916)
	at org.postgresql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1684)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.savePartition(JdbcUtils.scala:751)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1(JdbcUtils.scala:902)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1$adapted(JdbcUtils.scala:901)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2(RDD.scala:1036)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2$adapted(RDD.scala:1036)
	at org.apache.spark.SparkContext.$anonfun$runJob$5(SparkContext.scala:2438)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:93)
	at org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:161)
	at org.apache.spark.scheduler.Task.run(Task.scala:141)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.postgresql.util.PSQLException: ERROR: duplicate key value violates unique constraint "current_headlines_table_pkey"
  Detail: Key (publishedat)=(2024-06-26T19:20:00Z) already exists.
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2676)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2366)
	... 21 more


	at py4j.Protocol.getReturnValue(Protocol.java:476)
	at py4j.reflection.PythonProxyHandler.invoke(PythonProxyHandler.java:108)
	at jdk.proxy3/jdk.proxy3.$Proxy30.call(Unknown Source)
	at org.apache.spark.sql.execution.streaming.sources.PythonForeachBatchHelper$.$anonfun$callForeachBatch$1(ForeachBatchSink.scala:53)
	at org.apache.spark.sql.execution.streaming.sources.PythonForeachBatchHelper$.$anonfun$callForeachBatch$1$adapted(ForeachBatchSink.scala:53)
	at org.apache.spark.sql.execution.streaming.sources.ForeachBatchSink.addBatch(ForeachBatchSink.scala:34)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.$anonfun$runBatch$17(MicroBatchExecution.scala:732)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$6(SQLExecution.scala:125)
	at org.apache.spark.sql.execution.SQLExecution$.withSQLConfPropagated(SQLExecution.scala:201)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$1(SQLExecution.scala:108)
	at org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:900)
	at org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:66)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.$anonfun$runBatch$16(MicroBatchExecution.scala:729)
	at org.apache.spark.sql.execution.streaming.ProgressReporter.reportTimeTaken(ProgressReporter.scala:427)
	at org.apache.spark.sql.execution.streaming.ProgressReporter.reportTimeTaken$(ProgressReporter.scala:425)
	at org.apache.spark.sql.execution.streaming.StreamExecution.reportTimeTaken(StreamExecution.scala:67)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.runBatch(MicroBatchExecution.scala:729)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.$anonfun$runActivatedStream$2(MicroBatchExecution.scala:286)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at org.apache.spark.sql.execution.streaming.ProgressReporter.reportTimeTaken(ProgressReporter.scala:427)
	at org.apache.spark.sql.execution.streaming.ProgressReporter.reportTimeTaken$(ProgressReporter.scala:425)
	at org.apache.spark.sql.execution.streaming.StreamExecution.reportTimeTaken(StreamExecution.scala:67)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.$anonfun$runActivatedStream$1(MicroBatchExecution.scala:249)
	at org.apache.spark.sql.execution.streaming.SingleBatchExecutor.execute(TriggerExecutor.scala:39)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.runActivatedStream(MicroBatchExecution.scala:239)
	at org.apache.spark.sql.execution.streaming.StreamExecution.$anonfun$runStream$1(StreamExecution.scala:311)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:900)
	at org.apache.spark.sql.execution.streaming.StreamExecution.org$apache$spark$sql$execution$streaming$StreamExecution$$runStream(StreamExecution.scala:289)
	at org.apache.spark.sql.execution.streaming.StreamExecution$$anon$1.$anonfun$run$1(StreamExecution.scala:211)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at org.apache.spark.JobArtifactSet$.withActiveJobArtifactState(JobArtifactSet.scala:94)
	at org.apache.spark.sql.execution.streaming.StreamExecution$$anon$1.run(StreamExecution.scala:211)
[2024-06-28T21:56:07.807+0000] {docker.py:413} INFO - 24/06/28 21:56:07 INFO AppInfoParser: App info kafka.admin.client for adminclient-1 unregistered
[2024-06-28T21:56:07.809+0000] {docker.py:413} INFO - 24/06/28 21:56:07 INFO Metrics: Metrics scheduler closed
24/06/28 21:56:07 INFO Metrics: Closing reporter org.apache.kafka.common.metrics.JmxReporter
[2024-06-28T21:56:07.809+0000] {docker.py:413} INFO - 24/06/28 21:56:07 INFO Metrics: Metrics reporters closed
[2024-06-28T21:56:07.810+0000] {docker.py:413} INFO - 24/06/28 21:56:07 INFO MicroBatchExecution: Async log purge executor pool for query [id = 522e5f26-f87d-4d61-90a3-470173ee9290, runId = 081937cf-48f4-4012-9e3f-24c29b364384] has been shutdown
[2024-06-28T21:56:07.999+0000] {docker.py:413} INFO - Traceback (most recent call last):
  File "/opt/bitnami/spark/spark_streaming.py", line 103, in <module>
[2024-06-28T21:56:08.000+0000] {docker.py:413} INFO - write_to_postgres()
  File "/opt/bitnami/spark/spark_streaming.py", line 99, in write_to_postgres
    start_streaming(df_final, spark=spark)
[2024-06-28T21:56:08.000+0000] {docker.py:413} INFO - File "/opt/bitnami/spark/spark_streaming.py", line 90, in start_streaming
    return query.awaitTermination()
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/bitnami/spark/python/lib/pyspark.zip/pyspark/sql/streaming/query.py", line 221, in awaitTermination
  File "/opt/bitnami/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/java_gateway.py", line 1322, in __call__
[2024-06-28T21:56:08.001+0000] {docker.py:413} INFO - File "/opt/bitnami/spark/python/lib/pyspark.zip/pyspark/errors/exceptions/captured.py", line 185, in deco
[2024-06-28T21:56:08.001+0000] {docker.py:413} INFO - pyspark.errors.exceptions.captured.StreamingQueryException
[2024-06-28T21:56:08.008+0000] {docker.py:413} INFO - : [STREAM_FAILED] Query [id = 522e5f26-f87d-4d61-90a3-470173ee9290, runId = 081937cf-48f4-4012-9e3f-24c29b364384] terminated with exception: An exception was raised by the Python Proxy. Return Message: Traceback (most recent call last):
  File "/opt/bitnami/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/clientserver.py", line 617, in _call_proxy
    return_value = getattr(self.pool[obj_id], method)(*params)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/bitnami/spark/python/lib/pyspark.zip/pyspark/sql/utils.py", line 120, in call
    raise e
  File "/opt/bitnami/spark/python/lib/pyspark.zip/pyspark/sql/utils.py", line 117, in call
    self.func(DataFrame(jdf, wrapped_session_jdf), batch_id)
  File "/opt/bitnami/spark/spark_streaming.py", line 83, in <lambda>
    .write.jdbc(
           ^^^^^
  File "/opt/bitnami/spark/python/lib/pyspark.zip/pyspark/sql/readwriter.py", line 1984, in jdbc
    self.mode(mode)._jwrite.jdbc(url, table, jprop)
  File "/opt/bitnami/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/java_gateway.py", line 1322, in __call__
    return_value = get_return_value(
                   ^^^^^^^^^^^^^^^^^
  File "/opt/bitnami/spark/python/lib/pyspark.zip/pyspark/errors/exceptions/captured.py", line 179, in deco
    return f(*a, **kw)
           ^^^^^^^^^^^
  File "/opt/bitnami/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/protocol.py", line 326, in get_return_value
    raise Py4JJavaError(
py4j.protocol.Py4JJavaError: An error occurred while calling o69.jdbc.
: org.apache.spark.SparkException: Job aborted due to stage failure: Task 25 in stage 2.0 failed 1 times, most recent failure: Lost task 25.0 in stage 2.0 (TID 14) (localhost executor driver): java.sql.BatchUpdateException: Batch entry 2 INSERT INTO current_headlines_table ("publishedat","source","author","title","description","url","urltoimage","content") VALUES ('2024-06-26T19:20:00Z','{"id":"cnn","name":"CNN"}','Taylor Nicioli','Decades after the famed Kyrenia shipwreck’s discovery, researchers have a new estimate of when it sank - CNN','The timeline of a Hellenistic Kyrenia shipwreck stumped researchers for decades. But thanks to a cache of ancient almonds, a new study may have a better estimate.','https://www.cnn.com/2024/06/26/science/kyrenia-shipwreck-radiocarbon-dating-almonds-scn/index.html','https://media.cnn.com/api/v1/images/stellar/prod/kyrenia-ship-hull-during-excavation.jpg?c=16x9&q=w_800,c_fill','Sign up for CNNs Wonder Theory science newsletter. Explore the universe with news on fascinating discoveries, scientific advancements and more.
A lone diverfirst laid eyes on the ancient Kyrenia shi… [+6426 chars]') was aborted: ERROR: duplicate key value violates unique constraint "current_headlines_table_pkey"
  Detail: Key (publishedat)=(2024-06-26T19:20:00Z) already exists.  Call getNextException to see other errors in the batch.
	at org.postgresql.jdbc.BatchResultHandler.handleError(BatchResultHandler.java:165)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2367)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:560)
	at org.postgresql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:893)
	at org.postgresql.jdbc.PgStatement.executeBatch(PgStatement.java:916)
	at org.postgresql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1684)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.savePartition(JdbcUtils.scala:751)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1(JdbcUtils.scala:902)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1$adapted(JdbcUtils.scala:901)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2(RDD.scala:1036)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2$adapted(RDD.scala:1036)
	at org.apache.spark.SparkContext.$anonfun$runJob$5(SparkContext.scala:2438)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:93)
	at org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:161)
	at org.apache.spark.scheduler.Task.run(Task.scala:141)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.postgresql.util.PSQLException: ERROR: duplicate key value violates unique constraint "current_headlines_table_pkey"
  Detail: Key (publishedat)=(2024-06-26T19:20:00Z) already exists.
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2676)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2366)
	... 21 more

Driver stacktrace:
	at org.apache.spark.scheduler.DAGScheduler.failJobAndIndependentStages(DAGScheduler.scala:2844)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$abortStage$2(DAGScheduler.scala:2780)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$abortStage$2$adapted(DAGScheduler.scala:2779)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at org.apache.spark.scheduler.DAGScheduler.abortStage(DAGScheduler.scala:2779)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$handleTaskSetFailed$1(DAGScheduler.scala:1242)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$handleTaskSetFailed$1$adapted(DAGScheduler.scala:1242)
	at scala.Option.foreach(Option.scala:407)
	at org.apache.spark.scheduler.DAGScheduler.handleTaskSetFailed(DAGScheduler.scala:1242)
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.doOnReceive(DAGScheduler.scala:3048)
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:2982)
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:2971)
	at org.apache.spark.util.EventLoop$$anon$1.run(EventLoop.scala:49)
	at org.apache.spark.scheduler.DAGScheduler.runJob(DAGScheduler.scala:984)
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2398)
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2419)
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2438)
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2463)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$1(RDD.scala:1036)
	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:151)
	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:112)
	at org.apache.spark.rdd.RDD.withScope(RDD.scala:407)
	at org.apache.spark.rdd.RDD.foreachPartition(RDD.scala:1034)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.saveTable(JdbcUtils.scala:901)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcRelationProvider.createRelation(JdbcRelationProvider.scala:70)
	at org.apache.spark.sql.execution.datasources.SaveIntoDataSourceCommand.run(SaveIntoDataSourceCommand.scala:48)
	at org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult$lzycompute(commands.scala:75)
	at org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult(commands.scala:73)
	at org.apache.spark.sql.execution.command.ExecutedCommandExec.executeCollect(commands.scala:84)
	at org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$1.$anonfun$applyOrElse$1(QueryExecution.scala:107)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$6(SQLExecution.scala:125)
	at org.apache.spark.sql.execution.SQLExecution$.withSQLConfPropagated(SQLExecution.scala:201)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$1(SQLExecution.scala:108)
	at org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:900)
	at org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:66)
	at org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$1.applyOrElse(QueryExecution.scala:107)
	at org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$1.applyOrElse(QueryExecution.scala:98)
	at org.apache.spark.sql.catalyst.trees.TreeNode.$anonfun$transformDownWithPruning$1(TreeNode.scala:461)
	at org.apache.spark.sql.catalyst.trees.CurrentOrigin$.withOrigin(origin.scala:76)
	at org.apache.spark.sql.catalyst.trees.TreeNode.transformDownWithPruning(TreeNode.scala:461)
	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.org$apache$spark$sql$catalyst$plans$logical$AnalysisHelper$$super$transformDownWithPruning(LogicalPlan.scala:32)
	at org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.transformDownWithPruning(AnalysisHelper.scala:267)
	at org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.transformDownWithPruning$(AnalysisHelper.scala:263)
	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.transformDownWithPruning(LogicalPlan.scala:32)
	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.transformDownWithPruning(LogicalPlan.scala:32)
	at org.apache.spark.sql.catalyst.trees.TreeNode.transformDown(TreeNode.scala:437)
	at org.apache.spark.sql.execution.QueryExecution.eagerlyExecuteCommands(QueryExecution.scala:98)
	at org.apache.spark.sql.execution.QueryExecution.commandExecuted$lzycompute(QueryExecution.scala:85)
	at org.apache.spark.sql.execution.QueryExecution.commandExecuted(QueryExecution.scala:83)
	at org.apache.spark.sql.execution.QueryExecution.assertCommandExecuted(QueryExecution.scala:142)
	at org.apache.spark.sql.DataFrameWriter.runCommand(DataFrameWriter.scala:859)
	at org.apache.spark.sql.DataFrameWriter.saveToV1Source(DataFrameWriter.scala:388)
	at org.apache.spark.sql.DataFrameWriter.saveInternal(DataFrameWriter.scala:361)
	at org.apache.spark.sql.DataFrameWriter.save(DataFrameWriter.scala:248)
	at org.apache.spark.sql.DataFrameWriter.jdbc(DataFrameWriter.scala:756)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)
	at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)
	at py4j.Gateway.invoke(Gateway.java:282)
	at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)
	at py4j.commands.CallCommand.execute(CallCommand.java:79)
	at py4j.ClientServerConnection.sendCommand(ClientServerConnection.java:244)
	at py4j.CallbackClient.sendCommand(CallbackClient.java:384)
	at py4j.CallbackClient.sendCommand(CallbackClient.java:356)
	at py4j.reflection.PythonProxyHandler.invoke(PythonProxyHandler.java:106)
	at jdk.proxy3/jdk.proxy3.$Proxy30.call(Unknown Source)
	at org.apache.spark.sql.execution.streaming.sources.PythonForeachBatchHelper$.$anonfun$callForeachBatch$1(ForeachBatchSink.scala:53)
	at org.apache.spark.sql.execution.streaming.sources.PythonForeachBatchHelper$.$anonfun$callForeachBatch$1$adapted(ForeachBatchSink.scala:53)
	at org.apache.spark.sql.execution.streaming.sources.ForeachBatchSink.addBatch(ForeachBatchSink.scala:34)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.$anonfun$runBatch$17(MicroBatchExecution.scala:732)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$6(SQLExecution.scala:125)
	at org.apache.spark.sql.execution.SQLExecution$.withSQLConfPropagated(SQLExecution.scala:201)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$1(SQLExecution.scala:108)
	at org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:900)
	at org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:66)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.$anonfun$runBatch$16(MicroBatchExecution.scala:729)
	at org.apache.spark.sql.execution.streaming.ProgressReporter.reportTimeTaken(ProgressReporter.scala:427)
	at org.apache.spark.sql.execution.streaming.ProgressReporter.reportTimeTaken$(ProgressReporter.scala:425)
	at org.apache.spark.sql.execution.streaming.StreamExecution.reportTimeTaken(StreamExecution.scala:67)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.runBatch(MicroBatchExecution.scala:729)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.$anonfun$runActivatedStream$2(MicroBatchExecution.scala:286)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at org.apache.spark.sql.execution.streaming.ProgressReporter.reportTimeTaken(ProgressReporter.scala:427)
	at org.apache.spark.sql.execution.streaming.ProgressReporter.reportTimeTaken$(ProgressReporter.scala:425)
	at org.apache.spark.sql.execution.streaming.StreamExecution.reportTimeTaken(StreamExecution.scala:67)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.$anonfun$runActivatedStream$1(MicroBatchExecution.scala:249)
	at org.apache.spark.sql.execution.streaming.SingleBatchExecutor.execute(TriggerExecutor.scala:39)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.runActivatedStream(MicroBatchExecution.scala:239)
	at org.apache.spark.sql.execution.streaming.StreamExecution.$anonfun$runStream$1(StreamExecution.scala:311)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:900)
	at org.apache.spark.sql.execution.streaming.StreamExecution.org$apache$spark$sql$execution$streaming$StreamExecution$$runStream(StreamExecution.scala:289)
	at org.apache.spark.sql.execution.streaming.StreamExecution$$anon$1.$anonfun$run$1(StreamExecution.scala:211)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at org.apache.spark.JobArtifactSet$.withActiveJobArtifactState(JobArtifactSet.scala:94)
	at org.apache.spark.sql.execution.streaming.StreamExecution$$anon$1.run(StreamExecution.scala:211)
Caused by: java.sql.BatchUpdateException: Batch entry 2 INSERT INTO current_headlines_table ("publishedat","source","author","title","description","url","urltoimage","content") VALUES ('2024-06-26T19:20:00Z','{"id":"cnn","name":"CNN"}','Taylor Nicioli','Decades after the famed Kyrenia shipwreck’s discovery, researchers have a new estimate of when it sank - CNN','The timeline of a Hellenistic Kyrenia shipwreck stumped researchers for decades. But thanks to a cache of ancient almonds, a new study may have a better estimate.','https://www.cnn.com/2024/06/26/science/kyrenia-shipwreck-radiocarbon-dating-almonds-scn/index.html','https://media.cnn.com/api/v1/images/stellar/prod/kyrenia-ship-hull-during-excavation.jpg?c=16x9&q=w_800,c_fill','Sign up for CNNs Wonder Theory science newsletter. Explore the universe with news on fascinating discoveries, scientific advancements and more.
A lone diverfirst laid eyes on the ancient Kyrenia shi… [+6426 chars]') was aborted: ERROR: duplicate key value violates unique constraint "current_headlines_table_pkey"
  Detail: Key (publishedat)=(2024-06-26T19:20:00Z) already exists.  Call getNextException to see other errors in the batch.
	at org.postgresql.jdbc.BatchResultHandler.handleError(BatchResultHandler.java:165)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2367)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:560)
	at org.postgresql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:893)
	at org.postgresql.jdbc.PgStatement.executeBatch(PgStatement.java:916)
	at org.postgresql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1684)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.savePartition(JdbcUtils.scala:751)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1(JdbcUtils.scala:902)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1$adapted(JdbcUtils.scala:901)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2(RDD.scala:1036)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2$adapted(RDD.scala:1036)
	at org.apache.spark.SparkContext.$anonfun$runJob$5(SparkContext.scala:2438)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:93)
	at org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:161)
	at org.apache.spark.scheduler.Task.run(Task.scala:141)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.postgresql.util.PSQLException: ERROR: duplicate key value violates unique constraint "current_headlines_table_pkey"
  Detail: Key (publishedat)=(2024-06-26T19:20:00Z) already exists.
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2676)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2366)
	... 21 more
[2024-06-28T21:56:08.009+0000] {docker.py:413} INFO - 2024-06-28 21:56:08,004:close:INFO:Closing down clientserver connection
[2024-06-28T21:56:08.030+0000] {docker.py:413} INFO - 24/06/28 21:56:08 INFO ConsumerCoordinator: [Consumer clientId=consumer-spark-kafka-source-170f9fb6-86e5-49a8-bf3a-577acc797302-1029605498-executor-1, groupId=spark-kafka-source-170f9fb6-86e5-49a8-bf3a-577acc797302-1029605498-executor] Resetting generation and member id due to: consumer pro-actively leaving the group
24/06/28 21:56:08 INFO ConsumerCoordinator: [Consumer clientId=consumer-spark-kafka-source-170f9fb6-86e5-49a8-bf3a-577acc797302-1029605498-executor-1, groupId=spark-kafka-source-170f9fb6-86e5-49a8-bf3a-577acc797302-1029605498-executor] Request joining group due to: consumer pro-actively leaving the group
[2024-06-28T21:56:08.030+0000] {docker.py:413} INFO - 24/06/28 21:56:08 INFO Metrics: Metrics scheduler closed
24/06/28 21:56:08 INFO Metrics: Closing reporter org.apache.kafka.common.metrics.JmxReporter
[2024-06-28T21:56:08.031+0000] {docker.py:413} INFO - 24/06/28 21:56:08 INFO Metrics: Metrics reporters closed
[2024-06-28T21:56:08.031+0000] {docker.py:413} INFO - 24/06/28 21:56:08 INFO AppInfoParser: App info kafka.consumer for consumer-spark-kafka-source-170f9fb6-86e5-49a8-bf3a-577acc797302-1029605498-executor-1 unregistered
[2024-06-28T21:56:08.032+0000] {docker.py:413} INFO - 24/06/28 21:56:08 INFO SparkContext: Invoking stop() from shutdown hook
[2024-06-28T21:56:08.032+0000] {docker.py:413} INFO - 24/06/28 21:56:08 INFO SparkContext: SparkContext is stopping with exitCode 0.
[2024-06-28T21:56:08.038+0000] {docker.py:413} INFO - 24/06/28 21:56:08 INFO SparkUI: Stopped Spark web UI at http://localhost:4040
[2024-06-28T21:56:08.044+0000] {docker.py:413} INFO - 24/06/28 21:56:08 INFO MapOutputTrackerMasterEndpoint: MapOutputTrackerMasterEndpoint stopped!
[2024-06-28T21:56:08.052+0000] {docker.py:413} INFO - 24/06/28 21:56:08 INFO MemoryStore: MemoryStore cleared
[2024-06-28T21:56:08.052+0000] {docker.py:413} INFO - 24/06/28 21:56:08 INFO BlockManager: BlockManager stopped
[2024-06-28T21:56:08.053+0000] {docker.py:413} INFO - 24/06/28 21:56:08 INFO BlockManagerMaster: BlockManagerMaster stopped
[2024-06-28T21:56:08.054+0000] {docker.py:413} INFO - 24/06/28 21:56:08 INFO OutputCommitCoordinator$OutputCommitCoordinatorEndpoint: OutputCommitCoordinator stopped!
[2024-06-28T21:56:08.059+0000] {docker.py:413} INFO - 24/06/28 21:56:08 INFO SparkContext: Successfully stopped SparkContext
[2024-06-28T21:56:08.059+0000] {docker.py:413} INFO - 24/06/28 21:56:08 INFO ShutdownHookManager: Shutdown hook called
[2024-06-28T21:56:08.060+0000] {docker.py:413} INFO - 24/06/28 21:56:08 INFO ShutdownHookManager: Deleting directory /tmp/spark-fa8688b5-f0d1-4ae7-aa45-51ddf0864ceb
[2024-06-28T21:56:08.061+0000] {docker.py:413} INFO - 24/06/28 21:56:08 INFO ShutdownHookManager: Deleting directory /tmp/temporary-437b2cd0-8b24-4745-ada9-7287aa909c5a
[2024-06-28T21:56:08.062+0000] {docker.py:413} INFO - 24/06/28 21:56:08 INFO ShutdownHookManager: Deleting directory /tmp/spark-fa8688b5-f0d1-4ae7-aa45-51ddf0864ceb/pyspark-4ceb3291-b524-4c08-ba3c-efb7db07d707
[2024-06-28T21:56:08.064+0000] {docker.py:413} INFO - 24/06/28 21:56:08 INFO ShutdownHookManager: Deleting directory /tmp/spark-44dcaac9-feba-4c43-bc97-96623520ba0d
[2024-06-28T21:56:08.295+0000] {taskinstance.py:1937} ERROR - Task failed with exception
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/providers/docker/operators/docker.py", line 486, in execute
    return self._run_image()
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/providers/docker/operators/docker.py", line 360, in _run_image
    return self._run_image_with_mounts(self.mounts, add_tmp_variable=False)
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/providers/docker/operators/docker.py", line 421, in _run_image_with_mounts
    raise DockerContainerFailedException(f"Docker container failed: {result!r}", logs=log_lines)
airflow.providers.docker.exceptions.DockerContainerFailedException: Docker container failed: {'StatusCode': 1}
[2024-06-28T21:56:08.300+0000] {taskinstance.py:1400} INFO - Marking task as UP_FOR_RETRY. dag_id=kafka_spark_dag, task_id=pyspark_consumer, execution_date=20240628T214030, start_date=20240628T214034, end_date=20240628T215608
[2024-06-28T21:56:08.321+0000] {standard_task_runner.py:104} ERROR - Failed to execute job 209 for task pyspark_consumer (Docker container failed: {'StatusCode': 1}; 12905)
[2024-06-28T21:56:08.351+0000] {local_task_job_runner.py:228} INFO - Task exited with return code 1
[2024-06-28T21:56:08.366+0000] {taskinstance.py:2778} INFO - 0 downstream tasks scheduled from follow-on schedule check
